CPU info:
    CPU Model Name: Intel(R) Xeon(R) CPU W3530 @ 2.80GHz
    Hardware threads: 4
    Total Memory: 12580404 kB
-------------------------------------------------------------------
=== Running C:\Program Files\Microsoft MPI\Bin\/mpiexec.exe -n 2 C:\jenkins\workspace\CNTK-Test-Windows-W1\x64\release\cntk.exe configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN/ParallelBM/cntk.cntk currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_cpu DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_cpu DeviceId=-1 timestamping=true numCPUThreads=2 precision=double speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]] stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_cpu/stderr
-------------------------------------------------------------------
Build info: 

		Built time: Jul 14 2016 05:09:58
		Last modified date: Wed Jul 13 07:57:26 2016
		Build type: Release
		Build target: GPU
		With 1bit-SGD: no
		Math lib: mkl
		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
		CUB_PATH: C:\src\cub-1.4.1
		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
		Build Branch: HEAD
		Build SHA1: 72bee394bf461e8f6f0feb593a8416c05f481957
		Built by svcphil on DPHAIM-22
		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
-------------------------------------------------------------------
Changed current directory to C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPIWrapper: initializing MPI
-------------------------------------------------------------------
Build info: 

		Built time: Jul 14 2016 05:09:58
		Last modified date: Wed Jul 13 07:57:26 2016
		Build type: Release
		Build target: GPU
		With 1bit-SGD: no
		Math lib: mkl
		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
		CUB_PATH: C:\src\cub-1.4.1
		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
		Build Branch: HEAD
		Build SHA1: 72bee394bf461e8f6f0feb593a8416c05f481957
		Built by svcphil on DPHAIM-22
		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
-------------------------------------------------------------------
Changed current directory to C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPIWrapper: initializing MPI
ping [requestnodes (before change)]: 2 nodes pinging each other
ping [requestnodes (before change)]: 2 nodes pinging each other
ping [requestnodes (before change)]: all 2 nodes responded
ping [requestnodes (before change)]: all 2 nodes responded
requestnodes [MPIWrapper]: using 2 out of 2 MPI nodes (2 requested); we (0) are in (participating)
requestnodes [MPIWrapper]: using 2 out of 2 MPI nodes (2 requested); we (1) are in (participating)
ping [requestnodes (after change)]: 2 nodes pinging each other
ping [requestnodes (after change)]: 2 nodes pinging each other
ping [requestnodes (after change)]: all 2 nodes responded
ping [requestnodes (after change)]: all 2 nodes responded
mpihelper: we are cog 0 in a gearbox of 2
mpihelper: we are cog 1 in a gearbox of 2
ping [mpihelper]: 2 nodes pinging each other
ping [mpihelper]: 2 nodes pinging each other
ping [mpihelper]: all 2 nodes responded
ping [mpihelper]: all 2 nodes responded
MPI Rank 0: 07/14/2016 05:42:43: Redirecting stderr to file C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_cpu/stderr_speechTrain.logrank0
MPI Rank 0: 07/14/2016 05:42:43: -------------------------------------------------------------------
MPI Rank 0: 07/14/2016 05:42:43: Build info: 
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:42:43: 		Built time: Jul 14 2016 05:09:58
MPI Rank 0: 07/14/2016 05:42:43: 		Last modified date: Wed Jul 13 07:57:26 2016
MPI Rank 0: 07/14/2016 05:42:43: 		Build type: Release
MPI Rank 0: 07/14/2016 05:42:43: 		Build target: GPU
MPI Rank 0: 07/14/2016 05:42:43: 		With 1bit-SGD: no
MPI Rank 0: 07/14/2016 05:42:43: 		Math lib: mkl
MPI Rank 0: 07/14/2016 05:42:43: 		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
MPI Rank 0: 07/14/2016 05:42:43: 		CUB_PATH: C:\src\cub-1.4.1
MPI Rank 0: 07/14/2016 05:42:43: 		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
MPI Rank 0: 07/14/2016 05:42:43: 		Build Branch: HEAD
MPI Rank 0: 07/14/2016 05:42:43: 		Build SHA1: 72bee394bf461e8f6f0feb593a8416c05f481957
MPI Rank 0: 07/14/2016 05:42:43: 		Built by svcphil on DPHAIM-22
MPI Rank 0: 07/14/2016 05:42:43: 		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
MPI Rank 0: 07/14/2016 05:42:43: -------------------------------------------------------------------
MPI Rank 0: 07/14/2016 05:42:44: -------------------------------------------------------------------
MPI Rank 0: 07/14/2016 05:42:44: GPU info:
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:42:44: 		Device[0]: cores = 2496; computeCapability = 5.2; type = "Quadro M4000"; memory = 8090 MB
MPI Rank 0: 07/14/2016 05:42:44: -------------------------------------------------------------------
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:42:44: Running on cntk-muc00 at 2016/07/14 05:42:44
MPI Rank 0: 07/14/2016 05:42:44: Command line: 
MPI Rank 0: C:\jenkins\workspace\CNTK-Test-Windows-W1\x64\release\cntk.exe  configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN/ParallelBM/cntk.cntk  currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data  RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_cpu  DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data  ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN  OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_cpu  DeviceId=-1  timestamping=true  numCPUThreads=2  precision=double  speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]  stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_cpu/stderr
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:42:44: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: 07/14/2016 05:42:44: precision = "float"
MPI Rank 0: command = speechTrain
MPI Rank 0: deviceId = $DeviceId$
MPI Rank 0: parallelTrain = true
MPI Rank 0: speechTrain = [
MPI Rank 0:     action = "train"
MPI Rank 0:     modelPath = "$RunDir$/models/cntkSpeech.dnn"
MPI Rank 0:     deviceId = $DeviceId$
MPI Rank 0:     traceLevel = 1
MPI Rank 0:     SimpleNetworkBuilder = [
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 0:         evalCriterion = "ErrorPrediction"
MPI Rank 0:         layerTypes = "Sigmoid"
MPI Rank 0:         initValueScale = 1.0
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         uniformInit = true
MPI Rank 0:         needPrior = true
MPI Rank 0:     ]
MPI Rank 0:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = 'CE'
MPI Rank 0:         evalCriterion = 'Err'
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 0:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 0:         featNorm = if applyMeanVarNorm
MPI Rank 0:                    then MeanVarNorm(features)
MPI Rank 0:                    else features
MPI Rank 0:         layers[layer:1..L-1] = if layer > 1
MPI Rank 0:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 0:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 0:         CE = if trainingCriterion == 'CE'
MPI Rank 0:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 0:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 0:         Err = if evalCriterion == 'Err' then
MPI Rank 0:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 0:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 0:         logPrior = LogPrior(labels)
MPI Rank 0:         // TODO: how to add a tag to an infix operation?
MPI Rank 0:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 0:     ]
MPI Rank 0:     SGD = [
MPI Rank 0:         epochSize = 20480
MPI Rank 0:         minibatchSize = 64:256:1024
MPI Rank 0:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 0:         numMBsToShowResult = 3
MPI Rank 0:         momentumPerMB = 0.9:0.656119
MPI Rank 0:         dropoutRate = 0.0
MPI Rank 0:         maxEpochs = 5
MPI Rank 0:         keepCheckPointFiles = true
MPI Rank 0:         clippingThresholdPerSample = 1#INF
MPI Rank 0:         ParallelTrain = [
MPI Rank 0:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 0:             distributedMBReading = true
MPI Rank 0:             syncPerfStats=1
MPI Rank 0:             BlockMomentumSGD = [
MPI Rank 0:                 blockSizePerWorker=2048
MPI Rank 0:                 resetSGDMomentum=true
MPI Rank 0:                 useNesterovMomentum=true
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:         AutoAdjust = [
MPI Rank 0:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 0:             loadBestModel = true
MPI Rank 0:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 0:             learnRateDecreaseFactor = 0.5
MPI Rank 0:             learnRateIncreaseFactor = 1.382
MPI Rank 0:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader = [
MPI Rank 0:         readerType = "HTKMLFReader"
MPI Rank 0:         readMethod = "blockRandomize"
MPI Rank 0:         miniBatchMode = "partial"
MPI Rank 0:         randomize = "auto"
MPI Rank 0:         verbosity = 0
MPI Rank 0:         features = [
MPI Rank 0:             dim = 363
MPI Rank 0:             type = "real"
MPI Rank 0:             scpFile = "glob_0000.scp"
MPI Rank 0:         ]
MPI Rank 0:         labels = [
MPI Rank 0:             mlfFile = "$DataDir$/glob_0000.mlf"
MPI Rank 0:             labelMappingFile = "$DataDir$/state.list"
MPI Rank 0:             labelDim = 132
MPI Rank 0:             labelType = "category"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0: ]
MPI Rank 0: currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 0: RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_cpu
MPI Rank 0: DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 0: ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN
MPI Rank 0: OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_cpu
MPI Rank 0: DeviceId=-1
MPI Rank 0: timestamping=true
MPI Rank 0: numCPUThreads=2
MPI Rank 0: precision=double
MPI Rank 0: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 0: stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_cpu/stderr
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:42:44: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:42:44: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: 07/14/2016 05:42:44: precision = "float"
MPI Rank 0: command = speechTrain
MPI Rank 0: deviceId = -1
MPI Rank 0: parallelTrain = true
MPI Rank 0: speechTrain = [
MPI Rank 0:     action = "train"
MPI Rank 0:     modelPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn"
MPI Rank 0:     deviceId = -1
MPI Rank 0:     traceLevel = 1
MPI Rank 0:     SimpleNetworkBuilder = [
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 0:         evalCriterion = "ErrorPrediction"
MPI Rank 0:         layerTypes = "Sigmoid"
MPI Rank 0:         initValueScale = 1.0
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         uniformInit = true
MPI Rank 0:         needPrior = true
MPI Rank 0:     ]
MPI Rank 0:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = 'CE'
MPI Rank 0:         evalCriterion = 'Err'
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 0:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 0:         featNorm = if applyMeanVarNorm
MPI Rank 0:                    then MeanVarNorm(features)
MPI Rank 0:                    else features
MPI Rank 0:         layers[layer:1..L-1] = if layer > 1
MPI Rank 0:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 0:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 0:         CE = if trainingCriterion == 'CE'
MPI Rank 0:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 0:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 0:         Err = if evalCriterion == 'Err' then
MPI Rank 0:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 0:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 0:         logPrior = LogPrior(labels)
MPI Rank 0:         // TODO: how to add a tag to an infix operation?
MPI Rank 0:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 0:     ]
MPI Rank 0:     SGD = [
MPI Rank 0:         epochSize = 20480
MPI Rank 0:         minibatchSize = 64:256:1024
MPI Rank 0:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 0:         numMBsToShowResult = 3
MPI Rank 0:         momentumPerMB = 0.9:0.656119
MPI Rank 0:         dropoutRate = 0.0
MPI Rank 0:         maxEpochs = 5
MPI Rank 0:         keepCheckPointFiles = true
MPI Rank 0:         clippingThresholdPerSample = 1#INF
MPI Rank 0:         ParallelTrain = [
MPI Rank 0:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 0:             distributedMBReading = true
MPI Rank 0:             syncPerfStats=1
MPI Rank 0:             BlockMomentumSGD = [
MPI Rank 0:                 blockSizePerWorker=2048
MPI Rank 0:                 resetSGDMomentum=true
MPI Rank 0:                 useNesterovMomentum=true
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:         AutoAdjust = [
MPI Rank 0:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 0:             loadBestModel = true
MPI Rank 0:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 0:             learnRateDecreaseFactor = 0.5
MPI Rank 0:             learnRateIncreaseFactor = 1.382
MPI Rank 0:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader = [
MPI Rank 0:         readerType = "HTKMLFReader"
MPI Rank 0:         readMethod = "blockRandomize"
MPI Rank 0:         miniBatchMode = "partial"
MPI Rank 0:         randomize = "auto"
MPI Rank 0:         verbosity = 0
MPI Rank 0:         features = [
MPI Rank 0:             dim = 363
MPI Rank 0:             type = "real"
MPI Rank 0:             scpFile = "glob_0000.scp"
MPI Rank 0:         ]
MPI Rank 0:         labels = [
MPI Rank 0:             mlfFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf"
MPI Rank 0:             labelMappingFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list"
MPI Rank 0:             labelDim = 132
MPI Rank 0:             labelType = "category"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0: ]
MPI Rank 0: currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 0: RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_cpu
MPI Rank 0: DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 0: ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN
MPI Rank 0: OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_cpu
MPI Rank 0: DeviceId=-1
MPI Rank 0: timestamping=true
MPI Rank 0: numCPUThreads=2
MPI Rank 0: precision=double
MPI Rank 0: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 0: stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_cpu/stderr
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:42:44: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:42:44: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: configparameters: cntk.cntk:command=speechTrain
MPI Rank 0: configparameters: cntk.cntk:ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN
MPI Rank 0: configparameters: cntk.cntk:currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 0: configparameters: cntk.cntk:DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 0: configparameters: cntk.cntk:deviceId=-1
MPI Rank 0: configparameters: cntk.cntk:numCPUThreads=2
MPI Rank 0: configparameters: cntk.cntk:OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_cpu
MPI Rank 0: configparameters: cntk.cntk:parallelTrain=true
MPI Rank 0: configparameters: cntk.cntk:precision=double
MPI Rank 0: configparameters: cntk.cntk:RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_cpu
MPI Rank 0: configparameters: cntk.cntk:speechTrain=[
MPI Rank 0:     action = "train"
MPI Rank 0:     modelPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn"
MPI Rank 0:     deviceId = -1
MPI Rank 0:     traceLevel = 1
MPI Rank 0:     SimpleNetworkBuilder = [
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 0:         evalCriterion = "ErrorPrediction"
MPI Rank 0:         layerTypes = "Sigmoid"
MPI Rank 0:         initValueScale = 1.0
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         uniformInit = true
MPI Rank 0:         needPrior = true
MPI Rank 0:     ]
MPI Rank 0:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = 'CE'
MPI Rank 0:         evalCriterion = 'Err'
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 0:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 0:         featNorm = if applyMeanVarNorm
MPI Rank 0:                    then MeanVarNorm(features)
MPI Rank 0:                    else features
MPI Rank 0:         layers[layer:1..L-1] = if layer > 1
MPI Rank 0:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 0:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 0:         CE = if trainingCriterion == 'CE'
MPI Rank 0:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 0:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 0:         Err = if evalCriterion == 'Err' then
MPI Rank 0:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 0:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 0:         logPrior = LogPrior(labels)
MPI Rank 0:         // TODO: how to add a tag to an infix operation?
MPI Rank 0:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 0:     ]
MPI Rank 0:     SGD = [
MPI Rank 0:         epochSize = 20480
MPI Rank 0:         minibatchSize = 64:256:1024
MPI Rank 0:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 0:         numMBsToShowResult = 3
MPI Rank 0:         momentumPerMB = 0.9:0.656119
MPI Rank 0:         dropoutRate = 0.0
MPI Rank 0:         maxEpochs = 5
MPI Rank 0:         keepCheckPointFiles = true
MPI Rank 0:         clippingThresholdPerSample = 1#INF
MPI Rank 0:         ParallelTrain = [
MPI Rank 0:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 0:             distributedMBReading = true
MPI Rank 0:             syncPerfStats=1
MPI Rank 0:             BlockMomentumSGD = [
MPI Rank 0:                 blockSizePerWorker=2048
MPI Rank 0:                 resetSGDMomentum=true
MPI Rank 0:                 useNesterovMomentum=true
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:         AutoAdjust = [
MPI Rank 0:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 0:             loadBestModel = true
MPI Rank 0:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 0:             learnRateDecreaseFactor = 0.5
MPI Rank 0:             learnRateIncreaseFactor = 1.382
MPI Rank 0:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader = [
MPI Rank 0:         readerType = "HTKMLFReader"
MPI Rank 0:         readMethod = "blockRandomize"
MPI Rank 0:         miniBatchMode = "partial"
MPI Rank 0:         randomize = "auto"
MPI Rank 0:         verbosity = 0
MPI Rank 0:         features = [
MPI Rank 0:             dim = 363
MPI Rank 0:             type = "real"
MPI Rank 0:             scpFile = "glob_0000.scp"
MPI Rank 0:         ]
MPI Rank 0:         labels = [
MPI Rank 0:             mlfFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf"
MPI Rank 0:             labelMappingFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list"
MPI Rank 0:             labelDim = 132
MPI Rank 0:             labelType = "category"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0: ] [SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 0: 
MPI Rank 0: configparameters: cntk.cntk:stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_cpu/stderr
MPI Rank 0: configparameters: cntk.cntk:timestamping=true
MPI Rank 0: 07/14/2016 05:42:44: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 07/14/2016 05:42:44: Commands: speechTrain
MPI Rank 0: 07/14/2016 05:42:44: Precision = "double"
MPI Rank 0: 07/14/2016 05:42:44: Using 2 CPU threads.
MPI Rank 0: 07/14/2016 05:42:44: CNTKModelPath: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn
MPI Rank 0: 07/14/2016 05:42:44: CNTKCommandTrainInfo: speechTrain : 5
MPI Rank 0: 07/14/2016 05:42:44: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 5
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:42:44: ##############################################################################
MPI Rank 0: 07/14/2016 05:42:44: #                                                                            #
MPI Rank 0: 07/14/2016 05:42:44: # Action "train"                                                             #
MPI Rank 0: 07/14/2016 05:42:44: #                                                                            #
MPI Rank 0: 07/14/2016 05:42:44: ##############################################################################
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:42:44: CNTKCommandTrainBegin: speechTrain
MPI Rank 0: SimpleNetworkBuilder Using CPU
MPI Rank 0: reading script file glob_0000.scp ... 948 entries
MPI Rank 0: total 132 state names in state list C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list
MPI Rank 0: htkmlfreader: reading MLF file C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf ... total 948 entries
MPI Rank 0: ...............................................................................................feature set 0: 252734 frames in 948 out of 948 utterances
MPI Rank 0: label set 0: 129 classes
MPI Rank 0: minibatchutterancesource: 948 utterances grouped into 3 chunks, av. chunk size: 316.0 utterances, 84244.7 frames
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:42:44: Creating virgin network.
MPI Rank 0: 
MPI Rank 0: Post-processing network...
MPI Rank 0: 
MPI Rank 0: 7 roots:
MPI Rank 0: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
MPI Rank 0: 	EvalErrorPrediction = ErrorPrediction()
MPI Rank 0: 	InvStdOfFeatures = InvStdDev()
MPI Rank 0: 	MeanOfFeatures = Mean()
MPI Rank 0: 	PosteriorProb = Softmax()
MPI Rank 0: 	Prior = Mean()
MPI Rank 0: 	ScaledLogLikelihood = Minus()
MPI Rank 0: 
MPI Rank 0: Validating network. 25 nodes to process in pass 1.
MPI Rank 0: 
MPI Rank 0: Validating --> labels = InputValue() :  -> [132 x *]
MPI Rank 0: Validating --> W2 = LearnableParameter() :  -> [132 x 512]
MPI Rank 0: Validating --> W1 = LearnableParameter() :  -> [512 x 512]
MPI Rank 0: Validating --> W0 = LearnableParameter() :  -> [512 x 363]
MPI Rank 0: Validating --> features = InputValue() :  -> [363 x *]
MPI Rank 0: Validating --> MeanOfFeatures = Mean (features) : [363 x *] -> [363]
MPI Rank 0: Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *] -> [363]
MPI Rank 0: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *], [363], [363] -> [363 x *]
MPI Rank 0: Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [512 x 363], [363 x *] -> [512 x *]
MPI Rank 0: Validating --> B0 = LearnableParameter() :  -> [512 x 1]
MPI Rank 0: Validating --> W0*features+B0 = Plus (W0*features, B0) : [512 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 0: Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 0: Validating --> W1*H1 = Times (W1, H1) : [512 x 512], [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 0: Validating --> B1 = LearnableParameter() :  -> [512 x 1]
MPI Rank 0: Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [512 x 1 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 0: Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 0: Validating --> W2*H1 = Times (W2, H2) : [132 x 512], [512 x 1 x *] -> [132 x 1 x *]
MPI Rank 0: Validating --> B2 = LearnableParameter() :  -> [132 x 1]
MPI Rank 0: Validating --> HLast = Plus (W2*H1, B2) : [132 x 1 x *], [132 x 1] -> [132 x 1 x *]
MPI Rank 0: Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 0: Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 0: Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *] -> [132 x 1 x *]
MPI Rank 0: Validating --> Prior = Mean (labels) : [132 x *] -> [132]
MPI Rank 0: Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
MPI Rank 0: Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *], [132] -> [132 x 1 x *]
MPI Rank 0: 
MPI Rank 0: Validating network. 17 nodes to process in pass 2.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: Validating network, final pass.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 12 out of 25 nodes do not share the minibatch layout with the input data.
MPI Rank 0: 
MPI Rank 0: Post-processing network complete.
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:42:44: Created model with 25 nodes on CPU.
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:42:44: Training criterion node(s):
MPI Rank 0: 07/14/2016 05:42:44: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:42:44: Evaluation criterion node(s):
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:42:44: 	EvalErrorPrediction = ErrorPrediction
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: Allocating matrices for forward and/or backward propagation.
MPI Rank 0: 
MPI Rank 0: Memory Sharing Structure:
MPI Rank 0: 
MPI Rank 0: 0000000000000000: {[EvalErrorPrediction Gradient[1]] [InvStdOfFeatures Gradient[363]] [LogOfPrior Gradient[132]] [MVNormalizedFeatures Gradient[363 x *]] [MeanOfFeatures Gradient[363]] [PosteriorProb Gradient[132 x 1 x *]] [PosteriorProb Value[132 x 1 x *]] [Prior Gradient[132]] [ScaledLogLikelihood Gradient[132 x 1 x *]] [features Gradient[363 x *]] [labels Gradient[132 x *]] }
MPI Rank 0: 0000009EC6580C00: {[MeanOfFeatures Value[363]] }
MPI Rank 0: 0000009EC6580D40: {[features Value[363 x *]] }
MPI Rank 0: 0000009EC6580DE0: {[InvStdOfFeatures Value[363]] }
MPI Rank 0: 0000009EC65812E0: {[B0 Value[512 x 1]] }
MPI Rank 0: 0000009EC65814C0: {[W0 Value[512 x 363]] }
MPI Rank 0: 0000009EC6581920: {[W1 Value[512 x 512]] }
MPI Rank 0: 0000009EE0DCD820: {[H1 Value[512 x 1 x *]] [W0*features Gradient[512 x *]] }
MPI Rank 0: 0000009EE0DCD8C0: {[W2 Value[132 x 512]] }
MPI Rank 0: 0000009EE0DCD960: {[B0 Gradient[512 x 1]] [H1 Gradient[512 x 1 x *]] [W1*H1+B1 Gradient[512 x 1 x *]] [W2*H1 Value[132 x 1 x *]] }
MPI Rank 0: 0000009EE0DCDA00: {[CrossEntropyWithSoftmax Value[1]] }
MPI Rank 0: 0000009EE0DCDB40: {[MVNormalizedFeatures Value[363 x *]] }
MPI Rank 0: 0000009EE0DCDD20: {[ScaledLogLikelihood Value[132 x 1 x *]] }
MPI Rank 0: 0000009EE0DCDF00: {[LogOfPrior Value[132]] }
MPI Rank 0: 0000009EE0DCE040: {[EvalErrorPrediction Value[1]] }
MPI Rank 0: 0000009EE0DCE2C0: {[CrossEntropyWithSoftmax Gradient[1]] }
MPI Rank 0: 0000009EE0DCE400: {[B2 Value[132 x 1]] }
MPI Rank 0: 0000009EE0DCE4A0: {[W0 Gradient[512 x 363]] [W0*features+B0 Value[512 x 1 x *]] }
MPI Rank 0: 0000009EE0DCE5E0: {[B1 Value[512 x 1]] }
MPI Rank 0: 0000009EE0DCE680: {[W0*features Value[512 x *]] }
MPI Rank 0: 0000009EE0DCE900: {[W0*features+B0 Gradient[512 x 1 x *]] [W1*H1 Value[512 x 1 x *]] }
MPI Rank 0: 0000009EE0DCE9A0: {[W1 Gradient[512 x 512]] [W1*H1+B1 Value[512 x 1 x *]] }
MPI Rank 0: 0000009EE0DCEA40: {[H2 Value[512 x 1 x *]] [W1*H1 Gradient[512 x 1 x *]] }
MPI Rank 0: 0000009EE0DCEB80: {[B1 Gradient[512 x 1]] [H2 Gradient[512 x 1 x *]] [HLast Gradient[132 x 1 x *]] }
MPI Rank 0: 0000009EE0DCEC20: {[labels Value[132 x *]] }
MPI Rank 0: 0000009EE0DCECC0: {[W2*H1 Gradient[132 x 1 x *]] }
MPI Rank 0: 0000009EE0DCED60: {[B2 Gradient[132 x 1]] }
MPI Rank 0: 0000009EE0DCF120: {[HLast Value[132 x 1 x *]] [W2 Gradient[132 x 512]] }
MPI Rank 0: 0000009EE0DCF260: {[Prior Value[132]] }
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:42:44: Precomputing --> 3 PreCompute nodes found.
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:42:44: 	MeanOfFeatures = Mean()
MPI Rank 0: 07/14/2016 05:42:44: 	InvStdOfFeatures = InvStdDev()
MPI Rank 0: 07/14/2016 05:42:44: 	Prior = Mean()
MPI Rank 0: minibatchiterator: epoch 0: frames [0..252734] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 0: requiredata: determined feature kind as 33-dimensional 'USER' with frame shift 10.0 ms
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:42:46: Precomputing --> Completed.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:42:46: Starting Epoch 1: learning rate per sample = 0.015625  effective momentum = 0.900000  momentum as time constant = 607.4 samples
MPI Rank 0: minibatchiterator: epoch 0: frames [0..20480] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:42:46: Starting minibatch loop.
MPI Rank 0: 07/14/2016 05:42:47:  Epoch[ 1 of 5]-Minibatch[   1-   3, 0.94%]: CrossEntropyWithSoftmax = 4.60890820 * 192; EvalErrorPrediction = 0.95312500 * 192; time = 0.1180s; samplesPerSecond = 1626.9
MPI Rank 0: 07/14/2016 05:42:47:  Epoch[ 1 of 5]-Minibatch[   4-   6, 1.88%]: CrossEntropyWithSoftmax = 4.52716679 * 192; EvalErrorPrediction = 0.92187500 * 192; time = 0.1195s; samplesPerSecond = 1606.0
MPI Rank 0: 07/14/2016 05:42:47:  Epoch[ 1 of 5]-Minibatch[   7-   9, 2.81%]: CrossEntropyWithSoftmax = 4.33660175 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.1253s; samplesPerSecond = 1531.8
MPI Rank 0: 07/14/2016 05:42:47:  Epoch[ 1 of 5]-Minibatch[  10-  12, 3.75%]: CrossEntropyWithSoftmax = 4.32573214 * 192; EvalErrorPrediction = 0.90104167 * 192; time = 0.1211s; samplesPerSecond = 1585.5
MPI Rank 0: 07/14/2016 05:42:47:  Epoch[ 1 of 5]-Minibatch[  13-  15, 4.69%]: CrossEntropyWithSoftmax = 4.35436418 * 192; EvalErrorPrediction = 0.90625000 * 192; time = 0.1130s; samplesPerSecond = 1698.9
MPI Rank 0: 07/14/2016 05:42:47:  Epoch[ 1 of 5]-Minibatch[  16-  18, 5.63%]: CrossEntropyWithSoftmax = 4.08519364 * 192; EvalErrorPrediction = 0.87500000 * 192; time = 0.1216s; samplesPerSecond = 1578.3
MPI Rank 0: 07/14/2016 05:42:47:  Epoch[ 1 of 5]-Minibatch[  19-  21, 6.56%]: CrossEntropyWithSoftmax = 4.00677380 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.1187s; samplesPerSecond = 1617.8
MPI Rank 0: 07/14/2016 05:42:47:  Epoch[ 1 of 5]-Minibatch[  22-  24, 7.50%]: CrossEntropyWithSoftmax = 4.07175221 * 192; EvalErrorPrediction = 0.86979167 * 192; time = 0.1123s; samplesPerSecond = 1709.4
MPI Rank 0: 07/14/2016 05:42:47:  Epoch[ 1 of 5]-Minibatch[  25-  27, 8.44%]: CrossEntropyWithSoftmax = 3.92954318 * 192; EvalErrorPrediction = 0.81770833 * 192; time = 0.1190s; samplesPerSecond = 1613.0
MPI Rank 0: 07/14/2016 05:42:48:  Epoch[ 1 of 5]-Minibatch[  28-  30, 9.38%]: CrossEntropyWithSoftmax = 3.86117205 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.1134s; samplesPerSecond = 1693.0
MPI Rank 0: 07/14/2016 05:42:48:  Epoch[ 1 of 5]-Minibatch[  31-  33, 10.31%]: CrossEntropyWithSoftmax = 3.93465921 * 192; EvalErrorPrediction = 0.90625000 * 192; time = 0.1191s; samplesPerSecond = 1611.9
MPI Rank 0: 07/14/2016 05:42:48:  Epoch[ 1 of 5]-Minibatch[  34-  36, 11.25%]: CrossEntropyWithSoftmax = 4.12618509 * 192; EvalErrorPrediction = 0.92187500 * 192; time = 0.1170s; samplesPerSecond = 1640.3
MPI Rank 0: 07/14/2016 05:42:48:  Epoch[ 1 of 5]-Minibatch[  37-  39, 12.19%]: CrossEntropyWithSoftmax = 3.70583042 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.1158s; samplesPerSecond = 1658.3
MPI Rank 0: 07/14/2016 05:42:48:  Epoch[ 1 of 5]-Minibatch[  40-  42, 13.13%]: CrossEntropyWithSoftmax = 3.88217192 * 192; EvalErrorPrediction = 0.90104167 * 192; time = 0.1209s; samplesPerSecond = 1588.4
MPI Rank 0: 07/14/2016 05:42:48:  Epoch[ 1 of 5]-Minibatch[  43-  45, 14.06%]: CrossEntropyWithSoftmax = 3.87616084 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.1185s; samplesPerSecond = 1620.4
MPI Rank 0: 07/14/2016 05:42:48:  Epoch[ 1 of 5]-Minibatch[  46-  48, 15.00%]: CrossEntropyWithSoftmax = 3.85875612 * 192; EvalErrorPrediction = 0.90625000 * 192; time = 0.1174s; samplesPerSecond = 1635.3
MPI Rank 0: 07/14/2016 05:42:48:  Epoch[ 1 of 5]-Minibatch[  49-  51, 15.94%]: CrossEntropyWithSoftmax = 3.78648456 * 192; EvalErrorPrediction = 0.95833333 * 192; time = 0.1177s; samplesPerSecond = 1631.3
MPI Rank 0: 07/14/2016 05:42:49:  Epoch[ 1 of 5]-Minibatch[  52-  54, 16.88%]: CrossEntropyWithSoftmax = 3.62874694 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.1131s; samplesPerSecond = 1697.9
MPI Rank 0: 07/14/2016 05:42:49:  Epoch[ 1 of 5]-Minibatch[  55-  57, 17.81%]: CrossEntropyWithSoftmax = 3.66446492 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.1180s; samplesPerSecond = 1626.5
MPI Rank 0: 07/14/2016 05:42:49:  Epoch[ 1 of 5]-Minibatch[  58-  60, 18.75%]: CrossEntropyWithSoftmax = 3.79215195 * 192; EvalErrorPrediction = 0.90625000 * 192; time = 0.1219s; samplesPerSecond = 1574.8
MPI Rank 0: 07/14/2016 05:42:49:  Epoch[ 1 of 5]-Minibatch[  61-  63, 19.69%]: CrossEntropyWithSoftmax = 3.43885126 * 192; EvalErrorPrediction = 0.84375000 * 192; time = 0.1127s; samplesPerSecond = 1703.8
MPI Rank 0: 07/14/2016 05:42:49:  Epoch[ 1 of 5]-Minibatch[  64-  66, 20.63%]: CrossEntropyWithSoftmax = 3.50156326 * 192; EvalErrorPrediction = 0.81770833 * 192; time = 0.1185s; samplesPerSecond = 1620.4
MPI Rank 0: 07/14/2016 05:42:49:  Epoch[ 1 of 5]-Minibatch[  67-  69, 21.56%]: CrossEntropyWithSoftmax = 3.52543190 * 192; EvalErrorPrediction = 0.82291667 * 192; time = 0.1189s; samplesPerSecond = 1614.5
MPI Rank 0: 07/14/2016 05:42:49:  Epoch[ 1 of 5]-Minibatch[  70-  72, 22.50%]: CrossEntropyWithSoftmax = 3.58322877 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.1159s; samplesPerSecond = 1656.3
MPI Rank 0: 07/14/2016 05:42:49:  Epoch[ 1 of 5]-Minibatch[  73-  75, 23.44%]: CrossEntropyWithSoftmax = 3.61849156 * 192; EvalErrorPrediction = 0.85937500 * 192; time = 0.1184s; samplesPerSecond = 1621.9
MPI Rank 0: 07/14/2016 05:42:49:  Epoch[ 1 of 5]-Minibatch[  76-  78, 24.38%]: CrossEntropyWithSoftmax = 3.45622012 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.1133s; samplesPerSecond = 1695.0
MPI Rank 0: 07/14/2016 05:42:50:  Epoch[ 1 of 5]-Minibatch[  79-  81, 25.31%]: CrossEntropyWithSoftmax = 3.43723757 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.1189s; samplesPerSecond = 1614.8
MPI Rank 0: 07/14/2016 05:42:50:  Epoch[ 1 of 5]-Minibatch[  82-  84, 26.25%]: CrossEntropyWithSoftmax = 3.36631241 * 192; EvalErrorPrediction = 0.77083333 * 192; time = 0.1210s; samplesPerSecond = 1586.3
MPI Rank 0: 07/14/2016 05:42:50:  Epoch[ 1 of 5]-Minibatch[  85-  87, 27.19%]: CrossEntropyWithSoftmax = 3.39051228 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.1123s; samplesPerSecond = 1710.0
MPI Rank 0: 07/14/2016 05:42:50:  Epoch[ 1 of 5]-Minibatch[  88-  90, 28.13%]: CrossEntropyWithSoftmax = 3.20390400 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.1185s; samplesPerSecond = 1620.5
MPI Rank 0: 07/14/2016 05:42:50:  Epoch[ 1 of 5]-Minibatch[  91-  93, 29.06%]: CrossEntropyWithSoftmax = 3.49475100 * 192; EvalErrorPrediction = 0.78645833 * 192; time = 0.1138s; samplesPerSecond = 1686.8
MPI Rank 0: 07/14/2016 05:42:50:  Epoch[ 1 of 5]-Minibatch[  94-  96, 30.00%]: CrossEntropyWithSoftmax = 3.47041320 * 192; EvalErrorPrediction = 0.79166667 * 192; time = 0.1186s; samplesPerSecond = 1619.2
MPI Rank 0: 07/14/2016 05:42:50:  Epoch[ 1 of 5]-Minibatch[  97-  99, 30.94%]: CrossEntropyWithSoftmax = 3.57940439 * 192; EvalErrorPrediction = 0.81250000 * 192; time = 0.1208s; samplesPerSecond = 1589.0
MPI Rank 0: 07/14/2016 05:42:50:  Epoch[ 1 of 5]-Minibatch[ 100- 102, 31.87%]: CrossEntropyWithSoftmax = 3.52233938 * 192; EvalErrorPrediction = 0.82812500 * 192; time = 0.1129s; samplesPerSecond = 1699.9
MPI Rank 0: 07/14/2016 05:42:51:  Epoch[ 1 of 5]-Minibatch[ 103- 105, 32.81%]: CrossEntropyWithSoftmax = 3.43772986 * 192; EvalErrorPrediction = 0.84895833 * 192; time = 0.1193s; samplesPerSecond = 1609.9
MPI Rank 0: 07/14/2016 05:42:51:  Epoch[ 1 of 5]-Minibatch[ 106- 108, 33.75%]: CrossEntropyWithSoftmax = 2.93817600 * 192; EvalErrorPrediction = 0.75000000 * 192; time = 0.1203s; samplesPerSecond = 1595.7
MPI Rank 0: 07/14/2016 05:42:51:  Epoch[ 1 of 5]-Minibatch[ 109- 111, 34.69%]: CrossEntropyWithSoftmax = 3.24865153 * 192; EvalErrorPrediction = 0.78645833 * 192; time = 0.1129s; samplesPerSecond = 1700.8
MPI Rank 0: 07/14/2016 05:42:51:  Epoch[ 1 of 5]-Minibatch[ 112- 114, 35.63%]: CrossEntropyWithSoftmax = 3.33241490 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.1194s; samplesPerSecond = 1608.1
MPI Rank 0: 07/14/2016 05:42:51:  Epoch[ 1 of 5]-Minibatch[ 115- 117, 36.56%]: CrossEntropyWithSoftmax = 3.26380454 * 192; EvalErrorPrediction = 0.81770833 * 192; time = 0.1206s; samplesPerSecond = 1591.9
MPI Rank 0: 07/14/2016 05:42:51:  Epoch[ 1 of 5]-Minibatch[ 118- 120, 37.50%]: CrossEntropyWithSoftmax = 3.37946974 * 192; EvalErrorPrediction = 0.80208333 * 192; time = 0.1138s; samplesPerSecond = 1687.5
MPI Rank 0: 07/14/2016 05:42:51:  Epoch[ 1 of 5]-Minibatch[ 121- 123, 38.44%]: CrossEntropyWithSoftmax = 3.32789345 * 192; EvalErrorPrediction = 0.80208333 * 192; time = 0.1207s; samplesPerSecond = 1591.1
MPI Rank 0: 07/14/2016 05:42:51:  Epoch[ 1 of 5]-Minibatch[ 124- 126, 39.38%]: CrossEntropyWithSoftmax = 3.07664184 * 192; EvalErrorPrediction = 0.76562500 * 192; time = 0.1188s; samplesPerSecond = 1615.7
MPI Rank 0: 07/14/2016 05:42:51:  Epoch[ 1 of 5]-Minibatch[ 127- 129, 40.31%]: CrossEntropyWithSoftmax = 3.17477588 * 192; EvalErrorPrediction = 0.74479167 * 192; time = 0.1183s; samplesPerSecond = 1622.5
MPI Rank 0: 07/14/2016 05:42:52:  Epoch[ 1 of 5]-Minibatch[ 130- 132, 41.25%]: CrossEntropyWithSoftmax = 3.01233572 * 192; EvalErrorPrediction = 0.71875000 * 192; time = 0.1137s; samplesPerSecond = 1689.0
MPI Rank 0: 07/14/2016 05:42:52:  Epoch[ 1 of 5]-Minibatch[ 133- 135, 42.19%]: CrossEntropyWithSoftmax = 3.20672882 * 192; EvalErrorPrediction = 0.81770833 * 192; time = 0.1221s; samplesPerSecond = 1571.9
MPI Rank 0: 07/14/2016 05:42:52:  Epoch[ 1 of 5]-Minibatch[ 136- 138, 43.13%]: CrossEntropyWithSoftmax = 3.11087078 * 192; EvalErrorPrediction = 0.82812500 * 192; time = 0.1129s; samplesPerSecond = 1700.8
MPI Rank 0: 07/14/2016 05:42:52:  Epoch[ 1 of 5]-Minibatch[ 139- 141, 44.06%]: CrossEntropyWithSoftmax = 2.97524024 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.1216s; samplesPerSecond = 1578.8
MPI Rank 0: 07/14/2016 05:42:52:  Epoch[ 1 of 5]-Minibatch[ 142- 144, 45.00%]: CrossEntropyWithSoftmax = 3.16993860 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.1191s; samplesPerSecond = 1612.0
MPI Rank 0: 07/14/2016 05:42:52:  Epoch[ 1 of 5]-Minibatch[ 145- 147, 45.94%]: CrossEntropyWithSoftmax = 3.06069782 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.1131s; samplesPerSecond = 1697.4
MPI Rank 0: 07/14/2016 05:42:52:  Epoch[ 1 of 5]-Minibatch[ 148- 150, 46.88%]: CrossEntropyWithSoftmax = 3.02104665 * 192; EvalErrorPrediction = 0.71354167 * 192; time = 0.1192s; samplesPerSecond = 1611.2
MPI Rank 0: 07/14/2016 05:42:52:  Epoch[ 1 of 5]-Minibatch[ 151- 153, 47.81%]: CrossEntropyWithSoftmax = 2.89479193 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.1116s; samplesPerSecond = 1720.1
MPI Rank 0: 07/14/2016 05:42:53:  Epoch[ 1 of 5]-Minibatch[ 154- 156, 48.75%]: CrossEntropyWithSoftmax = 3.05581089 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.1199s; samplesPerSecond = 1600.7
MPI Rank 0: 07/14/2016 05:42:53:  Epoch[ 1 of 5]-Minibatch[ 157- 159, 49.69%]: CrossEntropyWithSoftmax = 2.81580270 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.1207s; samplesPerSecond = 1590.8
MPI Rank 0: 07/14/2016 05:42:53:  Epoch[ 1 of 5]-Minibatch[ 160- 162, 50.63%]: CrossEntropyWithSoftmax = 2.96542964 * 192; EvalErrorPrediction = 0.73437500 * 192; time = 0.1124s; samplesPerSecond = 1707.8
MPI Rank 0: 07/14/2016 05:42:53:  Epoch[ 1 of 5]-Minibatch[ 163- 165, 51.56%]: CrossEntropyWithSoftmax = 2.80446480 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.1184s; samplesPerSecond = 1621.3
MPI Rank 0: 07/14/2016 05:42:53:  Epoch[ 1 of 5]-Minibatch[ 166- 168, 52.50%]: CrossEntropyWithSoftmax = 2.98588565 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.1130s; samplesPerSecond = 1698.9
MPI Rank 0: 07/14/2016 05:42:53:  Epoch[ 1 of 5]-Minibatch[ 169- 171, 53.44%]: CrossEntropyWithSoftmax = 2.83126023 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.1185s; samplesPerSecond = 1620.2
MPI Rank 0: 07/14/2016 05:42:53:  Epoch[ 1 of 5]-Minibatch[ 172- 174, 54.37%]: CrossEntropyWithSoftmax = 2.65390849 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.1132s; samplesPerSecond = 1696.2
MPI Rank 0: 07/14/2016 05:42:53:  Epoch[ 1 of 5]-Minibatch[ 175- 177, 55.31%]: CrossEntropyWithSoftmax = 2.78675476 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.1189s; samplesPerSecond = 1614.8
MPI Rank 0: 07/14/2016 05:42:53:  Epoch[ 1 of 5]-Minibatch[ 178- 180, 56.25%]: CrossEntropyWithSoftmax = 2.75042547 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.1204s; samplesPerSecond = 1595.0
MPI Rank 0: 07/14/2016 05:42:54:  Epoch[ 1 of 5]-Minibatch[ 181- 183, 57.19%]: CrossEntropyWithSoftmax = 2.65031287 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.1123s; samplesPerSecond = 1709.3
MPI Rank 0: 07/14/2016 05:42:54:  Epoch[ 1 of 5]-Minibatch[ 184- 186, 58.13%]: CrossEntropyWithSoftmax = 2.85962626 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.1188s; samplesPerSecond = 1615.5
MPI Rank 0: 07/14/2016 05:42:54:  Epoch[ 1 of 5]-Minibatch[ 187- 189, 59.06%]: CrossEntropyWithSoftmax = 2.61674669 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.1219s; samplesPerSecond = 1574.9
MPI Rank 0: 07/14/2016 05:42:54:  Epoch[ 1 of 5]-Minibatch[ 190- 192, 60.00%]: CrossEntropyWithSoftmax = 2.59389525 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.1123s; samplesPerSecond = 1709.1
MPI Rank 0: 07/14/2016 05:42:54:  Epoch[ 1 of 5]-Minibatch[ 193- 195, 60.94%]: CrossEntropyWithSoftmax = 2.72402489 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.1188s; samplesPerSecond = 1616.1
MPI Rank 0: 07/14/2016 05:42:54:  Epoch[ 1 of 5]-Minibatch[ 196- 198, 61.88%]: CrossEntropyWithSoftmax = 2.66031776 * 192; EvalErrorPrediction = 0.67187500 * 192; time = 0.1224s; samplesPerSecond = 1569.2
MPI Rank 0: 07/14/2016 05:42:54:  Epoch[ 1 of 5]-Minibatch[ 199- 201, 62.81%]: CrossEntropyWithSoftmax = 2.70495981 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.1101s; samplesPerSecond = 1743.8
MPI Rank 0: 07/14/2016 05:42:54:  Epoch[ 1 of 5]-Minibatch[ 202- 204, 63.75%]: CrossEntropyWithSoftmax = 2.58198915 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.1206s; samplesPerSecond = 1592.6
MPI Rank 0: 07/14/2016 05:42:55:  Epoch[ 1 of 5]-Minibatch[ 205- 207, 64.69%]: CrossEntropyWithSoftmax = 2.52865200 * 192; EvalErrorPrediction = 0.58333333 * 192; time = 0.1123s; samplesPerSecond = 1709.9
MPI Rank 0: 07/14/2016 05:42:55:  Epoch[ 1 of 5]-Minibatch[ 208- 210, 65.63%]: CrossEntropyWithSoftmax = 2.39380567 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.1187s; samplesPerSecond = 1617.6
MPI Rank 0: 07/14/2016 05:42:55:  Epoch[ 1 of 5]-Minibatch[ 211- 213, 66.56%]: CrossEntropyWithSoftmax = 2.68679304 * 192; EvalErrorPrediction = 0.70833333 * 192; time = 0.1130s; samplesPerSecond = 1699.7
MPI Rank 0: 07/14/2016 05:42:55:  Epoch[ 1 of 5]-Minibatch[ 214- 216, 67.50%]: CrossEntropyWithSoftmax = 2.70882982 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.1179s; samplesPerSecond = 1628.0
MPI Rank 0: 07/14/2016 05:42:55:  Epoch[ 1 of 5]-Minibatch[ 217- 219, 68.44%]: CrossEntropyWithSoftmax = 2.51425379 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.1129s; samplesPerSecond = 1700.3
MPI Rank 0: 07/14/2016 05:42:55:  Epoch[ 1 of 5]-Minibatch[ 220- 222, 69.38%]: CrossEntropyWithSoftmax = 2.50672974 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.1200s; samplesPerSecond = 1600.4
MPI Rank 0: 07/14/2016 05:42:55:  Epoch[ 1 of 5]-Minibatch[ 223- 225, 70.31%]: CrossEntropyWithSoftmax = 2.69121211 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.1207s; samplesPerSecond = 1591.4
MPI Rank 0: 07/14/2016 05:42:55:  Epoch[ 1 of 5]-Minibatch[ 226- 228, 71.25%]: CrossEntropyWithSoftmax = 2.38196469 * 192; EvalErrorPrediction = 0.56250000 * 192; time = 0.1130s; samplesPerSecond = 1698.4
MPI Rank 0: 07/14/2016 05:42:55:  Epoch[ 1 of 5]-Minibatch[ 229- 231, 72.19%]: CrossEntropyWithSoftmax = 2.44279881 * 192; EvalErrorPrediction = 0.66666667 * 192; time = 0.1194s; samplesPerSecond = 1608.3
MPI Rank 0: 07/14/2016 05:42:56:  Epoch[ 1 of 5]-Minibatch[ 232- 234, 73.13%]: CrossEntropyWithSoftmax = 2.44240296 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.1204s; samplesPerSecond = 1594.1
MPI Rank 0: 07/14/2016 05:42:56:  Epoch[ 1 of 5]-Minibatch[ 235- 237, 74.06%]: CrossEntropyWithSoftmax = 2.53190921 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.1124s; samplesPerSecond = 1707.7
MPI Rank 0: 07/14/2016 05:42:56:  Epoch[ 1 of 5]-Minibatch[ 238- 240, 75.00%]: CrossEntropyWithSoftmax = 2.48839884 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.1198s; samplesPerSecond = 1602.7
MPI Rank 0: 07/14/2016 05:42:56:  Epoch[ 1 of 5]-Minibatch[ 241- 243, 75.94%]: CrossEntropyWithSoftmax = 2.43919959 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.1208s; samplesPerSecond = 1589.5
MPI Rank 0: 07/14/2016 05:42:56:  Epoch[ 1 of 5]-Minibatch[ 244- 246, 76.88%]: CrossEntropyWithSoftmax = 2.40142421 * 192; EvalErrorPrediction = 0.59375000 * 192; time = 0.1128s; samplesPerSecond = 1702.3
MPI Rank 0: 07/14/2016 05:42:56:  Epoch[ 1 of 5]-Minibatch[ 247- 249, 77.81%]: CrossEntropyWithSoftmax = 2.59285302 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.1185s; samplesPerSecond = 1620.7
MPI Rank 0: 07/14/2016 05:42:56:  Epoch[ 1 of 5]-Minibatch[ 250- 252, 78.75%]: CrossEntropyWithSoftmax = 2.20980454 * 192; EvalErrorPrediction = 0.56250000 * 192; time = 0.1131s; samplesPerSecond = 1697.4
MPI Rank 0: 07/14/2016 05:42:56:  Epoch[ 1 of 5]-Minibatch[ 253- 255, 79.69%]: CrossEntropyWithSoftmax = 2.51329030 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.1177s; samplesPerSecond = 1631.4
MPI Rank 0: 07/14/2016 05:42:57:  Epoch[ 1 of 5]-Minibatch[ 256- 258, 80.63%]: CrossEntropyWithSoftmax = 2.50508827 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.1223s; samplesPerSecond = 1569.5
MPI Rank 0: 07/14/2016 05:42:57:  Epoch[ 1 of 5]-Minibatch[ 259- 261, 81.56%]: CrossEntropyWithSoftmax = 2.20752202 * 192; EvalErrorPrediction = 0.58333333 * 192; time = 0.1126s; samplesPerSecond = 1705.3
MPI Rank 0: 07/14/2016 05:42:57:  Epoch[ 1 of 5]-Minibatch[ 262- 264, 82.50%]: CrossEntropyWithSoftmax = 2.15390534 * 192; EvalErrorPrediction = 0.53125000 * 192; time = 0.0968s; samplesPerSecond = 1984.5
MPI Rank 0: 07/14/2016 05:42:57:  Epoch[ 1 of 5]-Minibatch[ 265- 267, 83.44%]: CrossEntropyWithSoftmax = 2.26279557 * 192; EvalErrorPrediction = 0.58333333 * 192; time = 0.1035s; samplesPerSecond = 1855.4
MPI Rank 0: 07/14/2016 05:42:57:  Epoch[ 1 of 5]-Minibatch[ 268- 270, 84.38%]: CrossEntropyWithSoftmax = 2.13640681 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.0634s; samplesPerSecond = 3029.4
MPI Rank 0: 07/14/2016 05:42:57:  Epoch[ 1 of 5]-Minibatch[ 271- 273, 85.31%]: CrossEntropyWithSoftmax = 2.45376287 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.0389s; samplesPerSecond = 4935.5
MPI Rank 0: 07/14/2016 05:42:57:  Epoch[ 1 of 5]-Minibatch[ 274- 276, 86.25%]: CrossEntropyWithSoftmax = 2.12574189 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.0389s; samplesPerSecond = 4939.5
MPI Rank 0: 07/14/2016 05:42:57:  Epoch[ 1 of 5]-Minibatch[ 277- 279, 87.19%]: CrossEntropyWithSoftmax = 2.35150240 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.0389s; samplesPerSecond = 4937.5
MPI Rank 0: 07/14/2016 05:42:57:  Epoch[ 1 of 5]-Minibatch[ 280- 282, 88.13%]: CrossEntropyWithSoftmax = 2.33967886 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0390s; samplesPerSecond = 4925.1
MPI Rank 0: 07/14/2016 05:42:57:  Epoch[ 1 of 5]-Minibatch[ 283- 285, 89.06%]: CrossEntropyWithSoftmax = 2.27059354 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.0390s; samplesPerSecond = 4924.1
MPI Rank 0: 07/14/2016 05:42:57:  Epoch[ 1 of 5]-Minibatch[ 286- 288, 90.00%]: CrossEntropyWithSoftmax = 2.20103423 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.0389s; samplesPerSecond = 4929.8
MPI Rank 0: 07/14/2016 05:42:57:  Epoch[ 1 of 5]-Minibatch[ 289- 291, 90.94%]: CrossEntropyWithSoftmax = 2.17361421 * 192; EvalErrorPrediction = 0.54687500 * 192; time = 0.0392s; samplesPerSecond = 4899.6
MPI Rank 0: 07/14/2016 05:42:57:  Epoch[ 1 of 5]-Minibatch[ 292- 294, 91.88%]: CrossEntropyWithSoftmax = 2.36955517 * 192; EvalErrorPrediction = 0.60937500 * 192; time = 0.0394s; samplesPerSecond = 4878.2
MPI Rank 0: 07/14/2016 05:42:57:  Epoch[ 1 of 5]-Minibatch[ 295- 297, 92.81%]: CrossEntropyWithSoftmax = 2.03617679 * 192; EvalErrorPrediction = 0.58854167 * 192; time = 0.0396s; samplesPerSecond = 4846.8
MPI Rank 0: 07/14/2016 05:42:57:  Epoch[ 1 of 5]-Minibatch[ 298- 300, 93.75%]: CrossEntropyWithSoftmax = 2.12189751 * 192; EvalErrorPrediction = 0.57812500 * 192; time = 0.0394s; samplesPerSecond = 4868.0
MPI Rank 0: 07/14/2016 05:42:57:  Epoch[ 1 of 5]-Minibatch[ 301- 303, 94.69%]: CrossEntropyWithSoftmax = 2.24415119 * 192; EvalErrorPrediction = 0.53645833 * 192; time = 0.0390s; samplesPerSecond = 4925.4
MPI Rank 0: 07/14/2016 05:42:57:  Epoch[ 1 of 5]-Minibatch[ 304- 306, 95.63%]: CrossEntropyWithSoftmax = 2.23313700 * 192; EvalErrorPrediction = 0.60937500 * 192; time = 0.0391s; samplesPerSecond = 4910.1
MPI Rank 0: 07/14/2016 05:42:57:  Epoch[ 1 of 5]-Minibatch[ 307- 309, 96.56%]: CrossEntropyWithSoftmax = 2.22962689 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.0391s; samplesPerSecond = 4908.9
MPI Rank 0: 07/14/2016 05:42:57:  Epoch[ 1 of 5]-Minibatch[ 310- 312, 97.50%]: CrossEntropyWithSoftmax = 2.12441878 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 0.0392s; samplesPerSecond = 4899.6
MPI Rank 0: 07/14/2016 05:42:57:  Epoch[ 1 of 5]-Minibatch[ 313- 315, 98.44%]: CrossEntropyWithSoftmax = 2.30683710 * 192; EvalErrorPrediction = 0.66666667 * 192; time = 0.0392s; samplesPerSecond = 4902.1
MPI Rank 0: 07/14/2016 05:42:58:  Epoch[ 1 of 5]-Minibatch[ 316- 318, 99.38%]: CrossEntropyWithSoftmax = 2.36587381 * 192; EvalErrorPrediction = 0.58333333 * 192; time = 0.0395s; samplesPerSecond = 4864.2
MPI Rank 0: 07/14/2016 05:42:58: Finished Epoch[ 1 of 5]: [Training] CrossEntropyWithSoftmax = 3.00704835 * 20480; EvalErrorPrediction = 0.72827148 * 20480; totalSamplesSeen = 20480; learningRatePerSample = 0.015625; epochTime=11.1604s
MPI Rank 0: 07/14/2016 05:42:58: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn.1'
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:42:58: Starting Epoch 2: learning rate per sample = 0.001953  effective momentum = 0.656119  momentum as time constant = 607.5 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 1: frames [20480..40960] (first utterance at frame 20480), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:42:58: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 07/14/2016 05:42:58:  Epoch[ 2 of 5]-Minibatch[   1-   3, 3.75%]: CrossEntropyWithSoftmax = 2.09930028 * 476; EvalErrorPrediction = 0.55252101 * 476; time = 0.0933s; samplesPerSecond = 5099.9
MPI Rank 0: 07/14/2016 05:42:58:  Epoch[ 2 of 5]-Minibatch[   4-   6, 7.50%]: CrossEntropyWithSoftmax = 2.14014808 * 520; EvalErrorPrediction = 0.57307692 * 520; time = 0.0973s; samplesPerSecond = 5344.8
MPI Rank 0: 07/14/2016 05:42:58:  Epoch[ 2 of 5]-Minibatch[   7-   9, 11.25%]: CrossEntropyWithSoftmax = 2.16353953 * 492; EvalErrorPrediction = 0.57926829 * 492; time = 0.0936s; samplesPerSecond = 5256.4
MPI Rank 0: 07/14/2016 05:42:58:  Epoch[ 2 of 5]-Minibatch[  10-  12, 15.00%]: CrossEntropyWithSoftmax = 2.15181737 * 518; EvalErrorPrediction = 0.56563707 * 518; time = 0.0958s; samplesPerSecond = 5405.2
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.34-seconds latency this time; accumulated time on sync point = 0.34 seconds , average latency = 0.34 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     0.79 seconds since last report (0.01 seconds on comm.); 4243 samples processed by 2 workers (2186 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 5.35k samplesPerSecond , throughputPerWorker = 2.67k samplesPerSecond
MPI Rank 0: 07/14/2016 05:42:59:  Epoch[ 2 of 5]-Minibatch[  13-  15, 18.75%]: CrossEntropyWithSoftmax = 2.11575586 * 520; EvalErrorPrediction = 0.57692308 * 520; time = 0.5890s; samplesPerSecond = 882.8
MPI Rank 0: 07/14/2016 05:42:59:  Epoch[ 2 of 5]-Minibatch[  16-  18, 22.50%]: CrossEntropyWithSoftmax = 1.94616752 * 474; EvalErrorPrediction = 0.53797468 * 474; time = 0.2564s; samplesPerSecond = 1848.8
MPI Rank 0: 07/14/2016 05:42:59:  Epoch[ 2 of 5]-Minibatch[  19-  21, 26.25%]: CrossEntropyWithSoftmax = 1.94944352 * 510; EvalErrorPrediction = 0.49607843 * 510; time = 0.2745s; samplesPerSecond = 1858.0
MPI Rank 0: 07/14/2016 05:42:59:  Epoch[ 2 of 5]-Minibatch[  22-  24, 30.00%]: CrossEntropyWithSoftmax = 2.01345303 * 489; EvalErrorPrediction = 0.56850716 * 489; time = 0.2644s; samplesPerSecond = 1849.8
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.34 seconds , average latency = 0.17 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     1.15 seconds since last report (0.03 seconds on comm.); 4292 samples processed by 2 workers (2153 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 3.74k samplesPerSecond , throughputPerWorker = 1.87k samplesPerSecond
MPI Rank 0: 07/14/2016 05:43:00:  Epoch[ 2 of 5]-Minibatch[  25-  27, 33.75%]: CrossEntropyWithSoftmax = 2.00914712 * 501; EvalErrorPrediction = 0.53493014 * 501; time = 0.2578s; samplesPerSecond = 1943.1
MPI Rank 0: 07/14/2016 05:43:00:  Epoch[ 2 of 5]-Minibatch[  28-  30, 37.50%]: CrossEntropyWithSoftmax = 2.11476422 * 490; EvalErrorPrediction = 0.59591837 * 490; time = 0.2550s; samplesPerSecond = 1921.8
MPI Rank 0: 07/14/2016 05:43:00:  Epoch[ 2 of 5]-Minibatch[  31-  33, 41.25%]: CrossEntropyWithSoftmax = 1.85008841 * 515; EvalErrorPrediction = 0.50291262 * 515; time = 0.2862s; samplesPerSecond = 1799.7
MPI Rank 0: 07/14/2016 05:43:00:  Epoch[ 2 of 5]-Minibatch[  34-  36, 45.00%]: CrossEntropyWithSoftmax = 2.00524788 * 482; EvalErrorPrediction = 0.57676349 * 482; time = 0.2631s; samplesPerSecond = 1832.2
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.34 seconds , average latency = 0.11 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:     1.14 seconds since last report (0.03 seconds on comm.); 4263 samples processed by 2 workers (2126 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 3.72k samplesPerSecond , throughputPerWorker = 1.86k samplesPerSecond
MPI Rank 0: 07/14/2016 05:43:01:  Epoch[ 2 of 5]-Minibatch[  37-  39, 48.75%]: CrossEntropyWithSoftmax = 1.92802458 * 478; EvalErrorPrediction = 0.52510460 * 478; time = 0.2503s; samplesPerSecond = 1909.7
MPI Rank 0: 07/14/2016 05:43:01:  Epoch[ 2 of 5]-Minibatch[  40-  42, 52.50%]: CrossEntropyWithSoftmax = 1.82641498 * 471; EvalErrorPrediction = 0.52441614 * 471; time = 0.2582s; samplesPerSecond = 1824.4
MPI Rank 0: 07/14/2016 05:43:01:  Epoch[ 2 of 5]-Minibatch[  43-  45, 56.25%]: CrossEntropyWithSoftmax = 1.85654377 * 480; EvalErrorPrediction = 0.48541667 * 480; time = 0.2417s; samplesPerSecond = 1986.2
MPI Rank 0: 07/14/2016 05:43:01:  Epoch[ 2 of 5]-Minibatch[  46-  48, 60.00%]: CrossEntropyWithSoftmax = 1.86400750 * 487; EvalErrorPrediction = 0.49075975 * 487; time = 0.1070s; samplesPerSecond = 4553.5
MPI Rank 0: 07/14/2016 05:43:01:  Epoch[ 2 of 5]-Minibatch[  49-  51, 63.75%]: CrossEntropyWithSoftmax = 2.00861530 * 476; EvalErrorPrediction = 0.52100840 * 476; time = 0.0842s; samplesPerSecond = 5652.3
MPI Rank 0: 07/14/2016 05:43:01:  Epoch[ 2 of 5]-Minibatch[  52-  54, 67.50%]: CrossEntropyWithSoftmax = 1.84567639 * 476; EvalErrorPrediction = 0.52100840 * 476; time = 0.0837s; samplesPerSecond = 5689.6
MPI Rank 0: 07/14/2016 05:43:02:  Epoch[ 2 of 5]-Minibatch[  55-  57, 71.25%]: CrossEntropyWithSoftmax = 1.90351565 * 500; EvalErrorPrediction = 0.55000000 * 500; time = 0.0875s; samplesPerSecond = 5714.4
MPI Rank 0: 07/14/2016 05:43:02:  Epoch[ 2 of 5]-Minibatch[  58-  60, 75.00%]: CrossEntropyWithSoftmax = 1.95949480 * 498; EvalErrorPrediction = 0.53815261 * 498; time = 0.0874s; samplesPerSecond = 5695.9
MPI Rank 0: 07/14/2016 05:43:02:  Epoch[ 2 of 5]-Minibatch[  61-  63, 78.75%]: CrossEntropyWithSoftmax = 1.89275264 * 481; EvalErrorPrediction = 0.52806653 * 481; time = 0.0852s; samplesPerSecond = 5647.5
MPI Rank 0: 07/14/2016 05:43:02:  Epoch[ 2 of 5]-Minibatch[  64-  66, 82.50%]: CrossEntropyWithSoftmax = 1.85125663 * 496; EvalErrorPrediction = 0.51814516 * 496; time = 0.0872s; samplesPerSecond = 5690.6
MPI Rank 0: 07/14/2016 05:43:02:  Epoch[ 2 of 5]-Minibatch[  67-  69, 86.25%]: CrossEntropyWithSoftmax = 1.87268109 * 501; EvalErrorPrediction = 0.52095808 * 501; time = 0.0873s; samplesPerSecond = 5736.3
MPI Rank 0: 07/14/2016 05:43:02:  Epoch[ 2 of 5]-Minibatch[  70-  72, 90.00%]: CrossEntropyWithSoftmax = 1.92335865 * 488; EvalErrorPrediction = 0.56762295 * 488; time = 0.0864s; samplesPerSecond = 5650.8
MPI Rank 0: 07/14/2016 05:43:02:  Epoch[ 2 of 5]-Minibatch[  73-  75, 93.75%]: CrossEntropyWithSoftmax = 1.97087234 * 490; EvalErrorPrediction = 0.53877551 * 490; time = 0.0862s; samplesPerSecond = 5682.5
MPI Rank 0: 07/14/2016 05:43:02:  Epoch[ 2 of 5]-Minibatch[  76-  78, 97.50%]: CrossEntropyWithSoftmax = 1.73194707 * 480; EvalErrorPrediction = 0.47916667 * 480; time = 0.0858s; samplesPerSecond = 5593.4
MPI Rank 0: 07/14/2016 05:43:02:  Epoch[ 2 of 5]-Minibatch[  79-  81, 101.25%]: CrossEntropyWithSoftmax = 1.87213657 * 338; EvalErrorPrediction = 0.52071006 * 338; time = 0.0600s; samplesPerSecond = 5635.1
MPI Rank 0: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.34 seconds , average latency = 0.09 seconds
MPI Rank 0: 		(model aggregation stats) 4-th sync:     1.55 seconds since last report (0.00 seconds on comm.); 7682 samples processed by 2 workers (6662 by me);
MPI Rank 0: 		(model aggregation stats) 4-th sync: totalThroughput = 4.95k samplesPerSecond , throughputPerWorker = 2.48k samplesPerSecond
MPI Rank 0: 07/14/2016 05:43:02: Finished Epoch[ 2 of 5]: [Training] CrossEntropyWithSoftmax = 1.97981265 * 20480; EvalErrorPrediction = 0.54433594 * 20480; totalSamplesSeen = 40960; learningRatePerSample = 0.001953125; epochTime=4.63829s
MPI Rank 0: 07/14/2016 05:43:02: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn.2'
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:43:02: Starting Epoch 3: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 2: frames [40960..61440] (first utterance at frame 40960), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:43:02: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 07/14/2016 05:43:03:  Epoch[ 3 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.92806745 * 1935; EvalErrorPrediction = 0.53746770 * 1935; time = 0.4415s; samplesPerSecond = 4382.3
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.16-seconds latency this time; accumulated time on sync point = 0.16 seconds , average latency = 0.16 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     0.83 seconds since last report (0.04 seconds on comm.); 4848 samples processed by 2 workers (2601 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 5.83k samplesPerSecond , throughputPerWorker = 2.92k samplesPerSecond
MPI Rank 0: 07/14/2016 05:43:04:  Epoch[ 3 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.85104228 * 1962; EvalErrorPrediction = 0.52293578 * 1962; time = 0.8547s; samplesPerSecond = 2295.5
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.16 seconds , average latency = 0.08 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     0.88 seconds since last report (0.04 seconds on comm.); 4857 samples processed by 2 workers (2603 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 5.52k samplesPerSecond , throughputPerWorker = 2.76k samplesPerSecond
MPI Rank 0: 07/14/2016 05:43:04:  Epoch[ 3 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.89130702 * 1967; EvalErrorPrediction = 0.53431622 * 1967; time = 0.6077s; samplesPerSecond = 3237.0
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.16 seconds , average latency = 0.05 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:     0.89 seconds since last report (0.04 seconds on comm.); 4905 samples processed by 2 workers (2583 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 5.51k samplesPerSecond , throughputPerWorker = 2.76k samplesPerSecond
MPI Rank 0: 07/14/2016 05:43:05:  Epoch[ 3 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.81602105 * 1923; EvalErrorPrediction = 0.49973999 * 1923; time = 0.6903s; samplesPerSecond = 2785.8
MPI Rank 0: 07/14/2016 05:43:05:  Epoch[ 3 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.95700620 * 1914; EvalErrorPrediction = 0.53814002 * 1914; time = 0.4502s; samplesPerSecond = 4251.6
MPI Rank 0: 07/14/2016 05:43:06:  Epoch[ 3 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.93827772 * 1908; EvalErrorPrediction = 0.54297694 * 1908; time = 0.3197s; samplesPerSecond = 5967.2
MPI Rank 0: 07/14/2016 05:43:06:  Epoch[ 3 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.87630077 * 1283; EvalErrorPrediction = 0.51909587 * 1283; time = 0.2109s; samplesPerSecond = 6084.6
MPI Rank 0: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.16 seconds , average latency = 0.04 seconds
MPI Rank 0: 		(model aggregation stats) 4-th sync:     1.02 seconds since last report (0.03 seconds on comm.); 5870 samples processed by 2 workers (5105 by me);
MPI Rank 0: 		(model aggregation stats) 4-th sync: totalThroughput = 5.74k samplesPerSecond , throughputPerWorker = 2.87k samplesPerSecond
MPI Rank 0: 07/14/2016 05:43:06: Finished Epoch[ 3 of 5]: [Training] CrossEntropyWithSoftmax = 1.89870701 * 20480; EvalErrorPrediction = 0.52910156 * 20480; totalSamplesSeen = 61440; learningRatePerSample = 9.7656251e-005; epochTime=3.63184s
MPI Rank 0: 07/14/2016 05:43:06: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn.3'
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:43:06: Starting Epoch 4: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 3: frames [61440..81920] (first utterance at frame 61440), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:43:06: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 07/14/2016 05:43:07:  Epoch[ 4 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.87518842 * 1935; EvalErrorPrediction = 0.50284238 * 1935; time = 0.3633s; samplesPerSecond = 5325.8
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     0.54 seconds since last report (0.05 seconds on comm.); 4851 samples processed by 2 workers (2561 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 8.91k samplesPerSecond , throughputPerWorker = 4.46k samplesPerSecond
MPI Rank 0: 07/14/2016 05:43:07:  Epoch[ 4 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.85789533 * 1919; EvalErrorPrediction = 0.51641480 * 1919; time = 0.6235s; samplesPerSecond = 3077.5
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     0.90 seconds since last report (0.04 seconds on comm.); 4948 samples processed by 2 workers (2547 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 5.48k samplesPerSecond , throughputPerWorker = 2.74k samplesPerSecond
MPI Rank 0: 07/14/2016 05:43:08:  Epoch[ 4 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.83395252 * 1900; EvalErrorPrediction = 0.50578947 * 1900; time = 0.6575s; samplesPerSecond = 2889.5
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:     0.89 seconds since last report (0.05 seconds on comm.); 4911 samples processed by 2 workers (2489 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 5.54k samplesPerSecond , throughputPerWorker = 2.77k samplesPerSecond
MPI Rank 0: 07/14/2016 05:43:09:  Epoch[ 4 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.82229805 * 1843; EvalErrorPrediction = 0.50081389 * 1843; time = 0.6822s; samplesPerSecond = 2701.6
MPI Rank 0: 07/14/2016 05:43:09:  Epoch[ 4 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.80986336 * 1876; EvalErrorPrediction = 0.50426439 * 1876; time = 0.4383s; samplesPerSecond = 4280.1
MPI Rank 0: 07/14/2016 05:43:09:  Epoch[ 4 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.82849330 * 1846; EvalErrorPrediction = 0.50758397 * 1846; time = 0.3101s; samplesPerSecond = 5952.1
MPI Rank 0: 07/14/2016 05:43:09:  Epoch[ 4 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.86266862 * 1326; EvalErrorPrediction = 0.51659125 * 1326; time = 0.2319s; samplesPerSecond = 5716.8
MPI Rank 0: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 4-th sync:     1.03 seconds since last report (0.03 seconds on comm.); 5770 samples processed by 2 workers (5048 by me);
MPI Rank 0: 		(model aggregation stats) 4-th sync: totalThroughput = 5.62k samplesPerSecond , throughputPerWorker = 2.81k samplesPerSecond
MPI Rank 0: 07/14/2016 05:43:10: Finished Epoch[ 4 of 5]: [Training] CrossEntropyWithSoftmax = 1.84071362 * 20480; EvalErrorPrediction = 0.50903320 * 20480; totalSamplesSeen = 81920; learningRatePerSample = 9.7656251e-005; epochTime=3.36867s
MPI Rank 0: 07/14/2016 05:43:10: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn.4'
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:43:10: Starting Epoch 5: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 4: frames [81920..102400] (first utterance at frame 81920), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:43:10: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 07/14/2016 05:43:10:  Epoch[ 5 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.80709477 * 1872; EvalErrorPrediction = 0.49038462 * 1872; time = 0.6693s; samplesPerSecond = 2796.9
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     0.84 seconds since last report (0.05 seconds on comm.); 4879 samples processed by 2 workers (2475 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 5.78k samplesPerSecond , throughputPerWorker = 2.89k samplesPerSecond
MPI Rank 0: 07/14/2016 05:43:11:  Epoch[ 5 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.81345086 * 1868; EvalErrorPrediction = 0.49089936 * 1868; time = 0.5423s; samplesPerSecond = 3444.3
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     0.83 seconds since last report (0.05 seconds on comm.); 4542 samples processed by 2 workers (2483 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 5.47k samplesPerSecond , throughputPerWorker = 2.74k samplesPerSecond
MPI Rank 0: 07/14/2016 05:43:12:  Epoch[ 5 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.72849281 * 1839; EvalErrorPrediction = 0.46601414 * 1839; time = 0.6301s; samplesPerSecond = 2918.7
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.07-seconds latency this time; accumulated time on sync point = 0.07 seconds , average latency = 0.02 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:     0.92 seconds since last report (0.05 seconds on comm.); 4905 samples processed by 2 workers (2461 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 5.33k samplesPerSecond , throughputPerWorker = 2.66k samplesPerSecond
MPI Rank 0: 07/14/2016 05:43:12:  Epoch[ 5 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.84410986 * 1840; EvalErrorPrediction = 0.50163043 * 1840; time = 0.7464s; samplesPerSecond = 2465.1
MPI Rank 0: 07/14/2016 05:43:13:  Epoch[ 5 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.82120996 * 1846; EvalErrorPrediction = 0.50054171 * 1846; time = 0.5043s; samplesPerSecond = 3660.6
MPI Rank 0: 07/14/2016 05:43:13:  Epoch[ 5 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.83774614 * 1858; EvalErrorPrediction = 0.50269107 * 1858; time = 0.3110s; samplesPerSecond = 5973.5
MPI Rank 0: 07/14/2016 05:43:13:  Epoch[ 5 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.81233688 * 1296; EvalErrorPrediction = 0.50540123 * 1296; time = 0.2134s; samplesPerSecond = 6072.8
MPI Rank 0: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.07 seconds , average latency = 0.02 seconds
MPI Rank 0: 		(model aggregation stats) 4-th sync:     1.05 seconds since last report (0.00 seconds on comm.); 6154 samples processed by 2 workers (5000 by me);
MPI Rank 0: 		(model aggregation stats) 4-th sync: totalThroughput = 5.88k samplesPerSecond , throughputPerWorker = 2.94k samplesPerSecond
MPI Rank 0: 07/14/2016 05:43:13: Finished Epoch[ 5 of 5]: [Training] CrossEntropyWithSoftmax = 1.80187852 * 20480; EvalErrorPrediction = 0.49741211 * 20480; totalSamplesSeen = 102400; learningRatePerSample = 9.7656251e-005; epochTime=3.64273s
MPI Rank 0: 07/14/2016 05:43:13: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn'
MPI Rank 0: 07/14/2016 05:43:13: CNTKCommandTrainEnd: speechTrain
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:43:13: Action "train" complete.
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:43:13: __COMPLETED__
MPI Rank 0: ~MPIWrapper
MPI Rank 1: 07/14/2016 05:42:44: Redirecting stderr to file C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_cpu/stderr_speechTrain.logrank1
MPI Rank 1: 07/14/2016 05:42:44: -------------------------------------------------------------------
MPI Rank 1: 07/14/2016 05:42:44: Build info: 
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:42:44: 		Built time: Jul 14 2016 05:09:58
MPI Rank 1: 07/14/2016 05:42:44: 		Last modified date: Wed Jul 13 07:57:26 2016
MPI Rank 1: 07/14/2016 05:42:44: 		Build type: Release
MPI Rank 1: 07/14/2016 05:42:44: 		Build target: GPU
MPI Rank 1: 07/14/2016 05:42:44: 		With 1bit-SGD: no
MPI Rank 1: 07/14/2016 05:42:44: 		Math lib: mkl
MPI Rank 1: 07/14/2016 05:42:44: 		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
MPI Rank 1: 07/14/2016 05:42:44: 		CUB_PATH: C:\src\cub-1.4.1
MPI Rank 1: 07/14/2016 05:42:44: 		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
MPI Rank 1: 07/14/2016 05:42:44: 		Build Branch: HEAD
MPI Rank 1: 07/14/2016 05:42:44: 		Build SHA1: 72bee394bf461e8f6f0feb593a8416c05f481957
MPI Rank 1: 07/14/2016 05:42:44: 		Built by svcphil on DPHAIM-22
MPI Rank 1: 07/14/2016 05:42:44: 		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
MPI Rank 1: 07/14/2016 05:42:44: -------------------------------------------------------------------
MPI Rank 1: 07/14/2016 05:42:44: -------------------------------------------------------------------
MPI Rank 1: 07/14/2016 05:42:44: GPU info:
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:42:44: 		Device[0]: cores = 2496; computeCapability = 5.2; type = "Quadro M4000"; memory = 8090 MB
MPI Rank 1: 07/14/2016 05:42:44: -------------------------------------------------------------------
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:42:44: Running on cntk-muc00 at 2016/07/14 05:42:44
MPI Rank 1: 07/14/2016 05:42:44: Command line: 
MPI Rank 1: C:\jenkins\workspace\CNTK-Test-Windows-W1\x64\release\cntk.exe  configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN/ParallelBM/cntk.cntk  currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data  RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_cpu  DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data  ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN  OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_cpu  DeviceId=-1  timestamping=true  numCPUThreads=2  precision=double  speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]  stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_cpu/stderr
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:42:44: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: 07/14/2016 05:42:44: precision = "float"
MPI Rank 1: command = speechTrain
MPI Rank 1: deviceId = $DeviceId$
MPI Rank 1: parallelTrain = true
MPI Rank 1: speechTrain = [
MPI Rank 1:     action = "train"
MPI Rank 1:     modelPath = "$RunDir$/models/cntkSpeech.dnn"
MPI Rank 1:     deviceId = $DeviceId$
MPI Rank 1:     traceLevel = 1
MPI Rank 1:     SimpleNetworkBuilder = [
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 1:         evalCriterion = "ErrorPrediction"
MPI Rank 1:         layerTypes = "Sigmoid"
MPI Rank 1:         initValueScale = 1.0
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         uniformInit = true
MPI Rank 1:         needPrior = true
MPI Rank 1:     ]
MPI Rank 1:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = 'CE'
MPI Rank 1:         evalCriterion = 'Err'
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 1:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 1:         featNorm = if applyMeanVarNorm
MPI Rank 1:                    then MeanVarNorm(features)
MPI Rank 1:                    else features
MPI Rank 1:         layers[layer:1..L-1] = if layer > 1
MPI Rank 1:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 1:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 1:         CE = if trainingCriterion == 'CE'
MPI Rank 1:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 1:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 1:         Err = if evalCriterion == 'Err' then
MPI Rank 1:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 1:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 1:         logPrior = LogPrior(labels)
MPI Rank 1:         // TODO: how to add a tag to an infix operation?
MPI Rank 1:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 1:     ]
MPI Rank 1:     SGD = [
MPI Rank 1:         epochSize = 20480
MPI Rank 1:         minibatchSize = 64:256:1024
MPI Rank 1:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 1:         numMBsToShowResult = 3
MPI Rank 1:         momentumPerMB = 0.9:0.656119
MPI Rank 1:         dropoutRate = 0.0
MPI Rank 1:         maxEpochs = 5
MPI Rank 1:         keepCheckPointFiles = true
MPI Rank 1:         clippingThresholdPerSample = 1#INF
MPI Rank 1:         ParallelTrain = [
MPI Rank 1:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 1:             distributedMBReading = true
MPI Rank 1:             syncPerfStats=1
MPI Rank 1:             BlockMomentumSGD = [
MPI Rank 1:                 blockSizePerWorker=2048
MPI Rank 1:                 resetSGDMomentum=true
MPI Rank 1:                 useNesterovMomentum=true
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:         AutoAdjust = [
MPI Rank 1:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 1:             loadBestModel = true
MPI Rank 1:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 1:             learnRateDecreaseFactor = 0.5
MPI Rank 1:             learnRateIncreaseFactor = 1.382
MPI Rank 1:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader = [
MPI Rank 1:         readerType = "HTKMLFReader"
MPI Rank 1:         readMethod = "blockRandomize"
MPI Rank 1:         miniBatchMode = "partial"
MPI Rank 1:         randomize = "auto"
MPI Rank 1:         verbosity = 0
MPI Rank 1:         features = [
MPI Rank 1:             dim = 363
MPI Rank 1:             type = "real"
MPI Rank 1:             scpFile = "glob_0000.scp"
MPI Rank 1:         ]
MPI Rank 1:         labels = [
MPI Rank 1:             mlfFile = "$DataDir$/glob_0000.mlf"
MPI Rank 1:             labelMappingFile = "$DataDir$/state.list"
MPI Rank 1:             labelDim = 132
MPI Rank 1:             labelType = "category"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1: ]
MPI Rank 1: currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 1: RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_cpu
MPI Rank 1: DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 1: ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN
MPI Rank 1: OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_cpu
MPI Rank 1: DeviceId=-1
MPI Rank 1: timestamping=true
MPI Rank 1: numCPUThreads=2
MPI Rank 1: precision=double
MPI Rank 1: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 1: stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_cpu/stderr
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:42:44: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:42:44: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: 07/14/2016 05:42:44: precision = "float"
MPI Rank 1: command = speechTrain
MPI Rank 1: deviceId = -1
MPI Rank 1: parallelTrain = true
MPI Rank 1: speechTrain = [
MPI Rank 1:     action = "train"
MPI Rank 1:     modelPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn"
MPI Rank 1:     deviceId = -1
MPI Rank 1:     traceLevel = 1
MPI Rank 1:     SimpleNetworkBuilder = [
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 1:         evalCriterion = "ErrorPrediction"
MPI Rank 1:         layerTypes = "Sigmoid"
MPI Rank 1:         initValueScale = 1.0
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         uniformInit = true
MPI Rank 1:         needPrior = true
MPI Rank 1:     ]
MPI Rank 1:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = 'CE'
MPI Rank 1:         evalCriterion = 'Err'
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 1:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 1:         featNorm = if applyMeanVarNorm
MPI Rank 1:                    then MeanVarNorm(features)
MPI Rank 1:                    else features
MPI Rank 1:         layers[layer:1..L-1] = if layer > 1
MPI Rank 1:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 1:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 1:         CE = if trainingCriterion == 'CE'
MPI Rank 1:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 1:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 1:         Err = if evalCriterion == 'Err' then
MPI Rank 1:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 1:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 1:         logPrior = LogPrior(labels)
MPI Rank 1:         // TODO: how to add a tag to an infix operation?
MPI Rank 1:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 1:     ]
MPI Rank 1:     SGD = [
MPI Rank 1:         epochSize = 20480
MPI Rank 1:         minibatchSize = 64:256:1024
MPI Rank 1:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 1:         numMBsToShowResult = 3
MPI Rank 1:         momentumPerMB = 0.9:0.656119
MPI Rank 1:         dropoutRate = 0.0
MPI Rank 1:         maxEpochs = 5
MPI Rank 1:         keepCheckPointFiles = true
MPI Rank 1:         clippingThresholdPerSample = 1#INF
MPI Rank 1:         ParallelTrain = [
MPI Rank 1:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 1:             distributedMBReading = true
MPI Rank 1:             syncPerfStats=1
MPI Rank 1:             BlockMomentumSGD = [
MPI Rank 1:                 blockSizePerWorker=2048
MPI Rank 1:                 resetSGDMomentum=true
MPI Rank 1:                 useNesterovMomentum=true
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:         AutoAdjust = [
MPI Rank 1:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 1:             loadBestModel = true
MPI Rank 1:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 1:             learnRateDecreaseFactor = 0.5
MPI Rank 1:             learnRateIncreaseFactor = 1.382
MPI Rank 1:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader = [
MPI Rank 1:         readerType = "HTKMLFReader"
MPI Rank 1:         readMethod = "blockRandomize"
MPI Rank 1:         miniBatchMode = "partial"
MPI Rank 1:         randomize = "auto"
MPI Rank 1:         verbosity = 0
MPI Rank 1:         features = [
MPI Rank 1:             dim = 363
MPI Rank 1:             type = "real"
MPI Rank 1:             scpFile = "glob_0000.scp"
MPI Rank 1:         ]
MPI Rank 1:         labels = [
MPI Rank 1:             mlfFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf"
MPI Rank 1:             labelMappingFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list"
MPI Rank 1:             labelDim = 132
MPI Rank 1:             labelType = "category"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1: ]
MPI Rank 1: currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 1: RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_cpu
MPI Rank 1: DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 1: ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN
MPI Rank 1: OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_cpu
MPI Rank 1: DeviceId=-1
MPI Rank 1: timestamping=true
MPI Rank 1: numCPUThreads=2
MPI Rank 1: precision=double
MPI Rank 1: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 1: stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_cpu/stderr
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:42:44: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:42:44: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: configparameters: cntk.cntk:command=speechTrain
MPI Rank 1: configparameters: cntk.cntk:ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN
MPI Rank 1: configparameters: cntk.cntk:currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 1: configparameters: cntk.cntk:DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 1: configparameters: cntk.cntk:deviceId=-1
MPI Rank 1: configparameters: cntk.cntk:numCPUThreads=2
MPI Rank 1: configparameters: cntk.cntk:OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_cpu
MPI Rank 1: configparameters: cntk.cntk:parallelTrain=true
MPI Rank 1: configparameters: cntk.cntk:precision=double
MPI Rank 1: configparameters: cntk.cntk:RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_cpu
MPI Rank 1: configparameters: cntk.cntk:speechTrain=[
MPI Rank 1:     action = "train"
MPI Rank 1:     modelPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn"
MPI Rank 1:     deviceId = -1
MPI Rank 1:     traceLevel = 1
MPI Rank 1:     SimpleNetworkBuilder = [
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 1:         evalCriterion = "ErrorPrediction"
MPI Rank 1:         layerTypes = "Sigmoid"
MPI Rank 1:         initValueScale = 1.0
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         uniformInit = true
MPI Rank 1:         needPrior = true
MPI Rank 1:     ]
MPI Rank 1:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = 'CE'
MPI Rank 1:         evalCriterion = 'Err'
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 1:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 1:         featNorm = if applyMeanVarNorm
MPI Rank 1:                    then MeanVarNorm(features)
MPI Rank 1:                    else features
MPI Rank 1:         layers[layer:1..L-1] = if layer > 1
MPI Rank 1:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 1:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 1:         CE = if trainingCriterion == 'CE'
MPI Rank 1:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 1:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 1:         Err = if evalCriterion == 'Err' then
MPI Rank 1:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 1:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 1:         logPrior = LogPrior(labels)
MPI Rank 1:         // TODO: how to add a tag to an infix operation?
MPI Rank 1:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 1:     ]
MPI Rank 1:     SGD = [
MPI Rank 1:         epochSize = 20480
MPI Rank 1:         minibatchSize = 64:256:1024
MPI Rank 1:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 1:         numMBsToShowResult = 3
MPI Rank 1:         momentumPerMB = 0.9:0.656119
MPI Rank 1:         dropoutRate = 0.0
MPI Rank 1:         maxEpochs = 5
MPI Rank 1:         keepCheckPointFiles = true
MPI Rank 1:         clippingThresholdPerSample = 1#INF
MPI Rank 1:         ParallelTrain = [
MPI Rank 1:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 1:             distributedMBReading = true
MPI Rank 1:             syncPerfStats=1
MPI Rank 1:             BlockMomentumSGD = [
MPI Rank 1:                 blockSizePerWorker=2048
MPI Rank 1:                 resetSGDMomentum=true
MPI Rank 1:                 useNesterovMomentum=true
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:         AutoAdjust = [
MPI Rank 1:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 1:             loadBestModel = true
MPI Rank 1:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 1:             learnRateDecreaseFactor = 0.5
MPI Rank 1:             learnRateIncreaseFactor = 1.382
MPI Rank 1:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader = [
MPI Rank 1:         readerType = "HTKMLFReader"
MPI Rank 1:         readMethod = "blockRandomize"
MPI Rank 1:         miniBatchMode = "partial"
MPI Rank 1:         randomize = "auto"
MPI Rank 1:         verbosity = 0
MPI Rank 1:         features = [
MPI Rank 1:             dim = 363
MPI Rank 1:             type = "real"
MPI Rank 1:             scpFile = "glob_0000.scp"
MPI Rank 1:         ]
MPI Rank 1:         labels = [
MPI Rank 1:             mlfFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf"
MPI Rank 1:             labelMappingFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list"
MPI Rank 1:             labelDim = 132
MPI Rank 1:             labelType = "category"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1: ] [SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 1: 
MPI Rank 1: configparameters: cntk.cntk:stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_cpu/stderr
MPI Rank 1: configparameters: cntk.cntk:timestamping=true
MPI Rank 1: 07/14/2016 05:42:44: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 07/14/2016 05:42:44: Commands: speechTrain
MPI Rank 1: 07/14/2016 05:42:44: Precision = "double"
MPI Rank 1: 07/14/2016 05:42:44: Using 2 CPU threads.
MPI Rank 1: 07/14/2016 05:42:44: CNTKModelPath: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn
MPI Rank 1: 07/14/2016 05:42:44: CNTKCommandTrainInfo: speechTrain : 5
MPI Rank 1: 07/14/2016 05:42:44: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 5
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:42:44: ##############################################################################
MPI Rank 1: 07/14/2016 05:42:44: #                                                                            #
MPI Rank 1: 07/14/2016 05:42:44: # Action "train"                                                             #
MPI Rank 1: 07/14/2016 05:42:44: #                                                                            #
MPI Rank 1: 07/14/2016 05:42:44: ##############################################################################
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:42:44: CNTKCommandTrainBegin: speechTrain
MPI Rank 1: SimpleNetworkBuilder Using CPU
MPI Rank 1: reading script file glob_0000.scp ... 948 entries
MPI Rank 1: total 132 state names in state list C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list
MPI Rank 1: htkmlfreader: reading MLF file C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf ... total 948 entries
MPI Rank 1: ...............................................................................................feature set 0: 252734 frames in 948 out of 948 utterances
MPI Rank 1: label set 0: 129 classes
MPI Rank 1: minibatchutterancesource: 948 utterances grouped into 3 chunks, av. chunk size: 316.0 utterances, 84244.7 frames
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:42:45: Creating virgin network.
MPI Rank 1: 
MPI Rank 1: Post-processing network...
MPI Rank 1: 
MPI Rank 1: 7 roots:
MPI Rank 1: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
MPI Rank 1: 	EvalErrorPrediction = ErrorPrediction()
MPI Rank 1: 	InvStdOfFeatures = InvStdDev()
MPI Rank 1: 	MeanOfFeatures = Mean()
MPI Rank 1: 	PosteriorProb = Softmax()
MPI Rank 1: 	Prior = Mean()
MPI Rank 1: 	ScaledLogLikelihood = Minus()
MPI Rank 1: 
MPI Rank 1: Validating network. 25 nodes to process in pass 1.
MPI Rank 1: 
MPI Rank 1: Validating --> labels = InputValue() :  -> [132 x *]
MPI Rank 1: Validating --> W2 = LearnableParameter() :  -> [132 x 512]
MPI Rank 1: Validating --> W1 = LearnableParameter() :  -> [512 x 512]
MPI Rank 1: Validating --> W0 = LearnableParameter() :  -> [512 x 363]
MPI Rank 1: Validating --> features = InputValue() :  -> [363 x *]
MPI Rank 1: Validating --> MeanOfFeatures = Mean (features) : [363 x *] -> [363]
MPI Rank 1: Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *] -> [363]
MPI Rank 1: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *], [363], [363] -> [363 x *]
MPI Rank 1: Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [512 x 363], [363 x *] -> [512 x *]
MPI Rank 1: Validating --> B0 = LearnableParameter() :  -> [512 x 1]
MPI Rank 1: Validating --> W0*features+B0 = Plus (W0*features, B0) : [512 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 1: Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 1: Validating --> W1*H1 = Times (W1, H1) : [512 x 512], [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 1: Validating --> B1 = LearnableParameter() :  -> [512 x 1]
MPI Rank 1: Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [512 x 1 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 1: Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 1: Validating --> W2*H1 = Times (W2, H2) : [132 x 512], [512 x 1 x *] -> [132 x 1 x *]
MPI Rank 1: Validating --> B2 = LearnableParameter() :  -> [132 x 1]
MPI Rank 1: Validating --> HLast = Plus (W2*H1, B2) : [132 x 1 x *], [132 x 1] -> [132 x 1 x *]
MPI Rank 1: Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 1: Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 1: Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *] -> [132 x 1 x *]
MPI Rank 1: Validating --> Prior = Mean (labels) : [132 x *] -> [132]
MPI Rank 1: Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
MPI Rank 1: Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *], [132] -> [132 x 1 x *]
MPI Rank 1: 
MPI Rank 1: Validating network. 17 nodes to process in pass 2.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: Validating network, final pass.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 12 out of 25 nodes do not share the minibatch layout with the input data.
MPI Rank 1: 
MPI Rank 1: Post-processing network complete.
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:42:45: Created model with 25 nodes on CPU.
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:42:45: Training criterion node(s):
MPI Rank 1: 07/14/2016 05:42:45: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:42:45: Evaluation criterion node(s):
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:42:45: 	EvalErrorPrediction = ErrorPrediction
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: Allocating matrices for forward and/or backward propagation.
MPI Rank 1: 
MPI Rank 1: Memory Sharing Structure:
MPI Rank 1: 
MPI Rank 1: 0000000000000000: {[EvalErrorPrediction Gradient[1]] [InvStdOfFeatures Gradient[363]] [LogOfPrior Gradient[132]] [MVNormalizedFeatures Gradient[363 x *]] [MeanOfFeatures Gradient[363]] [PosteriorProb Gradient[132 x 1 x *]] [PosteriorProb Value[132 x 1 x *]] [Prior Gradient[132]] [ScaledLogLikelihood Gradient[132 x 1 x *]] [features Gradient[363 x *]] [labels Gradient[132 x *]] }
MPI Rank 1: 0000008F88AAEC80: {[features Value[363 x *]] }
MPI Rank 1: 0000008F88AAED20: {[InvStdOfFeatures Value[363]] }
MPI Rank 1: 0000008F88AAF180: {[B0 Value[512 x 1]] }
MPI Rank 1: 0000008F88AAF400: {[MeanOfFeatures Value[363]] }
MPI Rank 1: 0000008F88AAF680: {[W1 Value[512 x 512]] }
MPI Rank 1: 0000008F88AAF7C0: {[W0 Value[512 x 363]] }
MPI Rank 1: 0000008FA39C73E0: {[W0*features Value[512 x *]] }
MPI Rank 1: 0000008FA39C7520: {[H2 Value[512 x 1 x *]] [W1*H1 Gradient[512 x 1 x *]] }
MPI Rank 1: 0000008FA39C75C0: {[Prior Value[132]] }
MPI Rank 1: 0000008FA39C7660: {[labels Value[132 x *]] }
MPI Rank 1: 0000008FA39C7700: {[ScaledLogLikelihood Value[132 x 1 x *]] }
MPI Rank 1: 0000008FA39C77A0: {[CrossEntropyWithSoftmax Value[1]] }
MPI Rank 1: 0000008FA39C7840: {[W0 Gradient[512 x 363]] [W0*features+B0 Value[512 x 1 x *]] }
MPI Rank 1: 0000008FA39C78E0: {[HLast Value[132 x 1 x *]] [W2 Gradient[132 x 512]] }
MPI Rank 1: 0000008FA39C7AC0: {[B0 Gradient[512 x 1]] [H1 Gradient[512 x 1 x *]] [W1*H1+B1 Gradient[512 x 1 x *]] [W2*H1 Value[132 x 1 x *]] }
MPI Rank 1: 0000008FA39C7C00: {[B2 Value[132 x 1]] }
MPI Rank 1: 0000008FA39C7CA0: {[W1 Gradient[512 x 512]] [W1*H1+B1 Value[512 x 1 x *]] }
MPI Rank 1: 0000008FA39C7DE0: {[W2 Value[132 x 512]] }
MPI Rank 1: 0000008FA39C7F20: {[EvalErrorPrediction Value[1]] }
MPI Rank 1: 0000008FA39C8060: {[MVNormalizedFeatures Value[363 x *]] }
MPI Rank 1: 0000008FA39C8100: {[H1 Value[512 x 1 x *]] [W0*features Gradient[512 x *]] }
MPI Rank 1: 0000008FA39C8240: {[LogOfPrior Value[132]] }
MPI Rank 1: 0000008FA39C8380: {[CrossEntropyWithSoftmax Gradient[1]] }
MPI Rank 1: 0000008FA39C8560: {[B1 Gradient[512 x 1]] [H2 Gradient[512 x 1 x *]] [HLast Gradient[132 x 1 x *]] }
MPI Rank 1: 0000008FA39C8600: {[W2*H1 Gradient[132 x 1 x *]] }
MPI Rank 1: 0000008FA39C86A0: {[B2 Gradient[132 x 1]] }
MPI Rank 1: 0000008FA39C89C0: {[W0*features+B0 Gradient[512 x 1 x *]] [W1*H1 Value[512 x 1 x *]] }
MPI Rank 1: 0000008FA39C8CE0: {[B1 Value[512 x 1]] }
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:42:45: Precomputing --> 3 PreCompute nodes found.
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:42:45: 	MeanOfFeatures = Mean()
MPI Rank 1: 07/14/2016 05:42:45: 	InvStdOfFeatures = InvStdDev()
MPI Rank 1: 07/14/2016 05:42:45: 	Prior = Mean()
MPI Rank 1: minibatchiterator: epoch 0: frames [0..252734] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 1: requiredata: determined feature kind as 33-dimensional 'USER' with frame shift 10.0 ms
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:42:46: Precomputing --> Completed.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:42:46: Starting Epoch 1: learning rate per sample = 0.015625  effective momentum = 0.900000  momentum as time constant = 607.4 samples
MPI Rank 1: minibatchiterator: epoch 0: frames [0..20480] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:42:46: Starting minibatch loop.
MPI Rank 1: 07/14/2016 05:42:47:  Epoch[ 1 of 5]-Minibatch[   1-   3, 0.94%]: CrossEntropyWithSoftmax = 4.60890820 * 192; EvalErrorPrediction = 0.95312500 * 192; time = 0.0979s; samplesPerSecond = 1961.8
MPI Rank 1: 07/14/2016 05:42:47:  Epoch[ 1 of 5]-Minibatch[   4-   6, 1.88%]: CrossEntropyWithSoftmax = 4.52716679 * 192; EvalErrorPrediction = 0.92187500 * 192; time = 0.1023s; samplesPerSecond = 1876.3
MPI Rank 1: 07/14/2016 05:42:47:  Epoch[ 1 of 5]-Minibatch[   7-   9, 2.81%]: CrossEntropyWithSoftmax = 4.33660175 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.0783s; samplesPerSecond = 2451.8
MPI Rank 1: 07/14/2016 05:42:47:  Epoch[ 1 of 5]-Minibatch[  10-  12, 3.75%]: CrossEntropyWithSoftmax = 4.32573214 * 192; EvalErrorPrediction = 0.90104167 * 192; time = 0.0990s; samplesPerSecond = 1939.8
MPI Rank 1: 07/14/2016 05:42:47:  Epoch[ 1 of 5]-Minibatch[  13-  15, 4.69%]: CrossEntropyWithSoftmax = 4.35436418 * 192; EvalErrorPrediction = 0.90625000 * 192; time = 0.0911s; samplesPerSecond = 2107.9
MPI Rank 1: 07/14/2016 05:42:47:  Epoch[ 1 of 5]-Minibatch[  16-  18, 5.63%]: CrossEntropyWithSoftmax = 4.08519364 * 192; EvalErrorPrediction = 0.87500000 * 192; time = 0.1006s; samplesPerSecond = 1908.4
MPI Rank 1: 07/14/2016 05:42:47:  Epoch[ 1 of 5]-Minibatch[  19-  21, 6.56%]: CrossEntropyWithSoftmax = 4.00677380 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.0944s; samplesPerSecond = 2034.7
MPI Rank 1: 07/14/2016 05:42:47:  Epoch[ 1 of 5]-Minibatch[  22-  24, 7.50%]: CrossEntropyWithSoftmax = 4.07175221 * 192; EvalErrorPrediction = 0.86979167 * 192; time = 0.1008s; samplesPerSecond = 1904.9
MPI Rank 1: 07/14/2016 05:42:47:  Epoch[ 1 of 5]-Minibatch[  25-  27, 8.44%]: CrossEntropyWithSoftmax = 3.92954318 * 192; EvalErrorPrediction = 0.81770833 * 192; time = 0.0941s; samplesPerSecond = 2040.9
MPI Rank 1: 07/14/2016 05:42:47:  Epoch[ 1 of 5]-Minibatch[  28-  30, 9.38%]: CrossEntropyWithSoftmax = 3.86117205 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.1006s; samplesPerSecond = 1908.7
MPI Rank 1: 07/14/2016 05:42:47:  Epoch[ 1 of 5]-Minibatch[  31-  33, 10.31%]: CrossEntropyWithSoftmax = 3.93465921 * 192; EvalErrorPrediction = 0.90625000 * 192; time = 0.0938s; samplesPerSecond = 2046.5
MPI Rank 1: 07/14/2016 05:42:48:  Epoch[ 1 of 5]-Minibatch[  34-  36, 11.25%]: CrossEntropyWithSoftmax = 4.12618509 * 192; EvalErrorPrediction = 0.92187500 * 192; time = 0.1008s; samplesPerSecond = 1904.6
MPI Rank 1: 07/14/2016 05:42:48:  Epoch[ 1 of 5]-Minibatch[  37-  39, 12.19%]: CrossEntropyWithSoftmax = 3.70583042 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.0942s; samplesPerSecond = 2038.7
MPI Rank 1: 07/14/2016 05:42:48:  Epoch[ 1 of 5]-Minibatch[  40-  42, 13.13%]: CrossEntropyWithSoftmax = 3.88217192 * 192; EvalErrorPrediction = 0.90104167 * 192; time = 0.1007s; samplesPerSecond = 1905.9
MPI Rank 1: 07/14/2016 05:42:48:  Epoch[ 1 of 5]-Minibatch[  43-  45, 14.06%]: CrossEntropyWithSoftmax = 3.87616084 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.0939s; samplesPerSecond = 2044.4
MPI Rank 1: 07/14/2016 05:42:48:  Epoch[ 1 of 5]-Minibatch[  46-  48, 15.00%]: CrossEntropyWithSoftmax = 3.85875612 * 192; EvalErrorPrediction = 0.90625000 * 192; time = 0.1006s; samplesPerSecond = 1908.8
MPI Rank 1: 07/14/2016 05:42:48:  Epoch[ 1 of 5]-Minibatch[  49-  51, 15.94%]: CrossEntropyWithSoftmax = 3.78648456 * 192; EvalErrorPrediction = 0.95833333 * 192; time = 0.0957s; samplesPerSecond = 2006.5
MPI Rank 1: 07/14/2016 05:42:48:  Epoch[ 1 of 5]-Minibatch[  52-  54, 16.88%]: CrossEntropyWithSoftmax = 3.62874694 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.1006s; samplesPerSecond = 1909.2
MPI Rank 1: 07/14/2016 05:42:48:  Epoch[ 1 of 5]-Minibatch[  55-  57, 17.81%]: CrossEntropyWithSoftmax = 3.66446492 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.0926s; samplesPerSecond = 2072.4
MPI Rank 1: 07/14/2016 05:42:48:  Epoch[ 1 of 5]-Minibatch[  58-  60, 18.75%]: CrossEntropyWithSoftmax = 3.79215195 * 192; EvalErrorPrediction = 0.90625000 * 192; time = 0.1024s; samplesPerSecond = 1875.6
MPI Rank 1: 07/14/2016 05:42:48:  Epoch[ 1 of 5]-Minibatch[  61-  63, 19.69%]: CrossEntropyWithSoftmax = 3.43885126 * 192; EvalErrorPrediction = 0.84375000 * 192; time = 0.0940s; samplesPerSecond = 2042.7
MPI Rank 1: 07/14/2016 05:42:49:  Epoch[ 1 of 5]-Minibatch[  64-  66, 20.63%]: CrossEntropyWithSoftmax = 3.50156326 * 192; EvalErrorPrediction = 0.81770833 * 192; time = 0.1011s; samplesPerSecond = 1899.5
MPI Rank 1: 07/14/2016 05:42:49:  Epoch[ 1 of 5]-Minibatch[  67-  69, 21.56%]: CrossEntropyWithSoftmax = 3.52543190 * 192; EvalErrorPrediction = 0.82291667 * 192; time = 0.0936s; samplesPerSecond = 2050.8
MPI Rank 1: 07/14/2016 05:42:49:  Epoch[ 1 of 5]-Minibatch[  70-  72, 22.50%]: CrossEntropyWithSoftmax = 3.58322877 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.1005s; samplesPerSecond = 1911.4
MPI Rank 1: 07/14/2016 05:42:49:  Epoch[ 1 of 5]-Minibatch[  73-  75, 23.44%]: CrossEntropyWithSoftmax = 3.61849156 * 192; EvalErrorPrediction = 0.85937500 * 192; time = 0.0929s; samplesPerSecond = 2066.1
MPI Rank 1: 07/14/2016 05:42:49:  Epoch[ 1 of 5]-Minibatch[  76-  78, 24.38%]: CrossEntropyWithSoftmax = 3.45622012 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.1023s; samplesPerSecond = 1877.5
MPI Rank 1: 07/14/2016 05:42:49:  Epoch[ 1 of 5]-Minibatch[  79-  81, 25.31%]: CrossEntropyWithSoftmax = 3.43723757 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.0926s; samplesPerSecond = 2074.3
MPI Rank 1: 07/14/2016 05:42:49:  Epoch[ 1 of 5]-Minibatch[  82-  84, 26.25%]: CrossEntropyWithSoftmax = 3.36631241 * 192; EvalErrorPrediction = 0.77083333 * 192; time = 0.1023s; samplesPerSecond = 1876.7
MPI Rank 1: 07/14/2016 05:42:49:  Epoch[ 1 of 5]-Minibatch[  85-  87, 27.19%]: CrossEntropyWithSoftmax = 3.39051228 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.0886s; samplesPerSecond = 2167.9
MPI Rank 1: 07/14/2016 05:42:49:  Epoch[ 1 of 5]-Minibatch[  88-  90, 28.13%]: CrossEntropyWithSoftmax = 3.20390400 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.0910s; samplesPerSecond = 2108.9
MPI Rank 1: 07/14/2016 05:42:49:  Epoch[ 1 of 5]-Minibatch[  91-  93, 29.06%]: CrossEntropyWithSoftmax = 3.49475100 * 192; EvalErrorPrediction = 0.78645833 * 192; time = 0.1032s; samplesPerSecond = 1860.0
MPI Rank 1: 07/14/2016 05:42:50:  Epoch[ 1 of 5]-Minibatch[  94-  96, 30.00%]: CrossEntropyWithSoftmax = 3.47041320 * 192; EvalErrorPrediction = 0.79166667 * 192; time = 0.1060s; samplesPerSecond = 1811.7
MPI Rank 1: 07/14/2016 05:42:50:  Epoch[ 1 of 5]-Minibatch[  97-  99, 30.94%]: CrossEntropyWithSoftmax = 3.57940439 * 192; EvalErrorPrediction = 0.81250000 * 192; time = 0.0926s; samplesPerSecond = 2073.9
MPI Rank 1: 07/14/2016 05:42:50:  Epoch[ 1 of 5]-Minibatch[ 100- 102, 31.87%]: CrossEntropyWithSoftmax = 3.52233938 * 192; EvalErrorPrediction = 0.82812500 * 192; time = 0.1008s; samplesPerSecond = 1905.0
MPI Rank 1: 07/14/2016 05:42:50:  Epoch[ 1 of 5]-Minibatch[ 103- 105, 32.81%]: CrossEntropyWithSoftmax = 3.43772986 * 192; EvalErrorPrediction = 0.84895833 * 192; time = 0.0895s; samplesPerSecond = 2144.3
MPI Rank 1: 07/14/2016 05:42:50:  Epoch[ 1 of 5]-Minibatch[ 106- 108, 33.75%]: CrossEntropyWithSoftmax = 2.93817600 * 192; EvalErrorPrediction = 0.75000000 * 192; time = 0.1038s; samplesPerSecond = 1849.9
MPI Rank 1: 07/14/2016 05:42:50:  Epoch[ 1 of 5]-Minibatch[ 109- 111, 34.69%]: CrossEntropyWithSoftmax = 3.24865153 * 192; EvalErrorPrediction = 0.78645833 * 192; time = 0.0909s; samplesPerSecond = 2112.9
MPI Rank 1: 07/14/2016 05:42:50:  Epoch[ 1 of 5]-Minibatch[ 112- 114, 35.63%]: CrossEntropyWithSoftmax = 3.33241490 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.0916s; samplesPerSecond = 2095.8
MPI Rank 1: 07/14/2016 05:42:50:  Epoch[ 1 of 5]-Minibatch[ 115- 117, 36.56%]: CrossEntropyWithSoftmax = 3.26380454 * 192; EvalErrorPrediction = 0.81770833 * 192; time = 0.1032s; samplesPerSecond = 1860.5
MPI Rank 1: 07/14/2016 05:42:50:  Epoch[ 1 of 5]-Minibatch[ 118- 120, 37.50%]: CrossEntropyWithSoftmax = 3.37946974 * 192; EvalErrorPrediction = 0.80208333 * 192; time = 0.0907s; samplesPerSecond = 2115.7
MPI Rank 1: 07/14/2016 05:42:50:  Epoch[ 1 of 5]-Minibatch[ 121- 123, 38.44%]: CrossEntropyWithSoftmax = 3.32789345 * 192; EvalErrorPrediction = 0.80208333 * 192; time = 0.1032s; samplesPerSecond = 1861.0
MPI Rank 1: 07/14/2016 05:42:50:  Epoch[ 1 of 5]-Minibatch[ 124- 126, 39.38%]: CrossEntropyWithSoftmax = 3.07664184 * 192; EvalErrorPrediction = 0.76562500 * 192; time = 0.0914s; samplesPerSecond = 2100.2
MPI Rank 1: 07/14/2016 05:42:51:  Epoch[ 1 of 5]-Minibatch[ 127- 129, 40.31%]: CrossEntropyWithSoftmax = 3.17477588 * 192; EvalErrorPrediction = 0.74479167 * 192; time = 0.1007s; samplesPerSecond = 1907.6
MPI Rank 1: 07/14/2016 05:42:51:  Epoch[ 1 of 5]-Minibatch[ 130- 132, 41.25%]: CrossEntropyWithSoftmax = 3.01233572 * 192; EvalErrorPrediction = 0.71875000 * 192; time = 0.0925s; samplesPerSecond = 2075.5
MPI Rank 1: 07/14/2016 05:42:51:  Epoch[ 1 of 5]-Minibatch[ 133- 135, 42.19%]: CrossEntropyWithSoftmax = 3.20672882 * 192; EvalErrorPrediction = 0.81770833 * 192; time = 0.1016s; samplesPerSecond = 1889.8
MPI Rank 1: 07/14/2016 05:42:51:  Epoch[ 1 of 5]-Minibatch[ 136- 138, 43.13%]: CrossEntropyWithSoftmax = 3.11087078 * 192; EvalErrorPrediction = 0.82812500 * 192; time = 0.0923s; samplesPerSecond = 2080.4
MPI Rank 1: 07/14/2016 05:42:51:  Epoch[ 1 of 5]-Minibatch[ 139- 141, 44.06%]: CrossEntropyWithSoftmax = 2.97524024 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.1013s; samplesPerSecond = 1895.9
MPI Rank 1: 07/14/2016 05:42:51:  Epoch[ 1 of 5]-Minibatch[ 142- 144, 45.00%]: CrossEntropyWithSoftmax = 3.16993860 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.0899s; samplesPerSecond = 2136.7
MPI Rank 1: 07/14/2016 05:42:51:  Epoch[ 1 of 5]-Minibatch[ 145- 147, 45.94%]: CrossEntropyWithSoftmax = 3.06069782 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.0910s; samplesPerSecond = 2109.0
MPI Rank 1: 07/14/2016 05:42:51:  Epoch[ 1 of 5]-Minibatch[ 148- 150, 46.88%]: CrossEntropyWithSoftmax = 3.02104665 * 192; EvalErrorPrediction = 0.71354167 * 192; time = 0.1005s; samplesPerSecond = 1910.5
MPI Rank 1: 07/14/2016 05:42:51:  Epoch[ 1 of 5]-Minibatch[ 151- 153, 47.81%]: CrossEntropyWithSoftmax = 2.89479193 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0936s; samplesPerSecond = 2051.6
MPI Rank 1: 07/14/2016 05:42:51:  Epoch[ 1 of 5]-Minibatch[ 154- 156, 48.75%]: CrossEntropyWithSoftmax = 3.05581089 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.1005s; samplesPerSecond = 1911.2
MPI Rank 1: 07/14/2016 05:42:52:  Epoch[ 1 of 5]-Minibatch[ 157- 159, 49.69%]: CrossEntropyWithSoftmax = 2.81580270 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0941s; samplesPerSecond = 2039.9
MPI Rank 1: 07/14/2016 05:42:52:  Epoch[ 1 of 5]-Minibatch[ 160- 162, 50.63%]: CrossEntropyWithSoftmax = 2.96542964 * 192; EvalErrorPrediction = 0.73437500 * 192; time = 0.1032s; samplesPerSecond = 1859.8
MPI Rank 1: 07/14/2016 05:42:52:  Epoch[ 1 of 5]-Minibatch[ 163- 165, 51.56%]: CrossEntropyWithSoftmax = 2.80446480 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.0915s; samplesPerSecond = 2098.4
MPI Rank 1: 07/14/2016 05:42:52:  Epoch[ 1 of 5]-Minibatch[ 166- 168, 52.50%]: CrossEntropyWithSoftmax = 2.98588565 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.1017s; samplesPerSecond = 1888.2
MPI Rank 1: 07/14/2016 05:42:52:  Epoch[ 1 of 5]-Minibatch[ 169- 171, 53.44%]: CrossEntropyWithSoftmax = 2.83126023 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0923s; samplesPerSecond = 2080.3
MPI Rank 1: 07/14/2016 05:42:52:  Epoch[ 1 of 5]-Minibatch[ 172- 174, 54.37%]: CrossEntropyWithSoftmax = 2.65390849 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.1023s; samplesPerSecond = 1877.8
MPI Rank 1: 07/14/2016 05:42:52:  Epoch[ 1 of 5]-Minibatch[ 175- 177, 55.31%]: CrossEntropyWithSoftmax = 2.78675476 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.0892s; samplesPerSecond = 2152.9
MPI Rank 1: 07/14/2016 05:42:52:  Epoch[ 1 of 5]-Minibatch[ 178- 180, 56.25%]: CrossEntropyWithSoftmax = 2.75042547 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.1040s; samplesPerSecond = 1846.4
MPI Rank 1: 07/14/2016 05:42:52:  Epoch[ 1 of 5]-Minibatch[ 181- 183, 57.19%]: CrossEntropyWithSoftmax = 2.65031287 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.0908s; samplesPerSecond = 2114.1
MPI Rank 1: 07/14/2016 05:42:52:  Epoch[ 1 of 5]-Minibatch[ 184- 186, 58.13%]: CrossEntropyWithSoftmax = 2.85962626 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.1058s; samplesPerSecond = 1814.9
MPI Rank 1: 07/14/2016 05:42:53:  Epoch[ 1 of 5]-Minibatch[ 187- 189, 59.06%]: CrossEntropyWithSoftmax = 2.61674669 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0929s; samplesPerSecond = 2067.8
MPI Rank 1: 07/14/2016 05:42:53:  Epoch[ 1 of 5]-Minibatch[ 190- 192, 60.00%]: CrossEntropyWithSoftmax = 2.59389525 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.1020s; samplesPerSecond = 1882.1
MPI Rank 1: 07/14/2016 05:42:53:  Epoch[ 1 of 5]-Minibatch[ 193- 195, 60.94%]: CrossEntropyWithSoftmax = 2.72402489 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.0927s; samplesPerSecond = 2070.1
MPI Rank 1: 07/14/2016 05:42:53:  Epoch[ 1 of 5]-Minibatch[ 196- 198, 61.88%]: CrossEntropyWithSoftmax = 2.66031776 * 192; EvalErrorPrediction = 0.67187500 * 192; time = 0.1020s; samplesPerSecond = 1882.9
MPI Rank 1: 07/14/2016 05:42:53:  Epoch[ 1 of 5]-Minibatch[ 199- 201, 62.81%]: CrossEntropyWithSoftmax = 2.70495981 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.0927s; samplesPerSecond = 2072.0
MPI Rank 1: 07/14/2016 05:42:53:  Epoch[ 1 of 5]-Minibatch[ 202- 204, 63.75%]: CrossEntropyWithSoftmax = 2.58198915 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.1019s; samplesPerSecond = 1884.6
MPI Rank 1: 07/14/2016 05:42:53:  Epoch[ 1 of 5]-Minibatch[ 205- 207, 64.69%]: CrossEntropyWithSoftmax = 2.52865200 * 192; EvalErrorPrediction = 0.58333333 * 192; time = 0.0942s; samplesPerSecond = 2039.0
MPI Rank 1: 07/14/2016 05:42:53:  Epoch[ 1 of 5]-Minibatch[ 208- 210, 65.63%]: CrossEntropyWithSoftmax = 2.39380567 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.1005s; samplesPerSecond = 1910.3
MPI Rank 1: 07/14/2016 05:42:53:  Epoch[ 1 of 5]-Minibatch[ 211- 213, 66.56%]: CrossEntropyWithSoftmax = 2.68679304 * 192; EvalErrorPrediction = 0.70833333 * 192; time = 0.0940s; samplesPerSecond = 2042.8
MPI Rank 1: 07/14/2016 05:42:53:  Epoch[ 1 of 5]-Minibatch[ 214- 216, 67.50%]: CrossEntropyWithSoftmax = 2.70882982 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.1006s; samplesPerSecond = 1908.2
MPI Rank 1: 07/14/2016 05:42:53:  Epoch[ 1 of 5]-Minibatch[ 217- 219, 68.44%]: CrossEntropyWithSoftmax = 2.51425379 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.0938s; samplesPerSecond = 2046.1
MPI Rank 1: 07/14/2016 05:42:54:  Epoch[ 1 of 5]-Minibatch[ 220- 222, 69.38%]: CrossEntropyWithSoftmax = 2.50672974 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.1006s; samplesPerSecond = 1908.7
MPI Rank 1: 07/14/2016 05:42:54:  Epoch[ 1 of 5]-Minibatch[ 223- 225, 70.31%]: CrossEntropyWithSoftmax = 2.69121211 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.0933s; samplesPerSecond = 2057.9
MPI Rank 1: 07/14/2016 05:42:54:  Epoch[ 1 of 5]-Minibatch[ 226- 228, 71.25%]: CrossEntropyWithSoftmax = 2.38196469 * 192; EvalErrorPrediction = 0.56250000 * 192; time = 0.1009s; samplesPerSecond = 1902.7
MPI Rank 1: 07/14/2016 05:42:54:  Epoch[ 1 of 5]-Minibatch[ 229- 231, 72.19%]: CrossEntropyWithSoftmax = 2.44279881 * 192; EvalErrorPrediction = 0.66666667 * 192; time = 0.0928s; samplesPerSecond = 2069.5
MPI Rank 1: 07/14/2016 05:42:54:  Epoch[ 1 of 5]-Minibatch[ 232- 234, 73.13%]: CrossEntropyWithSoftmax = 2.44240296 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.1017s; samplesPerSecond = 1887.0
MPI Rank 1: 07/14/2016 05:42:54:  Epoch[ 1 of 5]-Minibatch[ 235- 237, 74.06%]: CrossEntropyWithSoftmax = 2.53190921 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.0932s; samplesPerSecond = 2060.1
MPI Rank 1: 07/14/2016 05:42:54:  Epoch[ 1 of 5]-Minibatch[ 238- 240, 75.00%]: CrossEntropyWithSoftmax = 2.48839884 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.1007s; samplesPerSecond = 1906.6
MPI Rank 1: 07/14/2016 05:42:54:  Epoch[ 1 of 5]-Minibatch[ 241- 243, 75.94%]: CrossEntropyWithSoftmax = 2.43919959 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.0935s; samplesPerSecond = 2052.4
MPI Rank 1: 07/14/2016 05:42:54:  Epoch[ 1 of 5]-Minibatch[ 244- 246, 76.88%]: CrossEntropyWithSoftmax = 2.40142421 * 192; EvalErrorPrediction = 0.59375000 * 192; time = 0.1013s; samplesPerSecond = 1894.9
MPI Rank 1: 07/14/2016 05:42:54:  Epoch[ 1 of 5]-Minibatch[ 247- 249, 77.81%]: CrossEntropyWithSoftmax = 2.59285302 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.0940s; samplesPerSecond = 2042.8
MPI Rank 1: 07/14/2016 05:42:55:  Epoch[ 1 of 5]-Minibatch[ 250- 252, 78.75%]: CrossEntropyWithSoftmax = 2.20980454 * 192; EvalErrorPrediction = 0.56250000 * 192; time = 0.1013s; samplesPerSecond = 1895.9
MPI Rank 1: 07/14/2016 05:42:55:  Epoch[ 1 of 5]-Minibatch[ 253- 255, 79.69%]: CrossEntropyWithSoftmax = 2.51329030 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.0929s; samplesPerSecond = 2067.8
MPI Rank 1: 07/14/2016 05:42:55:  Epoch[ 1 of 5]-Minibatch[ 256- 258, 80.63%]: CrossEntropyWithSoftmax = 2.50508827 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.1017s; samplesPerSecond = 1888.3
MPI Rank 1: 07/14/2016 05:42:55:  Epoch[ 1 of 5]-Minibatch[ 259- 261, 81.56%]: CrossEntropyWithSoftmax = 2.20752202 * 192; EvalErrorPrediction = 0.58333333 * 192; time = 0.0936s; samplesPerSecond = 2050.4
MPI Rank 1: 07/14/2016 05:42:55:  Epoch[ 1 of 5]-Minibatch[ 262- 264, 82.50%]: CrossEntropyWithSoftmax = 2.15390534 * 192; EvalErrorPrediction = 0.53125000 * 192; time = 0.1019s; samplesPerSecond = 1883.3
MPI Rank 1: 07/14/2016 05:42:55:  Epoch[ 1 of 5]-Minibatch[ 265- 267, 83.44%]: CrossEntropyWithSoftmax = 2.26279557 * 192; EvalErrorPrediction = 0.58333333 * 192; time = 0.0934s; samplesPerSecond = 2056.2
MPI Rank 1: 07/14/2016 05:42:55:  Epoch[ 1 of 5]-Minibatch[ 268- 270, 84.38%]: CrossEntropyWithSoftmax = 2.13640681 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.1007s; samplesPerSecond = 1907.6
MPI Rank 1: 07/14/2016 05:42:55:  Epoch[ 1 of 5]-Minibatch[ 271- 273, 85.31%]: CrossEntropyWithSoftmax = 2.45376287 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.0928s; samplesPerSecond = 2070.0
MPI Rank 1: 07/14/2016 05:42:55:  Epoch[ 1 of 5]-Minibatch[ 274- 276, 86.25%]: CrossEntropyWithSoftmax = 2.12574189 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.1019s; samplesPerSecond = 1884.6
MPI Rank 1: 07/14/2016 05:42:55:  Epoch[ 1 of 5]-Minibatch[ 277- 279, 87.19%]: CrossEntropyWithSoftmax = 2.35150240 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.0924s; samplesPerSecond = 2078.7
MPI Rank 1: 07/14/2016 05:42:56:  Epoch[ 1 of 5]-Minibatch[ 280- 282, 88.13%]: CrossEntropyWithSoftmax = 2.33967886 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.1018s; samplesPerSecond = 1886.6
MPI Rank 1: 07/14/2016 05:42:56:  Epoch[ 1 of 5]-Minibatch[ 283- 285, 89.06%]: CrossEntropyWithSoftmax = 2.27059354 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.0928s; samplesPerSecond = 2069.2
MPI Rank 1: 07/14/2016 05:42:56:  Epoch[ 1 of 5]-Minibatch[ 286- 288, 90.00%]: CrossEntropyWithSoftmax = 2.20103423 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.1017s; samplesPerSecond = 1887.0
MPI Rank 1: 07/14/2016 05:42:56:  Epoch[ 1 of 5]-Minibatch[ 289- 291, 90.94%]: CrossEntropyWithSoftmax = 2.17361421 * 192; EvalErrorPrediction = 0.54687500 * 192; time = 0.0888s; samplesPerSecond = 2162.0
MPI Rank 1: 07/14/2016 05:42:56:  Epoch[ 1 of 5]-Minibatch[ 292- 294, 91.88%]: CrossEntropyWithSoftmax = 2.36955517 * 192; EvalErrorPrediction = 0.60937500 * 192; time = 0.0925s; samplesPerSecond = 2075.0
MPI Rank 1: 07/14/2016 05:42:56:  Epoch[ 1 of 5]-Minibatch[ 295- 297, 92.81%]: CrossEntropyWithSoftmax = 2.03617679 * 192; EvalErrorPrediction = 0.58854167 * 192; time = 0.1014s; samplesPerSecond = 1893.2
MPI Rank 1: 07/14/2016 05:42:56:  Epoch[ 1 of 5]-Minibatch[ 298- 300, 93.75%]: CrossEntropyWithSoftmax = 2.12189751 * 192; EvalErrorPrediction = 0.57812500 * 192; time = 0.1050s; samplesPerSecond = 1828.0
MPI Rank 1: 07/14/2016 05:42:56:  Epoch[ 1 of 5]-Minibatch[ 301- 303, 94.69%]: CrossEntropyWithSoftmax = 2.24415119 * 192; EvalErrorPrediction = 0.53645833 * 192; time = 0.0903s; samplesPerSecond = 2127.1
MPI Rank 1: 07/14/2016 05:42:56:  Epoch[ 1 of 5]-Minibatch[ 304- 306, 95.63%]: CrossEntropyWithSoftmax = 2.23313700 * 192; EvalErrorPrediction = 0.60937500 * 192; time = 0.0920s; samplesPerSecond = 2086.2
MPI Rank 1: 07/14/2016 05:42:56:  Epoch[ 1 of 5]-Minibatch[ 307- 309, 96.56%]: CrossEntropyWithSoftmax = 2.22962689 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.1065s; samplesPerSecond = 1802.0
MPI Rank 1: 07/14/2016 05:42:57:  Epoch[ 1 of 5]-Minibatch[ 310- 312, 97.50%]: CrossEntropyWithSoftmax = 2.12441878 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 0.0992s; samplesPerSecond = 1935.7
MPI Rank 1: 07/14/2016 05:42:57:  Epoch[ 1 of 5]-Minibatch[ 313- 315, 98.44%]: CrossEntropyWithSoftmax = 2.30683710 * 192; EvalErrorPrediction = 0.66666667 * 192; time = 0.0911s; samplesPerSecond = 2108.1
MPI Rank 1: 07/14/2016 05:42:57:  Epoch[ 1 of 5]-Minibatch[ 316- 318, 99.38%]: CrossEntropyWithSoftmax = 2.36587381 * 192; EvalErrorPrediction = 0.58333333 * 192; time = 0.1303s; samplesPerSecond = 1473.9
MPI Rank 1: 07/14/2016 05:42:57: Finished Epoch[ 1 of 5]: [Training] CrossEntropyWithSoftmax = 3.00704835 * 20480; EvalErrorPrediction = 0.72827148 * 20480; totalSamplesSeen = 20480; learningRatePerSample = 0.015625; epochTime=10.4016s
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:42:58: Starting Epoch 2: learning rate per sample = 0.001953  effective momentum = 0.656119  momentum as time constant = 607.5 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 1: frames [20480..40960] (first utterance at frame 20480), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:42:58: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 07/14/2016 05:42:58:  Epoch[ 2 of 5]-Minibatch[   1-   3, 3.75%]: CrossEntropyWithSoftmax = 2.26705665 * 292; EvalErrorPrediction = 0.59931507 * 292; time = 0.2321s; samplesPerSecond = 1257.9
MPI Rank 1: 07/14/2016 05:42:58:  Epoch[ 2 of 5]-Minibatch[   4-   6, 7.50%]: CrossEntropyWithSoftmax = 2.16062070 * 248; EvalErrorPrediction = 0.59677419 * 248; time = 0.1878s; samplesPerSecond = 1320.4
MPI Rank 1: 07/14/2016 05:42:58:  Epoch[ 2 of 5]-Minibatch[   7-   9, 11.25%]: CrossEntropyWithSoftmax = 2.21442832 * 276; EvalErrorPrediction = 0.62318841 * 276; time = 0.0914s; samplesPerSecond = 3020.2
MPI Rank 1: 07/14/2016 05:42:58:  Epoch[ 2 of 5]-Minibatch[  10-  12, 15.00%]: CrossEntropyWithSoftmax = 2.27003511 * 250; EvalErrorPrediction = 0.62400000 * 250; time = 0.0530s; samplesPerSecond = 4718.4
MPI Rank 1: 07/14/2016 05:42:58:  Epoch[ 2 of 5]-Minibatch[  13-  15, 18.75%]: CrossEntropyWithSoftmax = 2.02033971 * 248; EvalErrorPrediction = 0.58064516 * 248; time = 0.0486s; samplesPerSecond = 5104.5
MPI Rank 1: 07/14/2016 05:42:58:  Epoch[ 2 of 5]-Minibatch[  16-  18, 22.50%]: CrossEntropyWithSoftmax = 2.08558089 * 294; EvalErrorPrediction = 0.53741497 * 294; time = 0.0554s; samplesPerSecond = 5304.8
MPI Rank 1: 07/14/2016 05:42:58:  Epoch[ 2 of 5]-Minibatch[  19-  21, 26.25%]: CrossEntropyWithSoftmax = 1.89287219 * 258; EvalErrorPrediction = 0.50387597 * 258; time = 0.0501s; samplesPerSecond = 5154.6
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     0.79 seconds since last report (0.02 seconds on comm.); 4243 samples processed by 2 workers (2057 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 5.36k samplesPerSecond , throughputPerWorker = 2.68k samplesPerSecond
MPI Rank 1: 07/14/2016 05:42:58:  Epoch[ 2 of 5]-Minibatch[  22-  24, 30.00%]: CrossEntropyWithSoftmax = 2.13670883 * 279; EvalErrorPrediction = 0.55197133 * 279; time = 0.0919s; samplesPerSecond = 3036.4
MPI Rank 1: 07/14/2016 05:42:59:  Epoch[ 2 of 5]-Minibatch[  25-  27, 33.75%]: CrossEntropyWithSoftmax = 2.06298177 * 267; EvalErrorPrediction = 0.56179775 * 267; time = 0.1174s; samplesPerSecond = 2274.7
MPI Rank 1: 07/14/2016 05:42:59:  Epoch[ 2 of 5]-Minibatch[  28-  30, 37.50%]: CrossEntropyWithSoftmax = 1.91899162 * 278; EvalErrorPrediction = 0.57194245 * 278; time = 0.1375s; samplesPerSecond = 2022.6
MPI Rank 1: 07/14/2016 05:42:59:  Epoch[ 2 of 5]-Minibatch[  31-  33, 41.25%]: CrossEntropyWithSoftmax = 2.01714647 * 253; EvalErrorPrediction = 0.56521739 * 253; time = 0.1164s; samplesPerSecond = 2173.1
MPI Rank 1: 07/14/2016 05:42:59:  Epoch[ 2 of 5]-Minibatch[  34-  36, 45.00%]: CrossEntropyWithSoftmax = 1.90802206 * 286; EvalErrorPrediction = 0.53146853 * 286; time = 0.1455s; samplesPerSecond = 1965.5
MPI Rank 1: 07/14/2016 05:42:59:  Epoch[ 2 of 5]-Minibatch[  37-  39, 48.75%]: CrossEntropyWithSoftmax = 2.00958441 * 290; EvalErrorPrediction = 0.53448276 * 290; time = 0.1183s; samplesPerSecond = 2451.8
MPI Rank 1: 07/14/2016 05:42:59:  Epoch[ 2 of 5]-Minibatch[  40-  42, 52.50%]: CrossEntropyWithSoftmax = 1.89946824 * 297; EvalErrorPrediction = 0.52188552 * 297; time = 0.1510s; samplesPerSecond = 1967.0
MPI Rank 1: 07/14/2016 05:42:59:  Epoch[ 2 of 5]-Minibatch[  43-  45, 56.25%]: CrossEntropyWithSoftmax = 2.07859997 * 288; EvalErrorPrediction = 0.59722222 * 288; time = 0.1247s; samplesPerSecond = 2310.2
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.10-seconds latency this time; accumulated time on sync point = 0.10 seconds , average latency = 0.05 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     1.15 seconds since last report (0.04 seconds on comm.); 4292 samples processed by 2 workers (2139 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 3.74k samplesPerSecond , throughputPerWorker = 1.87k samplesPerSecond
MPI Rank 1: 07/14/2016 05:43:00:  Epoch[ 2 of 5]-Minibatch[  46-  48, 60.00%]: CrossEntropyWithSoftmax = 1.92547245 * 281; EvalErrorPrediction = 0.54804270 * 281; time = 0.2964s; samplesPerSecond = 948.1
MPI Rank 1: 07/14/2016 05:43:00:  Epoch[ 2 of 5]-Minibatch[  49-  51, 63.75%]: CrossEntropyWithSoftmax = 1.87578339 * 292; EvalErrorPrediction = 0.51027397 * 292; time = 0.1265s; samplesPerSecond = 2308.3
MPI Rank 1: 07/14/2016 05:43:00:  Epoch[ 2 of 5]-Minibatch[  52-  54, 67.50%]: CrossEntropyWithSoftmax = 2.00431413 * 292; EvalErrorPrediction = 0.58904110 * 292; time = 0.1437s; samplesPerSecond = 2031.8
MPI Rank 1: 07/14/2016 05:43:00:  Epoch[ 2 of 5]-Minibatch[  55-  57, 71.25%]: CrossEntropyWithSoftmax = 2.06669948 * 268; EvalErrorPrediction = 0.57462687 * 268; time = 0.1154s; samplesPerSecond = 2322.6
MPI Rank 1: 07/14/2016 05:43:00:  Epoch[ 2 of 5]-Minibatch[  58-  60, 75.00%]: CrossEntropyWithSoftmax = 1.83273866 * 270; EvalErrorPrediction = 0.52962963 * 270; time = 0.1149s; samplesPerSecond = 2350.7
MPI Rank 1: 07/14/2016 05:43:00:  Epoch[ 2 of 5]-Minibatch[  61-  63, 78.75%]: CrossEntropyWithSoftmax = 2.10245218 * 287; EvalErrorPrediction = 0.58885017 * 287; time = 0.1460s; samplesPerSecond = 1966.1
MPI Rank 1: 07/14/2016 05:43:00:  Epoch[ 2 of 5]-Minibatch[  64-  66, 82.50%]: CrossEntropyWithSoftmax = 1.92677968 * 272; EvalErrorPrediction = 0.54411765 * 272; time = 0.1193s; samplesPerSecond = 2280.6
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.10-seconds latency this time; accumulated time on sync point = 0.20 seconds , average latency = 0.07 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:     1.14 seconds since last report (0.04 seconds on comm.); 4263 samples processed by 2 workers (2137 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 3.73k samplesPerSecond , throughputPerWorker = 1.86k samplesPerSecond
MPI Rank 1: 07/14/2016 05:43:01:  Epoch[ 2 of 5]-Minibatch[  67-  69, 86.25%]: CrossEntropyWithSoftmax = 2.01944955 * 267; EvalErrorPrediction = 0.53558052 * 267; time = 0.2878s; samplesPerSecond = 927.6
MPI Rank 1: 07/14/2016 05:43:01:  Epoch[ 2 of 5]-Minibatch[  70-  72, 90.00%]: CrossEntropyWithSoftmax = 1.95768280 * 280; EvalErrorPrediction = 0.52142857 * 280; time = 0.1127s; samplesPerSecond = 2484.2
MPI Rank 1: 07/14/2016 05:43:01:  Epoch[ 2 of 5]-Minibatch[  73-  75, 93.75%]: CrossEntropyWithSoftmax = 1.76490542 * 278; EvalErrorPrediction = 0.47841727 * 278; time = 0.1166s; samplesPerSecond = 2383.5
MPI Rank 1: 07/14/2016 05:43:01:  Epoch[ 2 of 5]-Minibatch[  76-  78, 97.50%]: CrossEntropyWithSoftmax = 2.02714736 * 288; EvalErrorPrediction = 0.54861111 * 288; time = 0.1433s; samplesPerSecond = 2009.7
MPI Rank 1: 07/14/2016 05:43:01:  Epoch[ 2 of 5]-Minibatch[  79-  81, 101.25%]: CrossEntropyWithSoftmax = 1.95560429 * 174; EvalErrorPrediction = 0.60919540 * 174; time = 0.0799s; samplesPerSecond = 2178.7
MPI Rank 1: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.27-seconds latency this time; accumulated time on sync point = 0.47 seconds , average latency = 0.12 seconds
MPI Rank 1: 		(model aggregation stats) 4-th sync:     1.55 seconds since last report (0.82 seconds on comm.); 7682 samples processed by 2 workers (1020 by me);
MPI Rank 1: 		(model aggregation stats) 4-th sync: totalThroughput = 4.95k samplesPerSecond , throughputPerWorker = 2.47k samplesPerSecond
MPI Rank 1: 07/14/2016 05:43:02: Finished Epoch[ 2 of 5]: [Training] CrossEntropyWithSoftmax = 1.97981265 * 20480; EvalErrorPrediction = 0.54433594 * 20480; totalSamplesSeen = 40960; learningRatePerSample = 0.001953125; epochTime=4.63829s
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:43:02: Starting Epoch 3: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 2: frames [40960..61440] (first utterance at frame 40960), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:43:02: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 07/14/2016 05:43:03:  Epoch[ 3 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.80172711 * 1137; EvalErrorPrediction = 0.51539138 * 1137; time = 0.4908s; samplesPerSecond = 2316.6
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     0.84 seconds since last report (0.04 seconds on comm.); 4848 samples processed by 2 workers (2247 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 5.79k samplesPerSecond , throughputPerWorker = 2.90k samplesPerSecond
MPI Rank 1: 07/14/2016 05:43:03:  Epoch[ 3 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.88142829 * 1110; EvalErrorPrediction = 0.51081081 * 1110; time = 0.3410s; samplesPerSecond = 3254.8
MPI Rank 1: 07/14/2016 05:43:04:  Epoch[ 3 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.99822800 * 1105; EvalErrorPrediction = 0.55384615 * 1105; time = 0.3060s; samplesPerSecond = 3610.6
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.18-seconds latency this time; accumulated time on sync point = 0.18 seconds , average latency = 0.09 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     0.88 seconds since last report (0.03 seconds on comm.); 4857 samples processed by 2 workers (2254 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 5.52k samplesPerSecond , throughputPerWorker = 2.76k samplesPerSecond
MPI Rank 1: 07/14/2016 05:43:04:  Epoch[ 3 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.96866850 * 1149; EvalErrorPrediction = 0.54221062 * 1149; time = 0.5725s; samplesPerSecond = 2007.1
MPI Rank 1: 07/14/2016 05:43:04:  Epoch[ 3 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.90304187 * 1158; EvalErrorPrediction = 0.54835924 * 1158; time = 0.3456s; samplesPerSecond = 3350.4
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.07-seconds latency this time; accumulated time on sync point = 0.25 seconds , average latency = 0.08 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:     0.89 seconds since last report (0.04 seconds on comm.); 4905 samples processed by 2 workers (2322 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 5.51k samplesPerSecond , throughputPerWorker = 2.75k samplesPerSecond
MPI Rank 1: 07/14/2016 05:43:05:  Epoch[ 3 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.89741552 * 1164; EvalErrorPrediction = 0.52405498 * 1164; time = 0.5442s; samplesPerSecond = 2139.0
MPI Rank 1: 07/14/2016 05:43:05:  Epoch[ 3 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.88236835 * 765; EvalErrorPrediction = 0.51372549 * 765; time = 0.2357s; samplesPerSecond = 3245.3
MPI Rank 1: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.32-seconds latency this time; accumulated time on sync point = 0.56 seconds , average latency = 0.14 seconds
MPI Rank 1: 		(model aggregation stats) 4-th sync:     1.02 seconds since last report (0.45 seconds on comm.); 5870 samples processed by 2 workers (765 by me);
MPI Rank 1: 		(model aggregation stats) 4-th sync: totalThroughput = 5.76k samplesPerSecond , throughputPerWorker = 2.88k samplesPerSecond
MPI Rank 1: 07/14/2016 05:43:06: Finished Epoch[ 3 of 5]: [Training] CrossEntropyWithSoftmax = 1.89870701 * 20480; EvalErrorPrediction = 0.52910156 * 20480; totalSamplesSeen = 61440; learningRatePerSample = 9.7656251e-005; epochTime=3.63329s
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:43:06: Starting Epoch 4: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 3: frames [61440..81920] (first utterance at frame 61440), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:43:06: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 07/14/2016 05:43:06:  Epoch[ 4 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.86806960 * 1137; EvalErrorPrediction = 0.51539138 * 1137; time = 0.2159s; samplesPerSecond = 5266.2
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.04-seconds latency this time; accumulated time on sync point = 0.04 seconds , average latency = 0.04 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     0.54 seconds since last report (0.04 seconds on comm.); 4851 samples processed by 2 workers (2290 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 8.98k samplesPerSecond , throughputPerWorker = 4.49k samplesPerSecond
MPI Rank 1: 07/14/2016 05:43:07:  Epoch[ 4 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.82989649 * 1153; EvalErrorPrediction = 0.50737207 * 1153; time = 0.3195s; samplesPerSecond = 3609.0
MPI Rank 1: 07/14/2016 05:43:07:  Epoch[ 4 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.84355215 * 1172; EvalErrorPrediction = 0.51962457 * 1172; time = 0.3520s; samplesPerSecond = 3329.7
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.10-seconds latency this time; accumulated time on sync point = 0.14 seconds , average latency = 0.07 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     0.91 seconds since last report (0.05 seconds on comm.); 4948 samples processed by 2 workers (2401 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 5.43k samplesPerSecond , throughputPerWorker = 2.71k samplesPerSecond
MPI Rank 1: 07/14/2016 05:43:08:  Epoch[ 4 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.84133110 * 1229; EvalErrorPrediction = 0.52563059 * 1229; time = 0.5593s; samplesPerSecond = 2197.5
MPI Rank 1: 07/14/2016 05:43:08:  Epoch[ 4 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.80434352 * 1196; EvalErrorPrediction = 0.50418060 * 1196; time = 0.3385s; samplesPerSecond = 3533.7
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.10-seconds latency this time; accumulated time on sync point = 0.25 seconds , average latency = 0.08 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:     0.89 seconds since last report (0.04 seconds on comm.); 4911 samples processed by 2 workers (2422 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 5.54k samplesPerSecond , throughputPerWorker = 2.77k samplesPerSecond
MPI Rank 1: 07/14/2016 05:43:09:  Epoch[ 4 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.87873922 * 1226; EvalErrorPrediction = 0.50326264 * 1226; time = 0.5474s; samplesPerSecond = 2239.7
MPI Rank 1: 07/14/2016 05:43:09:  Epoch[ 4 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.80274836 * 722; EvalErrorPrediction = 0.50277008 * 722; time = 0.2252s; samplesPerSecond = 3206.5
MPI Rank 1: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.31-seconds latency this time; accumulated time on sync point = 0.56 seconds , average latency = 0.14 seconds
MPI Rank 1: 		(model aggregation stats) 4-th sync:     1.02 seconds since last report (0.46 seconds on comm.); 5770 samples processed by 2 workers (722 by me);
MPI Rank 1: 		(model aggregation stats) 4-th sync: totalThroughput = 5.66k samplesPerSecond , throughputPerWorker = 2.83k samplesPerSecond
MPI Rank 1: 07/14/2016 05:43:10: Finished Epoch[ 4 of 5]: [Training] CrossEntropyWithSoftmax = 1.84071362 * 20480; EvalErrorPrediction = 0.50903320 * 20480; totalSamplesSeen = 81920; learningRatePerSample = 9.7656251e-005; epochTime=3.36725s
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:43:10: Starting Epoch 5: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 4: frames [81920..102400] (first utterance at frame 81920), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:43:10: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 07/14/2016 05:43:10:  Epoch[ 5 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.72316561 * 1200; EvalErrorPrediction = 0.49750000 * 1200; time = 0.2947s; samplesPerSecond = 4072.3
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.17-seconds latency this time; accumulated time on sync point = 0.17 seconds , average latency = 0.17 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     0.84 seconds since last report (0.04 seconds on comm.); 4879 samples processed by 2 workers (2404 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 5.80k samplesPerSecond , throughputPerWorker = 2.90k samplesPerSecond
MPI Rank 1: 07/14/2016 05:43:11:  Epoch[ 5 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.88126267 * 1204; EvalErrorPrediction = 0.51910299 * 1204; time = 0.5409s; samplesPerSecond = 2225.8
MPI Rank 1: 07/14/2016 05:43:11:  Epoch[ 5 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.75386665 * 1233; EvalErrorPrediction = 0.47931873 * 1233; time = 0.4245s; samplesPerSecond = 2904.6
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.07-seconds latency this time; accumulated time on sync point = 0.23 seconds , average latency = 0.12 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     0.83 seconds since last report (0.05 seconds on comm.); 4542 samples processed by 2 workers (2059 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 5.47k samplesPerSecond , throughputPerWorker = 2.74k samplesPerSecond
MPI Rank 1: 07/14/2016 05:43:11:  Epoch[ 5 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.76449298 * 1232; EvalErrorPrediction = 0.50405844 * 1232; time = 0.5096s; samplesPerSecond = 2417.8
MPI Rank 1: 07/14/2016 05:43:12:  Epoch[ 5 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.76321731 * 1226; EvalErrorPrediction = 0.50489396 * 1226; time = 0.5071s; samplesPerSecond = 2417.7
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.23 seconds , average latency = 0.08 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:     0.92 seconds since last report (0.05 seconds on comm.); 4905 samples processed by 2 workers (2444 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 5.33k samplesPerSecond , throughputPerWorker = 2.66k samplesPerSecond
MPI Rank 1: 07/14/2016 05:43:12:  Epoch[ 5 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.81365828 * 1214; EvalErrorPrediction = 0.50823723 * 1214; time = 0.4120s; samplesPerSecond = 2946.8
MPI Rank 1: 07/14/2016 05:43:13:  Epoch[ 5 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.86467029 * 752; EvalErrorPrediction = 0.51728723 * 752; time = 0.3043s; samplesPerSecond = 2471.0
MPI Rank 1: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.21-seconds latency this time; accumulated time on sync point = 0.44 seconds , average latency = 0.11 seconds
MPI Rank 1: 		(model aggregation stats) 4-th sync:     1.05 seconds since last report (0.42 seconds on comm.); 6154 samples processed by 2 workers (1154 by me);
MPI Rank 1: 		(model aggregation stats) 4-th sync: totalThroughput = 5.86k samplesPerSecond , throughputPerWorker = 2.93k samplesPerSecond
MPI Rank 1: 07/14/2016 05:43:13: Finished Epoch[ 5 of 5]: [Training] CrossEntropyWithSoftmax = 1.80187852 * 20480; EvalErrorPrediction = 0.49741211 * 20480; totalSamplesSeen = 102400; learningRatePerSample = 9.7656251e-005; epochTime=3.64272s
MPI Rank 1: 07/14/2016 05:43:13: CNTKCommandTrainEnd: speechTrain
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:43:13: Action "train" complete.
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:43:13: __COMPLETED__
MPI Rank 1: ~MPIWrapper