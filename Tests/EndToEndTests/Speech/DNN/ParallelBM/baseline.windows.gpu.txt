CPU info:
    CPU Model Name: Intel(R) Xeon(R) CPU W3530 @ 2.80GHz
    Hardware threads: 4
    Total Memory: 12580404 kB
-------------------------------------------------------------------
=== Running C:\Program Files\Microsoft MPI\Bin\/mpiexec.exe -n 2 C:\jenkins\workspace\CNTK-Test-Windows-W1\x64\release\cntk.exe configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN/ParallelBM/cntk.cntk currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_gpu DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_gpu DeviceId=0 timestamping=true numCPUThreads=2 precision=double speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]] stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_gpu/stderr
-------------------------------------------------------------------
Build info: 

		Built time: Jul 14 2016 05:09:58
		Last modified date: Wed Jul 13 07:57:26 2016
		Build type: Release
		Build target: GPU
		With 1bit-SGD: no
		Math lib: mkl
		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
		CUB_PATH: C:\src\cub-1.4.1
		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
		Build Branch: HEAD
		Build SHA1: 72bee394bf461e8f6f0feb593a8416c05f481957
		Built by svcphil on DPHAIM-22
		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
-------------------------------------------------------------------
Changed current directory to C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPIWrapper: initializing MPI
-------------------------------------------------------------------
Build info: 

		Built time: Jul 14 2016 05:09:58
		Last modified date: Wed Jul 13 07:57:26 2016
		Build type: Release
		Build target: GPU
		With 1bit-SGD: no
		Math lib: mkl
		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
		CUB_PATH: C:\src\cub-1.4.1
		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
		Build Branch: HEAD
		Build SHA1: 72bee394bf461e8f6f0feb593a8416c05f481957
		Built by svcphil on DPHAIM-22
		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
-------------------------------------------------------------------
Changed current directory to C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPIWrapper: initializing MPI
ping [requestnodes (before change)]: 2 nodes pinging each other
ping [requestnodes (before change)]: 2 nodes pinging each other
ping [requestnodes (before change)]: all 2 nodes responded
ping [requestnodes (before change)]: all 2 nodes responded
requestnodes [MPIWrapper]: using 2 out of 2 MPI nodes (2 requested); we (0) are in (participating)
requestnodes [MPIWrapper]: using 2 out of 2 MPI nodes (2 requested); we (1) are in (participating)
ping [requestnodes (after change)]: 2 nodes pinging each other
ping [requestnodes (after change)]: 2 nodes pinging each other
ping [requestnodes (after change)]: all 2 nodes responded
ping [requestnodes (after change)]: all 2 nodes responded
mpihelper: we are cog 1 in a gearbox of 2
mpihelper: we are cog 0 in a gearbox of 2
ping [mpihelper]: 2 nodes pinging each other
ping [mpihelper]: 2 nodes pinging each other
ping [mpihelper]: all 2 nodes responded
ping [mpihelper]: all 2 nodes responded
MPI Rank 0: 07/14/2016 05:43:19: Redirecting stderr to file C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_gpu/stderr_speechTrain.logrank0
MPI Rank 0: 07/14/2016 05:43:19: -------------------------------------------------------------------
MPI Rank 0: 07/14/2016 05:43:19: Build info: 
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:43:19: 		Built time: Jul 14 2016 05:09:58
MPI Rank 0: 07/14/2016 05:43:19: 		Last modified date: Wed Jul 13 07:57:26 2016
MPI Rank 0: 07/14/2016 05:43:19: 		Build type: Release
MPI Rank 0: 07/14/2016 05:43:19: 		Build target: GPU
MPI Rank 0: 07/14/2016 05:43:19: 		With 1bit-SGD: no
MPI Rank 0: 07/14/2016 05:43:19: 		Math lib: mkl
MPI Rank 0: 07/14/2016 05:43:19: 		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
MPI Rank 0: 07/14/2016 05:43:19: 		CUB_PATH: C:\src\cub-1.4.1
MPI Rank 0: 07/14/2016 05:43:19: 		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
MPI Rank 0: 07/14/2016 05:43:19: 		Build Branch: HEAD
MPI Rank 0: 07/14/2016 05:43:19: 		Build SHA1: 72bee394bf461e8f6f0feb593a8416c05f481957
MPI Rank 0: 07/14/2016 05:43:19: 		Built by svcphil on DPHAIM-22
MPI Rank 0: 07/14/2016 05:43:19: 		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
MPI Rank 0: 07/14/2016 05:43:19: -------------------------------------------------------------------
MPI Rank 0: 07/14/2016 05:43:19: -------------------------------------------------------------------
MPI Rank 0: 07/14/2016 05:43:19: GPU info:
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:43:19: 		Device[0]: cores = 2496; computeCapability = 5.2; type = "Quadro M4000"; memory = 8090 MB
MPI Rank 0: 07/14/2016 05:43:19: -------------------------------------------------------------------
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:43:19: Running on cntk-muc00 at 2016/07/14 05:43:19
MPI Rank 0: 07/14/2016 05:43:19: Command line: 
MPI Rank 0: C:\jenkins\workspace\CNTK-Test-Windows-W1\x64\release\cntk.exe  configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN/ParallelBM/cntk.cntk  currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data  RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_gpu  DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data  ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN  OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_gpu  DeviceId=0  timestamping=true  numCPUThreads=2  precision=double  speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]  stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_gpu/stderr
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:43:19: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: 07/14/2016 05:43:19: precision = "float"
MPI Rank 0: command = speechTrain
MPI Rank 0: deviceId = $DeviceId$
MPI Rank 0: parallelTrain = true
MPI Rank 0: speechTrain = [
MPI Rank 0:     action = "train"
MPI Rank 0:     modelPath = "$RunDir$/models/cntkSpeech.dnn"
MPI Rank 0:     deviceId = $DeviceId$
MPI Rank 0:     traceLevel = 1
MPI Rank 0:     SimpleNetworkBuilder = [
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 0:         evalCriterion = "ErrorPrediction"
MPI Rank 0:         layerTypes = "Sigmoid"
MPI Rank 0:         initValueScale = 1.0
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         uniformInit = true
MPI Rank 0:         needPrior = true
MPI Rank 0:     ]
MPI Rank 0:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = 'CE'
MPI Rank 0:         evalCriterion = 'Err'
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 0:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 0:         featNorm = if applyMeanVarNorm
MPI Rank 0:                    then MeanVarNorm(features)
MPI Rank 0:                    else features
MPI Rank 0:         layers[layer:1..L-1] = if layer > 1
MPI Rank 0:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 0:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 0:         CE = if trainingCriterion == 'CE'
MPI Rank 0:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 0:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 0:         Err = if evalCriterion == 'Err' then
MPI Rank 0:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 0:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 0:         logPrior = LogPrior(labels)
MPI Rank 0:         // TODO: how to add a tag to an infix operation?
MPI Rank 0:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 0:     ]
MPI Rank 0:     SGD = [
MPI Rank 0:         epochSize = 20480
MPI Rank 0:         minibatchSize = 64:256:1024
MPI Rank 0:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 0:         numMBsToShowResult = 3
MPI Rank 0:         momentumPerMB = 0.9:0.656119
MPI Rank 0:         dropoutRate = 0.0
MPI Rank 0:         maxEpochs = 5
MPI Rank 0:         keepCheckPointFiles = true
MPI Rank 0:         clippingThresholdPerSample = 1#INF
MPI Rank 0:         ParallelTrain = [
MPI Rank 0:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 0:             distributedMBReading = true
MPI Rank 0:             syncPerfStats=1
MPI Rank 0:             BlockMomentumSGD = [
MPI Rank 0:                 blockSizePerWorker=2048
MPI Rank 0:                 resetSGDMomentum=true
MPI Rank 0:                 useNesterovMomentum=true
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:         AutoAdjust = [
MPI Rank 0:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 0:             loadBestModel = true
MPI Rank 0:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 0:             learnRateDecreaseFactor = 0.5
MPI Rank 0:             learnRateIncreaseFactor = 1.382
MPI Rank 0:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader = [
MPI Rank 0:         readerType = "HTKMLFReader"
MPI Rank 0:         readMethod = "blockRandomize"
MPI Rank 0:         miniBatchMode = "partial"
MPI Rank 0:         randomize = "auto"
MPI Rank 0:         verbosity = 0
MPI Rank 0:         features = [
MPI Rank 0:             dim = 363
MPI Rank 0:             type = "real"
MPI Rank 0:             scpFile = "glob_0000.scp"
MPI Rank 0:         ]
MPI Rank 0:         labels = [
MPI Rank 0:             mlfFile = "$DataDir$/glob_0000.mlf"
MPI Rank 0:             labelMappingFile = "$DataDir$/state.list"
MPI Rank 0:             labelDim = 132
MPI Rank 0:             labelType = "category"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0: ]
MPI Rank 0: currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 0: RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_gpu
MPI Rank 0: DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 0: ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN
MPI Rank 0: OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_gpu
MPI Rank 0: DeviceId=0
MPI Rank 0: timestamping=true
MPI Rank 0: numCPUThreads=2
MPI Rank 0: precision=double
MPI Rank 0: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 0: stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_gpu/stderr
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:43:19: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:43:19: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: 07/14/2016 05:43:19: precision = "float"
MPI Rank 0: command = speechTrain
MPI Rank 0: deviceId = 0
MPI Rank 0: parallelTrain = true
MPI Rank 0: speechTrain = [
MPI Rank 0:     action = "train"
MPI Rank 0:     modelPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn"
MPI Rank 0:     deviceId = 0
MPI Rank 0:     traceLevel = 1
MPI Rank 0:     SimpleNetworkBuilder = [
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 0:         evalCriterion = "ErrorPrediction"
MPI Rank 0:         layerTypes = "Sigmoid"
MPI Rank 0:         initValueScale = 1.0
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         uniformInit = true
MPI Rank 0:         needPrior = true
MPI Rank 0:     ]
MPI Rank 0:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = 'CE'
MPI Rank 0:         evalCriterion = 'Err'
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 0:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 0:         featNorm = if applyMeanVarNorm
MPI Rank 0:                    then MeanVarNorm(features)
MPI Rank 0:                    else features
MPI Rank 0:         layers[layer:1..L-1] = if layer > 1
MPI Rank 0:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 0:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 0:         CE = if trainingCriterion == 'CE'
MPI Rank 0:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 0:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 0:         Err = if evalCriterion == 'Err' then
MPI Rank 0:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 0:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 0:         logPrior = LogPrior(labels)
MPI Rank 0:         // TODO: how to add a tag to an infix operation?
MPI Rank 0:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 0:     ]
MPI Rank 0:     SGD = [
MPI Rank 0:         epochSize = 20480
MPI Rank 0:         minibatchSize = 64:256:1024
MPI Rank 0:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 0:         numMBsToShowResult = 3
MPI Rank 0:         momentumPerMB = 0.9:0.656119
MPI Rank 0:         dropoutRate = 0.0
MPI Rank 0:         maxEpochs = 5
MPI Rank 0:         keepCheckPointFiles = true
MPI Rank 0:         clippingThresholdPerSample = 1#INF
MPI Rank 0:         ParallelTrain = [
MPI Rank 0:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 0:             distributedMBReading = true
MPI Rank 0:             syncPerfStats=1
MPI Rank 0:             BlockMomentumSGD = [
MPI Rank 0:                 blockSizePerWorker=2048
MPI Rank 0:                 resetSGDMomentum=true
MPI Rank 0:                 useNesterovMomentum=true
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:         AutoAdjust = [
MPI Rank 0:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 0:             loadBestModel = true
MPI Rank 0:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 0:             learnRateDecreaseFactor = 0.5
MPI Rank 0:             learnRateIncreaseFactor = 1.382
MPI Rank 0:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader = [
MPI Rank 0:         readerType = "HTKMLFReader"
MPI Rank 0:         readMethod = "blockRandomize"
MPI Rank 0:         miniBatchMode = "partial"
MPI Rank 0:         randomize = "auto"
MPI Rank 0:         verbosity = 0
MPI Rank 0:         features = [
MPI Rank 0:             dim = 363
MPI Rank 0:             type = "real"
MPI Rank 0:             scpFile = "glob_0000.scp"
MPI Rank 0:         ]
MPI Rank 0:         labels = [
MPI Rank 0:             mlfFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf"
MPI Rank 0:             labelMappingFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list"
MPI Rank 0:             labelDim = 132
MPI Rank 0:             labelType = "category"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0: ]
MPI Rank 0: currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 0: RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_gpu
MPI Rank 0: DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 0: ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN
MPI Rank 0: OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_gpu
MPI Rank 0: DeviceId=0
MPI Rank 0: timestamping=true
MPI Rank 0: numCPUThreads=2
MPI Rank 0: precision=double
MPI Rank 0: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 0: stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_gpu/stderr
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:43:19: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:43:19: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: configparameters: cntk.cntk:command=speechTrain
MPI Rank 0: configparameters: cntk.cntk:ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN
MPI Rank 0: configparameters: cntk.cntk:currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 0: configparameters: cntk.cntk:DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 0: configparameters: cntk.cntk:deviceId=0
MPI Rank 0: configparameters: cntk.cntk:numCPUThreads=2
MPI Rank 0: configparameters: cntk.cntk:OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_gpu
MPI Rank 0: configparameters: cntk.cntk:parallelTrain=true
MPI Rank 0: configparameters: cntk.cntk:precision=double
MPI Rank 0: configparameters: cntk.cntk:RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_gpu
MPI Rank 0: configparameters: cntk.cntk:speechTrain=[
MPI Rank 0:     action = "train"
MPI Rank 0:     modelPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn"
MPI Rank 0:     deviceId = 0
MPI Rank 0:     traceLevel = 1
MPI Rank 0:     SimpleNetworkBuilder = [
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 0:         evalCriterion = "ErrorPrediction"
MPI Rank 0:         layerTypes = "Sigmoid"
MPI Rank 0:         initValueScale = 1.0
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         uniformInit = true
MPI Rank 0:         needPrior = true
MPI Rank 0:     ]
MPI Rank 0:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = 'CE'
MPI Rank 0:         evalCriterion = 'Err'
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 0:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 0:         featNorm = if applyMeanVarNorm
MPI Rank 0:                    then MeanVarNorm(features)
MPI Rank 0:                    else features
MPI Rank 0:         layers[layer:1..L-1] = if layer > 1
MPI Rank 0:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 0:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 0:         CE = if trainingCriterion == 'CE'
MPI Rank 0:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 0:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 0:         Err = if evalCriterion == 'Err' then
MPI Rank 0:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 0:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 0:         logPrior = LogPrior(labels)
MPI Rank 0:         // TODO: how to add a tag to an infix operation?
MPI Rank 0:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 0:     ]
MPI Rank 0:     SGD = [
MPI Rank 0:         epochSize = 20480
MPI Rank 0:         minibatchSize = 64:256:1024
MPI Rank 0:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 0:         numMBsToShowResult = 3
MPI Rank 0:         momentumPerMB = 0.9:0.656119
MPI Rank 0:         dropoutRate = 0.0
MPI Rank 0:         maxEpochs = 5
MPI Rank 0:         keepCheckPointFiles = true
MPI Rank 0:         clippingThresholdPerSample = 1#INF
MPI Rank 0:         ParallelTrain = [
MPI Rank 0:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 0:             distributedMBReading = true
MPI Rank 0:             syncPerfStats=1
MPI Rank 0:             BlockMomentumSGD = [
MPI Rank 0:                 blockSizePerWorker=2048
MPI Rank 0:                 resetSGDMomentum=true
MPI Rank 0:                 useNesterovMomentum=true
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:         AutoAdjust = [
MPI Rank 0:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 0:             loadBestModel = true
MPI Rank 0:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 0:             learnRateDecreaseFactor = 0.5
MPI Rank 0:             learnRateIncreaseFactor = 1.382
MPI Rank 0:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader = [
MPI Rank 0:         readerType = "HTKMLFReader"
MPI Rank 0:         readMethod = "blockRandomize"
MPI Rank 0:         miniBatchMode = "partial"
MPI Rank 0:         randomize = "auto"
MPI Rank 0:         verbosity = 0
MPI Rank 0:         features = [
MPI Rank 0:             dim = 363
MPI Rank 0:             type = "real"
MPI Rank 0:             scpFile = "glob_0000.scp"
MPI Rank 0:         ]
MPI Rank 0:         labels = [
MPI Rank 0:             mlfFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf"
MPI Rank 0:             labelMappingFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list"
MPI Rank 0:             labelDim = 132
MPI Rank 0:             labelType = "category"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0: ] [SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 0: 
MPI Rank 0: configparameters: cntk.cntk:stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_gpu/stderr
MPI Rank 0: configparameters: cntk.cntk:timestamping=true
MPI Rank 0: 07/14/2016 05:43:19: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 07/14/2016 05:43:19: Commands: speechTrain
MPI Rank 0: 07/14/2016 05:43:19: Precision = "double"
MPI Rank 0: 07/14/2016 05:43:19: Using 2 CPU threads.
MPI Rank 0: 07/14/2016 05:43:19: CNTKModelPath: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn
MPI Rank 0: 07/14/2016 05:43:19: CNTKCommandTrainInfo: speechTrain : 5
MPI Rank 0: 07/14/2016 05:43:19: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 5
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:43:19: ##############################################################################
MPI Rank 0: 07/14/2016 05:43:19: #                                                                            #
MPI Rank 0: 07/14/2016 05:43:19: # Action "train"                                                             #
MPI Rank 0: 07/14/2016 05:43:19: #                                                                            #
MPI Rank 0: 07/14/2016 05:43:19: ##############################################################################
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:43:19: CNTKCommandTrainBegin: speechTrain
MPI Rank 0: SimpleNetworkBuilder Using GPU 0
MPI Rank 0: reading script file glob_0000.scp ... 948 entries
MPI Rank 0: total 132 state names in state list C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list
MPI Rank 0: htkmlfreader: reading MLF file C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf ... total 948 entries
MPI Rank 0: ...............................................................................................feature set 0: 252734 frames in 948 out of 948 utterances
MPI Rank 0: label set 0: 129 classes
MPI Rank 0: minibatchutterancesource: 948 utterances grouped into 3 chunks, av. chunk size: 316.0 utterances, 84244.7 frames
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:43:19: Creating virgin network.
MPI Rank 0: Microsoft::MSR::CNTK::GPUMatrix<ElemType>::SetUniformRandomValue (GPU): creating curand object with seed 1, sizeof(ElemType)==8
MPI Rank 0: 
MPI Rank 0: Post-processing network...
MPI Rank 0: 
MPI Rank 0: 7 roots:
MPI Rank 0: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
MPI Rank 0: 	EvalErrorPrediction = ErrorPrediction()
MPI Rank 0: 	InvStdOfFeatures = InvStdDev()
MPI Rank 0: 	MeanOfFeatures = Mean()
MPI Rank 0: 	PosteriorProb = Softmax()
MPI Rank 0: 	Prior = Mean()
MPI Rank 0: 	ScaledLogLikelihood = Minus()
MPI Rank 0: 
MPI Rank 0: Validating network. 25 nodes to process in pass 1.
MPI Rank 0: 
MPI Rank 0: Validating --> labels = InputValue() :  -> [132 x *]
MPI Rank 0: Validating --> W2 = LearnableParameter() :  -> [132 x 512]
MPI Rank 0: Validating --> W1 = LearnableParameter() :  -> [512 x 512]
MPI Rank 0: Validating --> W0 = LearnableParameter() :  -> [512 x 363]
MPI Rank 0: Validating --> features = InputValue() :  -> [363 x *]
MPI Rank 0: Validating --> MeanOfFeatures = Mean (features) : [363 x *] -> [363]
MPI Rank 0: Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *] -> [363]
MPI Rank 0: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *], [363], [363] -> [363 x *]
MPI Rank 0: Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [512 x 363], [363 x *] -> [512 x *]
MPI Rank 0: Validating --> B0 = LearnableParameter() :  -> [512 x 1]
MPI Rank 0: Validating --> W0*features+B0 = Plus (W0*features, B0) : [512 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 0: Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 0: Validating --> W1*H1 = Times (W1, H1) : [512 x 512], [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 0: Validating --> B1 = LearnableParameter() :  -> [512 x 1]
MPI Rank 0: Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [512 x 1 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 0: Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 0: Validating --> W2*H1 = Times (W2, H2) : [132 x 512], [512 x 1 x *] -> [132 x 1 x *]
MPI Rank 0: Validating --> B2 = LearnableParameter() :  -> [132 x 1]
MPI Rank 0: Validating --> HLast = Plus (W2*H1, B2) : [132 x 1 x *], [132 x 1] -> [132 x 1 x *]
MPI Rank 0: Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 0: Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 0: Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *] -> [132 x 1 x *]
MPI Rank 0: Validating --> Prior = Mean (labels) : [132 x *] -> [132]
MPI Rank 0: Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
MPI Rank 0: Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *], [132] -> [132 x 1 x *]
MPI Rank 0: 
MPI Rank 0: Validating network. 17 nodes to process in pass 2.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: Validating network, final pass.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 12 out of 25 nodes do not share the minibatch layout with the input data.
MPI Rank 0: 
MPI Rank 0: Post-processing network complete.
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:43:19: Created model with 25 nodes on GPU 0.
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:43:19: Training criterion node(s):
MPI Rank 0: 07/14/2016 05:43:19: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:43:19: Evaluation criterion node(s):
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:43:19: 	EvalErrorPrediction = ErrorPrediction
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: Allocating matrices for forward and/or backward propagation.
MPI Rank 0: 
MPI Rank 0: Memory Sharing Structure:
MPI Rank 0: 
MPI Rank 0: 0000000000000000: {[EvalErrorPrediction Gradient[1]] [InvStdOfFeatures Gradient[363]] [LogOfPrior Gradient[132]] [MVNormalizedFeatures Gradient[363 x *]] [MeanOfFeatures Gradient[363]] [PosteriorProb Gradient[132 x 1 x *]] [PosteriorProb Value[132 x 1 x *]] [Prior Gradient[132]] [ScaledLogLikelihood Gradient[132 x 1 x *]] [features Gradient[363 x *]] [labels Gradient[132 x *]] }
MPI Rank 0: 00000068A9FA1FB0: {[W0 Value[512 x 363]] }
MPI Rank 0: 00000068A9FA2B90: {[InvStdOfFeatures Value[363]] }
MPI Rank 0: 00000068A9FA3D10: {[MeanOfFeatures Value[363]] }
MPI Rank 0: 00000068AA577D80: {[W2*H1 Gradient[132 x 1 x *]] }
MPI Rank 0: 00000068AA5783C0: {[B2 Gradient[132 x 1]] }
MPI Rank 0: 00000068AA5786E0: {[B1 Gradient[512 x 1]] [H2 Gradient[512 x 1 x *]] [HLast Gradient[132 x 1 x *]] }
MPI Rank 0: 00000068AA579540: {[CrossEntropyWithSoftmax Gradient[1]] }
MPI Rank 0: 00000068AA763190: {[MVNormalizedFeatures Value[363 x *]] }
MPI Rank 0: 00000068AA763230: {[W1 Value[512 x 512]] }
MPI Rank 0: 00000068AA763410: {[labels Value[132 x *]] }
MPI Rank 0: 00000068AA763550: {[B0 Value[512 x 1]] }
MPI Rank 0: 00000068AA763690: {[B1 Value[512 x 1]] }
MPI Rank 0: 00000068AA763870: {[Prior Value[132]] }
MPI Rank 0: 00000068AA763FF0: {[ScaledLogLikelihood Value[132 x 1 x *]] }
MPI Rank 0: 00000068AA7641D0: {[CrossEntropyWithSoftmax Value[1]] }
MPI Rank 0: 00000068AA764270: {[LogOfPrior Value[132]] }
MPI Rank 0: 00000068AA7643B0: {[W0 Gradient[512 x 363]] [W0*features+B0 Value[512 x 1 x *]] }
MPI Rank 0: 00000068AA764450: {[W0*features Value[512 x *]] }
MPI Rank 0: 00000068AA764590: {[W0*features+B0 Gradient[512 x 1 x *]] [W1*H1 Value[512 x 1 x *]] }
MPI Rank 0: 00000068AA764630: {[W1 Gradient[512 x 512]] [W1*H1+B1 Value[512 x 1 x *]] }
MPI Rank 0: 00000068AA764950: {[H1 Value[512 x 1 x *]] [W0*features Gradient[512 x *]] }
MPI Rank 0: 00000068AA7649F0: {[H2 Value[512 x 1 x *]] [W1*H1 Gradient[512 x 1 x *]] }
MPI Rank 0: 00000068AA764A90: {[B0 Gradient[512 x 1]] [H1 Gradient[512 x 1 x *]] [W1*H1+B1 Gradient[512 x 1 x *]] [W2*H1 Value[132 x 1 x *]] }
MPI Rank 0: 00000068AA764B30: {[HLast Value[132 x 1 x *]] [W2 Gradient[132 x 512]] }
MPI Rank 0: 00000068AA764BD0: {[EvalErrorPrediction Value[1]] }
MPI Rank 0: 00000068AA764DB0: {[W2 Value[132 x 512]] }
MPI Rank 0: 00000068AA764E50: {[B2 Value[132 x 1]] }
MPI Rank 0: 00000068B3585600: {[features Value[363 x *]] }
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:43:19: Precomputing --> 3 PreCompute nodes found.
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:43:19: 	MeanOfFeatures = Mean()
MPI Rank 0: 07/14/2016 05:43:19: 	InvStdOfFeatures = InvStdDev()
MPI Rank 0: 07/14/2016 05:43:19: 	Prior = Mean()
MPI Rank 0: minibatchiterator: epoch 0: frames [0..252734] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 0: requiredata: determined feature kind as 33-dimensional 'USER' with frame shift 10.0 ms
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:43:21: Precomputing --> Completed.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:43:22: Starting Epoch 1: learning rate per sample = 0.015625  effective momentum = 0.900000  momentum as time constant = 607.4 samples
MPI Rank 0: minibatchiterator: epoch 0: frames [0..20480] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:43:22: Starting minibatch loop.
MPI Rank 0: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[   1-   3, 0.94%]: CrossEntropyWithSoftmax = 4.59555827 * 192; EvalErrorPrediction = 0.95312500 * 192; time = 0.0280s; samplesPerSecond = 6862.0
MPI Rank 0: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[   4-   6, 1.88%]: CrossEntropyWithSoftmax = 4.63574590 * 192; EvalErrorPrediction = 0.92187500 * 192; time = 0.0267s; samplesPerSecond = 7192.9
MPI Rank 0: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[   7-   9, 2.81%]: CrossEntropyWithSoftmax = 4.40475736 * 192; EvalErrorPrediction = 0.90625000 * 192; time = 0.0262s; samplesPerSecond = 7331.6
MPI Rank 0: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  10-  12, 3.75%]: CrossEntropyWithSoftmax = 4.37017519 * 192; EvalErrorPrediction = 0.92187500 * 192; time = 0.0255s; samplesPerSecond = 7519.1
MPI Rank 0: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  13-  15, 4.69%]: CrossEntropyWithSoftmax = 4.34202026 * 192; EvalErrorPrediction = 0.90625000 * 192; time = 0.0254s; samplesPerSecond = 7550.7
MPI Rank 0: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  16-  18, 5.63%]: CrossEntropyWithSoftmax = 4.05288419 * 192; EvalErrorPrediction = 0.87500000 * 192; time = 0.0254s; samplesPerSecond = 7566.8
MPI Rank 0: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  19-  21, 6.56%]: CrossEntropyWithSoftmax = 3.98665980 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.0253s; samplesPerSecond = 7594.3
MPI Rank 0: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  22-  24, 7.50%]: CrossEntropyWithSoftmax = 4.04770240 * 192; EvalErrorPrediction = 0.86979167 * 192; time = 0.0254s; samplesPerSecond = 7546.9
MPI Rank 0: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  25-  27, 8.44%]: CrossEntropyWithSoftmax = 3.90302828 * 192; EvalErrorPrediction = 0.82812500 * 192; time = 0.0253s; samplesPerSecond = 7595.2
MPI Rank 0: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  28-  30, 9.38%]: CrossEntropyWithSoftmax = 3.86543260 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.0253s; samplesPerSecond = 7576.1
MPI Rank 0: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  31-  33, 10.31%]: CrossEntropyWithSoftmax = 3.91647287 * 192; EvalErrorPrediction = 0.90625000 * 192; time = 0.0254s; samplesPerSecond = 7559.9
MPI Rank 0: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  34-  36, 11.25%]: CrossEntropyWithSoftmax = 4.12386071 * 192; EvalErrorPrediction = 0.92187500 * 192; time = 0.0253s; samplesPerSecond = 7578.4
MPI Rank 0: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  37-  39, 12.19%]: CrossEntropyWithSoftmax = 3.69087731 * 192; EvalErrorPrediction = 0.83333333 * 192; time = 0.0254s; samplesPerSecond = 7566.8
MPI Rank 0: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  40-  42, 13.13%]: CrossEntropyWithSoftmax = 3.88162836 * 192; EvalErrorPrediction = 0.90104167 * 192; time = 0.0253s; samplesPerSecond = 7598.5
MPI Rank 0: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  43-  45, 14.06%]: CrossEntropyWithSoftmax = 3.87472683 * 192; EvalErrorPrediction = 0.88541667 * 192; time = 0.0255s; samplesPerSecond = 7533.0
MPI Rank 0: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  46-  48, 15.00%]: CrossEntropyWithSoftmax = 3.86120572 * 192; EvalErrorPrediction = 0.91145833 * 192; time = 0.0254s; samplesPerSecond = 7572.8
MPI Rank 0: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  49-  51, 15.94%]: CrossEntropyWithSoftmax = 3.78233163 * 192; EvalErrorPrediction = 0.95833333 * 192; time = 0.0253s; samplesPerSecond = 7595.2
MPI Rank 0: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  52-  54, 16.88%]: CrossEntropyWithSoftmax = 3.62749940 * 192; EvalErrorPrediction = 0.85937500 * 192; time = 0.0253s; samplesPerSecond = 7591.3
MPI Rank 0: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  55-  57, 17.81%]: CrossEntropyWithSoftmax = 3.66544034 * 192; EvalErrorPrediction = 0.85937500 * 192; time = 0.0255s; samplesPerSecond = 7526.5
MPI Rank 0: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  58-  60, 18.75%]: CrossEntropyWithSoftmax = 3.79012623 * 192; EvalErrorPrediction = 0.90625000 * 192; time = 0.0253s; samplesPerSecond = 7594.9
MPI Rank 0: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  61-  63, 19.69%]: CrossEntropyWithSoftmax = 3.43838716 * 192; EvalErrorPrediction = 0.83333333 * 192; time = 0.0254s; samplesPerSecond = 7555.8
MPI Rank 0: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  64-  66, 20.63%]: CrossEntropyWithSoftmax = 3.48802836 * 192; EvalErrorPrediction = 0.80208333 * 192; time = 0.0253s; samplesPerSecond = 7585.9
MPI Rank 0: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  67-  69, 21.56%]: CrossEntropyWithSoftmax = 3.52297384 * 192; EvalErrorPrediction = 0.82291667 * 192; time = 0.0253s; samplesPerSecond = 7594.0
MPI Rank 0: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  70-  72, 22.50%]: CrossEntropyWithSoftmax = 3.56777881 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.0252s; samplesPerSecond = 7630.3
MPI Rank 0: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  73-  75, 23.44%]: CrossEntropyWithSoftmax = 3.60709825 * 192; EvalErrorPrediction = 0.86979167 * 192; time = 0.0253s; samplesPerSecond = 7587.4
MPI Rank 0: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  76-  78, 24.38%]: CrossEntropyWithSoftmax = 3.43851505 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.0253s; samplesPerSecond = 7579.0
MPI Rank 0: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  79-  81, 25.31%]: CrossEntropyWithSoftmax = 3.43456895 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.0253s; samplesPerSecond = 7587.1
MPI Rank 0: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  82-  84, 26.25%]: CrossEntropyWithSoftmax = 3.34869877 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.0253s; samplesPerSecond = 7589.5
MPI Rank 0: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[  85-  87, 27.19%]: CrossEntropyWithSoftmax = 3.36772827 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.0253s; samplesPerSecond = 7584.7
MPI Rank 0: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[  88-  90, 28.13%]: CrossEntropyWithSoftmax = 3.20391887 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.0253s; samplesPerSecond = 7589.2
MPI Rank 0: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[  91-  93, 29.06%]: CrossEntropyWithSoftmax = 3.47766749 * 192; EvalErrorPrediction = 0.78645833 * 192; time = 0.0253s; samplesPerSecond = 7596.1
MPI Rank 0: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[  94-  96, 30.00%]: CrossEntropyWithSoftmax = 3.44215927 * 192; EvalErrorPrediction = 0.78645833 * 192; time = 0.0253s; samplesPerSecond = 7597.6
MPI Rank 0: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[  97-  99, 30.94%]: CrossEntropyWithSoftmax = 3.55408161 * 192; EvalErrorPrediction = 0.82291667 * 192; time = 0.0253s; samplesPerSecond = 7576.4
MPI Rank 0: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 100- 102, 31.87%]: CrossEntropyWithSoftmax = 3.50092522 * 192; EvalErrorPrediction = 0.83333333 * 192; time = 0.0254s; samplesPerSecond = 7554.0
MPI Rank 0: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 103- 105, 32.81%]: CrossEntropyWithSoftmax = 3.41013285 * 192; EvalErrorPrediction = 0.84895833 * 192; time = 0.0253s; samplesPerSecond = 7598.5
MPI Rank 0: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 106- 108, 33.75%]: CrossEntropyWithSoftmax = 2.90759530 * 192; EvalErrorPrediction = 0.73437500 * 192; time = 0.0254s; samplesPerSecond = 7554.9
MPI Rank 0: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 109- 111, 34.69%]: CrossEntropyWithSoftmax = 3.22389482 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.0252s; samplesPerSecond = 7611.8
MPI Rank 0: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 112- 114, 35.63%]: CrossEntropyWithSoftmax = 3.30804350 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.0253s; samplesPerSecond = 7591.9
MPI Rank 0: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 115- 117, 36.56%]: CrossEntropyWithSoftmax = 3.25288116 * 192; EvalErrorPrediction = 0.81250000 * 192; time = 0.0253s; samplesPerSecond = 7602.8
MPI Rank 0: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 118- 120, 37.50%]: CrossEntropyWithSoftmax = 3.35903793 * 192; EvalErrorPrediction = 0.79166667 * 192; time = 0.0254s; samplesPerSecond = 7569.2
MPI Rank 0: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 121- 123, 38.44%]: CrossEntropyWithSoftmax = 3.30650873 * 192; EvalErrorPrediction = 0.81250000 * 192; time = 0.0252s; samplesPerSecond = 7613.6
MPI Rank 0: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 124- 126, 39.38%]: CrossEntropyWithSoftmax = 3.06345980 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.0252s; samplesPerSecond = 7607.0
MPI Rank 0: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 127- 129, 40.31%]: CrossEntropyWithSoftmax = 3.15381499 * 192; EvalErrorPrediction = 0.74479167 * 192; time = 0.0253s; samplesPerSecond = 7593.7
MPI Rank 0: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 130- 132, 41.25%]: CrossEntropyWithSoftmax = 2.99509528 * 192; EvalErrorPrediction = 0.73437500 * 192; time = 0.0254s; samplesPerSecond = 7572.2
MPI Rank 0: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 133- 135, 42.19%]: CrossEntropyWithSoftmax = 3.18449473 * 192; EvalErrorPrediction = 0.81770833 * 192; time = 0.0253s; samplesPerSecond = 7575.2
MPI Rank 0: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 136- 138, 43.13%]: CrossEntropyWithSoftmax = 3.08900703 * 192; EvalErrorPrediction = 0.82291667 * 192; time = 0.0253s; samplesPerSecond = 7586.5
MPI Rank 0: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 139- 141, 44.06%]: CrossEntropyWithSoftmax = 2.96007948 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0253s; samplesPerSecond = 7583.5
MPI Rank 0: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 142- 144, 45.00%]: CrossEntropyWithSoftmax = 3.17646703 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.0253s; samplesPerSecond = 7598.5
MPI Rank 0: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 145- 147, 45.94%]: CrossEntropyWithSoftmax = 3.04459700 * 192; EvalErrorPrediction = 0.72395833 * 192; time = 0.0252s; samplesPerSecond = 7612.4
MPI Rank 0: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 148- 150, 46.88%]: CrossEntropyWithSoftmax = 3.00481869 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0252s; samplesPerSecond = 7604.3
MPI Rank 0: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 151- 153, 47.81%]: CrossEntropyWithSoftmax = 2.88356763 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0254s; samplesPerSecond = 7568.0
MPI Rank 0: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 154- 156, 48.75%]: CrossEntropyWithSoftmax = 3.05230853 * 192; EvalErrorPrediction = 0.73958333 * 192; time = 0.0253s; samplesPerSecond = 7592.5
MPI Rank 0: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 157- 159, 49.69%]: CrossEntropyWithSoftmax = 2.81339450 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.0253s; samplesPerSecond = 7580.2
MPI Rank 0: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 160- 162, 50.63%]: CrossEntropyWithSoftmax = 2.96349055 * 192; EvalErrorPrediction = 0.73437500 * 192; time = 0.0253s; samplesPerSecond = 7586.5
MPI Rank 0: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 163- 165, 51.56%]: CrossEntropyWithSoftmax = 2.79795016 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.0252s; samplesPerSecond = 7626.6
MPI Rank 0: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 166- 168, 52.50%]: CrossEntropyWithSoftmax = 2.97208651 * 192; EvalErrorPrediction = 0.76562500 * 192; time = 0.0254s; samplesPerSecond = 7571.3
MPI Rank 0: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 169- 171, 53.44%]: CrossEntropyWithSoftmax = 2.82155741 * 192; EvalErrorPrediction = 0.70833333 * 192; time = 0.0254s; samplesPerSecond = 7568.9
MPI Rank 0: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 172- 174, 54.37%]: CrossEntropyWithSoftmax = 2.63811824 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0254s; samplesPerSecond = 7565.9
MPI Rank 0: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 175- 177, 55.31%]: CrossEntropyWithSoftmax = 2.77075492 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 0.0253s; samplesPerSecond = 7586.5
MPI Rank 0: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 178- 180, 56.25%]: CrossEntropyWithSoftmax = 2.74441211 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.0254s; samplesPerSecond = 7571.9
MPI Rank 0: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 181- 183, 57.19%]: CrossEntropyWithSoftmax = 2.63317367 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0253s; samplesPerSecond = 7576.7
MPI Rank 0: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 184- 186, 58.13%]: CrossEntropyWithSoftmax = 2.84529497 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.0254s; samplesPerSecond = 7566.2
MPI Rank 0: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 187- 189, 59.06%]: CrossEntropyWithSoftmax = 2.61228778 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.0253s; samplesPerSecond = 7600.6
MPI Rank 0: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 190- 192, 60.00%]: CrossEntropyWithSoftmax = 2.57824925 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0253s; samplesPerSecond = 7590.1
MPI Rank 0: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 193- 195, 60.94%]: CrossEntropyWithSoftmax = 2.71402776 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 0.0252s; samplesPerSecond = 7612.7
MPI Rank 0: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 196- 198, 61.88%]: CrossEntropyWithSoftmax = 2.64823732 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.0252s; samplesPerSecond = 7605.8
MPI Rank 0: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 199- 201, 62.81%]: CrossEntropyWithSoftmax = 2.69907749 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0253s; samplesPerSecond = 7592.5
MPI Rank 0: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 202- 204, 63.75%]: CrossEntropyWithSoftmax = 2.56462326 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0253s; samplesPerSecond = 7582.0
MPI Rank 0: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 205- 207, 64.69%]: CrossEntropyWithSoftmax = 2.51752425 * 192; EvalErrorPrediction = 0.57291667 * 192; time = 0.0253s; samplesPerSecond = 7578.1
MPI Rank 0: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 208- 210, 65.63%]: CrossEntropyWithSoftmax = 2.39838052 * 192; EvalErrorPrediction = 0.66666667 * 192; time = 0.0252s; samplesPerSecond = 7613.0
MPI Rank 0: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 211- 213, 66.56%]: CrossEntropyWithSoftmax = 2.67807980 * 192; EvalErrorPrediction = 0.71875000 * 192; time = 0.0254s; samplesPerSecond = 7565.3
MPI Rank 0: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 214- 216, 67.50%]: CrossEntropyWithSoftmax = 2.71483202 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.0253s; samplesPerSecond = 7589.8
MPI Rank 0: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 217- 219, 68.44%]: CrossEntropyWithSoftmax = 2.51324154 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.0254s; samplesPerSecond = 7573.1
MPI Rank 0: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 220- 222, 69.38%]: CrossEntropyWithSoftmax = 2.50649730 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.0253s; samplesPerSecond = 7582.6
MPI Rank 0: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 223- 225, 70.31%]: CrossEntropyWithSoftmax = 2.67678541 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.0253s; samplesPerSecond = 7584.4
MPI Rank 0: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 226- 228, 71.25%]: CrossEntropyWithSoftmax = 2.37840607 * 192; EvalErrorPrediction = 0.57291667 * 192; time = 0.0254s; samplesPerSecond = 7560.5
MPI Rank 0: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 229- 231, 72.19%]: CrossEntropyWithSoftmax = 2.43624298 * 192; EvalErrorPrediction = 0.67187500 * 192; time = 0.0253s; samplesPerSecond = 7580.8
MPI Rank 0: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 232- 234, 73.13%]: CrossEntropyWithSoftmax = 2.43409065 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 0.0253s; samplesPerSecond = 7579.0
MPI Rank 0: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 235- 237, 74.06%]: CrossEntropyWithSoftmax = 2.52589262 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0253s; samplesPerSecond = 7583.8
MPI Rank 0: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 238- 240, 75.00%]: CrossEntropyWithSoftmax = 2.49519410 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0253s; samplesPerSecond = 7590.1
MPI Rank 0: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 241- 243, 75.94%]: CrossEntropyWithSoftmax = 2.43278558 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0254s; samplesPerSecond = 7558.2
MPI Rank 0: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 244- 246, 76.88%]: CrossEntropyWithSoftmax = 2.40515550 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.0254s; samplesPerSecond = 7556.4
MPI Rank 0: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 247- 249, 77.81%]: CrossEntropyWithSoftmax = 2.57558579 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.0252s; samplesPerSecond = 7616.6
MPI Rank 0: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 250- 252, 78.75%]: CrossEntropyWithSoftmax = 2.23121798 * 192; EvalErrorPrediction = 0.57812500 * 192; time = 0.0253s; samplesPerSecond = 7589.5
MPI Rank 0: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 253- 255, 79.69%]: CrossEntropyWithSoftmax = 2.50920913 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.0251s; samplesPerSecond = 7637.2
MPI Rank 0: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 256- 258, 80.63%]: CrossEntropyWithSoftmax = 2.51602794 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 0.0252s; samplesPerSecond = 7624.5
MPI Rank 0: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 259- 261, 81.56%]: CrossEntropyWithSoftmax = 2.19041609 * 192; EvalErrorPrediction = 0.56250000 * 192; time = 0.0253s; samplesPerSecond = 7596.4
MPI Rank 0: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 262- 264, 82.50%]: CrossEntropyWithSoftmax = 2.14558034 * 192; EvalErrorPrediction = 0.52083333 * 192; time = 0.0253s; samplesPerSecond = 7588.0
MPI Rank 0: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 265- 267, 83.44%]: CrossEntropyWithSoftmax = 2.26397052 * 192; EvalErrorPrediction = 0.57812500 * 192; time = 0.0252s; samplesPerSecond = 7610.6
MPI Rank 0: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 268- 270, 84.38%]: CrossEntropyWithSoftmax = 2.13992092 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.0253s; samplesPerSecond = 7578.1
MPI Rank 0: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 271- 273, 85.31%]: CrossEntropyWithSoftmax = 2.46059836 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0252s; samplesPerSecond = 7609.4
MPI Rank 0: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 274- 276, 86.25%]: CrossEntropyWithSoftmax = 2.11174554 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0253s; samplesPerSecond = 7575.2
MPI Rank 0: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 277- 279, 87.19%]: CrossEntropyWithSoftmax = 2.36329481 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.0252s; samplesPerSecond = 7622.7
MPI Rank 0: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 280- 282, 88.13%]: CrossEntropyWithSoftmax = 2.33020684 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0253s; samplesPerSecond = 7580.2
MPI Rank 0: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 283- 285, 89.06%]: CrossEntropyWithSoftmax = 2.24993200 * 192; EvalErrorPrediction = 0.59375000 * 192; time = 0.0252s; samplesPerSecond = 7609.4
MPI Rank 0: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 286- 288, 90.00%]: CrossEntropyWithSoftmax = 2.21490528 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.0253s; samplesPerSecond = 7574.6
MPI Rank 0: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 289- 291, 90.94%]: CrossEntropyWithSoftmax = 2.18525455 * 192; EvalErrorPrediction = 0.56770833 * 192; time = 0.0255s; samplesPerSecond = 7535.3
MPI Rank 0: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 292- 294, 91.88%]: CrossEntropyWithSoftmax = 2.37028991 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0253s; samplesPerSecond = 7597.9
MPI Rank 0: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 295- 297, 92.81%]: CrossEntropyWithSoftmax = 2.02858610 * 192; EvalErrorPrediction = 0.57291667 * 192; time = 0.0253s; samplesPerSecond = 7585.3
MPI Rank 0: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 298- 300, 93.75%]: CrossEntropyWithSoftmax = 2.12060224 * 192; EvalErrorPrediction = 0.58854167 * 192; time = 0.0252s; samplesPerSecond = 7614.5
MPI Rank 0: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 301- 303, 94.69%]: CrossEntropyWithSoftmax = 2.24345126 * 192; EvalErrorPrediction = 0.54166667 * 192; time = 0.0253s; samplesPerSecond = 7601.3
MPI Rank 0: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 304- 306, 95.63%]: CrossEntropyWithSoftmax = 2.23414476 * 192; EvalErrorPrediction = 0.58854167 * 192; time = 0.0253s; samplesPerSecond = 7602.2
MPI Rank 0: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 307- 309, 96.56%]: CrossEntropyWithSoftmax = 2.24515288 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.0251s; samplesPerSecond = 7636.0
MPI Rank 0: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 310- 312, 97.50%]: CrossEntropyWithSoftmax = 2.14391664 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.0254s; samplesPerSecond = 7573.1
MPI Rank 0: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 313- 315, 98.44%]: CrossEntropyWithSoftmax = 2.31221990 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.0252s; samplesPerSecond = 7611.2
MPI Rank 0: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 316- 318, 99.38%]: CrossEntropyWithSoftmax = 2.34285218 * 192; EvalErrorPrediction = 0.57812500 * 192; time = 0.0253s; samplesPerSecond = 7599.1
MPI Rank 0: 07/14/2016 05:43:24: Finished Epoch[ 1 of 5]: [Training] CrossEntropyWithSoftmax = 3.00091203 * 20480; EvalErrorPrediction = 0.72744141 * 20480; totalSamplesSeen = 20480; learningRatePerSample = 0.015625; epochTime=2.74185s
MPI Rank 0: 07/14/2016 05:43:25: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn.1'
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:43:25: Starting Epoch 2: learning rate per sample = 0.001953  effective momentum = 0.656119  momentum as time constant = 607.5 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 1: frames [20480..40960] (first utterance at frame 20480), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:43:25: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 07/14/2016 05:43:25:  Epoch[ 2 of 5]-Minibatch[   1-   3, 3.75%]: CrossEntropyWithSoftmax = 2.09385973 * 476; EvalErrorPrediction = 0.55672269 * 476; time = 0.0709s; samplesPerSecond = 6714.6
MPI Rank 0: 07/14/2016 05:43:25:  Epoch[ 2 of 5]-Minibatch[   4-   6, 7.50%]: CrossEntropyWithSoftmax = 2.13863313 * 520; EvalErrorPrediction = 0.57115385 * 520; time = 0.0693s; samplesPerSecond = 7507.3
MPI Rank 0: 07/14/2016 05:43:25:  Epoch[ 2 of 5]-Minibatch[   7-   9, 11.25%]: CrossEntropyWithSoftmax = 2.15664770 * 492; EvalErrorPrediction = 0.57520325 * 492; time = 0.0557s; samplesPerSecond = 8833.7
MPI Rank 0: 07/14/2016 05:43:25:  Epoch[ 2 of 5]-Minibatch[  10-  12, 15.00%]: CrossEntropyWithSoftmax = 2.13749835 * 518; EvalErrorPrediction = 0.56177606 * 518; time = 0.0595s; samplesPerSecond = 8712.8
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.02-seconds latency this time; accumulated time on sync point = 0.02 seconds , average latency = 0.02 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     0.30 seconds since last report (0.01 seconds on comm.); 4243 samples processed by 2 workers (2186 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 14.26k samplesPerSecond , throughputPerWorker = 7.13k samplesPerSecond
MPI Rank 0: 07/14/2016 05:43:25:  Epoch[ 2 of 5]-Minibatch[  13-  15, 18.75%]: CrossEntropyWithSoftmax = 2.09914722 * 520; EvalErrorPrediction = 0.57115385 * 520; time = 0.0776s; samplesPerSecond = 6699.4
MPI Rank 0: 07/14/2016 05:43:25:  Epoch[ 2 of 5]-Minibatch[  16-  18, 22.50%]: CrossEntropyWithSoftmax = 1.93242824 * 474; EvalErrorPrediction = 0.53375527 * 474; time = 0.0555s; samplesPerSecond = 8539.9
MPI Rank 0: 07/14/2016 05:43:25:  Epoch[ 2 of 5]-Minibatch[  19-  21, 26.25%]: CrossEntropyWithSoftmax = 1.93722183 * 510; EvalErrorPrediction = 0.49607843 * 510; time = 0.0551s; samplesPerSecond = 9255.1
MPI Rank 0: 07/14/2016 05:43:25:  Epoch[ 2 of 5]-Minibatch[  22-  24, 30.00%]: CrossEntropyWithSoftmax = 2.00288951 * 489; EvalErrorPrediction = 0.56850716 * 489; time = 0.0574s; samplesPerSecond = 8516.6
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.05-seconds latency this time; accumulated time on sync point = 0.06 seconds , average latency = 0.03 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     0.29 seconds since last report (0.01 seconds on comm.); 4292 samples processed by 2 workers (2153 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 14.65k samplesPerSecond , throughputPerWorker = 7.33k samplesPerSecond
MPI Rank 0: 07/14/2016 05:43:25:  Epoch[ 2 of 5]-Minibatch[  25-  27, 33.75%]: CrossEntropyWithSoftmax = 2.00513839 * 501; EvalErrorPrediction = 0.53692615 * 501; time = 0.1062s; samplesPerSecond = 4715.3
MPI Rank 0: 07/14/2016 05:43:25:  Epoch[ 2 of 5]-Minibatch[  28-  30, 37.50%]: CrossEntropyWithSoftmax = 2.09047161 * 490; EvalErrorPrediction = 0.57959184 * 490; time = 0.0533s; samplesPerSecond = 9191.3
MPI Rank 0: 07/14/2016 05:43:25:  Epoch[ 2 of 5]-Minibatch[  31-  33, 41.25%]: CrossEntropyWithSoftmax = 1.83811727 * 515; EvalErrorPrediction = 0.49902913 * 515; time = 0.0593s; samplesPerSecond = 8677.9
MPI Rank 0: 07/14/2016 05:43:25:  Epoch[ 2 of 5]-Minibatch[  34-  36, 45.00%]: CrossEntropyWithSoftmax = 1.99549155 * 482; EvalErrorPrediction = 0.56016598 * 482; time = 0.0547s; samplesPerSecond = 8817.5
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.05-seconds latency this time; accumulated time on sync point = 0.11 seconds , average latency = 0.04 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:     0.29 seconds since last report (0.01 seconds on comm.); 4263 samples processed by 2 workers (2126 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 14.55k samplesPerSecond , throughputPerWorker = 7.27k samplesPerSecond
MPI Rank 0: 07/14/2016 05:43:25:  Epoch[ 2 of 5]-Minibatch[  37-  39, 48.75%]: CrossEntropyWithSoftmax = 1.90986165 * 478; EvalErrorPrediction = 0.51255230 * 478; time = 0.1020s; samplesPerSecond = 4687.9
MPI Rank 0: 07/14/2016 05:43:26:  Epoch[ 2 of 5]-Minibatch[  40-  42, 52.50%]: CrossEntropyWithSoftmax = 1.81353535 * 471; EvalErrorPrediction = 0.53078556 * 471; time = 0.0558s; samplesPerSecond = 8448.4
MPI Rank 0: 07/14/2016 05:43:26:  Epoch[ 2 of 5]-Minibatch[  43-  45, 56.25%]: CrossEntropyWithSoftmax = 1.86106692 * 480; EvalErrorPrediction = 0.49166667 * 480; time = 0.0557s; samplesPerSecond = 8614.2
MPI Rank 0: 07/14/2016 05:43:26:  Epoch[ 2 of 5]-Minibatch[  46-  48, 60.00%]: CrossEntropyWithSoftmax = 1.86198572 * 487; EvalErrorPrediction = 0.48049281 * 487; time = 0.0490s; samplesPerSecond = 9941.2
MPI Rank 0: 07/14/2016 05:43:26:  Epoch[ 2 of 5]-Minibatch[  49-  51, 63.75%]: CrossEntropyWithSoftmax = 1.98663146 * 476; EvalErrorPrediction = 0.51890756 * 476; time = 0.0305s; samplesPerSecond = 15611.2
MPI Rank 0: 07/14/2016 05:43:26:  Epoch[ 2 of 5]-Minibatch[  52-  54, 67.50%]: CrossEntropyWithSoftmax = 1.83857284 * 476; EvalErrorPrediction = 0.52521008 * 476; time = 0.0303s; samplesPerSecond = 15716.8
MPI Rank 0: 07/14/2016 05:43:26:  Epoch[ 2 of 5]-Minibatch[  55-  57, 71.25%]: CrossEntropyWithSoftmax = 1.89980302 * 500; EvalErrorPrediction = 0.52800000 * 500; time = 0.0317s; samplesPerSecond = 15770.4
MPI Rank 0: 07/14/2016 05:43:26:  Epoch[ 2 of 5]-Minibatch[  58-  60, 75.00%]: CrossEntropyWithSoftmax = 1.95483734 * 498; EvalErrorPrediction = 0.53815261 * 498; time = 0.0316s; samplesPerSecond = 15759.5
MPI Rank 0: 07/14/2016 05:43:26:  Epoch[ 2 of 5]-Minibatch[  61-  63, 78.75%]: CrossEntropyWithSoftmax = 1.88908297 * 481; EvalErrorPrediction = 0.52390852 * 481; time = 0.0311s; samplesPerSecond = 15466.7
MPI Rank 0: 07/14/2016 05:43:26:  Epoch[ 2 of 5]-Minibatch[  64-  66, 82.50%]: CrossEntropyWithSoftmax = 1.84475883 * 496; EvalErrorPrediction = 0.52419355 * 496; time = 0.0314s; samplesPerSecond = 15810.8
MPI Rank 0: 07/14/2016 05:43:26:  Epoch[ 2 of 5]-Minibatch[  67-  69, 86.25%]: CrossEntropyWithSoftmax = 1.85382596 * 501; EvalErrorPrediction = 0.52894212 * 501; time = 0.0317s; samplesPerSecond = 15793.0
MPI Rank 0: 07/14/2016 05:43:26:  Epoch[ 2 of 5]-Minibatch[  70-  72, 90.00%]: CrossEntropyWithSoftmax = 1.90982316 * 488; EvalErrorPrediction = 0.54918033 * 488; time = 0.0313s; samplesPerSecond = 15584.6
MPI Rank 0: 07/14/2016 05:43:26:  Epoch[ 2 of 5]-Minibatch[  73-  75, 93.75%]: CrossEntropyWithSoftmax = 1.97109646 * 490; EvalErrorPrediction = 0.54489796 * 490; time = 0.0313s; samplesPerSecond = 15671.0
MPI Rank 0: 07/14/2016 05:43:26:  Epoch[ 2 of 5]-Minibatch[  76-  78, 97.50%]: CrossEntropyWithSoftmax = 1.73504303 * 480; EvalErrorPrediction = 0.48541667 * 480; time = 0.0309s; samplesPerSecond = 15546.1
MPI Rank 0: 07/14/2016 05:43:26:  Epoch[ 2 of 5]-Minibatch[  79-  81, 101.25%]: CrossEntropyWithSoftmax = 1.87620614 * 338; EvalErrorPrediction = 0.52662722 * 338; time = 0.0212s; samplesPerSecond = 15963.0
MPI Rank 0: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.11 seconds , average latency = 0.03 seconds
MPI Rank 0: 		(model aggregation stats) 4-th sync:     0.51 seconds since last report (0.00 seconds on comm.); 7682 samples processed by 2 workers (6662 by me);
MPI Rank 0: 		(model aggregation stats) 4-th sync: totalThroughput = 15.09k samplesPerSecond , throughputPerWorker = 7.54k samplesPerSecond
MPI Rank 0: 07/14/2016 05:43:26: Finished Epoch[ 2 of 5]: [Training] CrossEntropyWithSoftmax = 1.97315701 * 20480; EvalErrorPrediction = 0.54174805 * 20480; totalSamplesSeen = 40960; learningRatePerSample = 0.001953125; epochTime=1.39366s
MPI Rank 0: 07/14/2016 05:43:26: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn.2'
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:43:26: Starting Epoch 3: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 2: frames [40960..61440] (first utterance at frame 40960), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:43:26: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 07/14/2016 05:43:26:  Epoch[ 3 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.91765212 * 1935; EvalErrorPrediction = 0.53126615 * 1935; time = 0.1581s; samplesPerSecond = 12238.2
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.02-seconds latency this time; accumulated time on sync point = 0.02 seconds , average latency = 0.02 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     0.29 seconds since last report (0.02 seconds on comm.); 4848 samples processed by 2 workers (2601 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 16.71k samplesPerSecond , throughputPerWorker = 8.35k samplesPerSecond
MPI Rank 0: 07/14/2016 05:43:27:  Epoch[ 3 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.84887142 * 1962; EvalErrorPrediction = 0.53109072 * 1962; time = 0.2585s; samplesPerSecond = 7589.0
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.05-seconds latency this time; accumulated time on sync point = 0.07 seconds , average latency = 0.04 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     0.28 seconds since last report (0.02 seconds on comm.); 4857 samples processed by 2 workers (2603 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 17.20k samplesPerSecond , throughputPerWorker = 8.60k samplesPerSecond
MPI Rank 0: 07/14/2016 05:43:27:  Epoch[ 3 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.88081721 * 1967; EvalErrorPrediction = 0.53380783 * 1967; time = 0.2195s; samplesPerSecond = 8961.4
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.07-seconds latency this time; accumulated time on sync point = 0.14 seconds , average latency = 0.05 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:     0.29 seconds since last report (0.02 seconds on comm.); 4905 samples processed by 2 workers (2583 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 17.13k samplesPerSecond , throughputPerWorker = 8.56k samplesPerSecond
MPI Rank 0: 07/14/2016 05:43:27:  Epoch[ 3 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.80500001 * 1923; EvalErrorPrediction = 0.50338014 * 1923; time = 0.2174s; samplesPerSecond = 8845.9
MPI Rank 0: 07/14/2016 05:43:27:  Epoch[ 3 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.95334199 * 1914; EvalErrorPrediction = 0.53291536 * 1914; time = 0.1534s; samplesPerSecond = 12473.8
MPI Rank 0: 07/14/2016 05:43:27:  Epoch[ 3 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.93325621 * 1908; EvalErrorPrediction = 0.53511530 * 1908; time = 0.1140s; samplesPerSecond = 16731.3
MPI Rank 0: 07/14/2016 05:43:27:  Epoch[ 3 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.86472404 * 1283; EvalErrorPrediction = 0.51597818 * 1283; time = 0.0772s; samplesPerSecond = 16625.2
MPI Rank 0: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.14 seconds , average latency = 0.04 seconds
MPI Rank 0: 		(model aggregation stats) 4-th sync:     0.36 seconds since last report (0.00 seconds on comm.); 5870 samples processed by 2 workers (5105 by me);
MPI Rank 0: 		(model aggregation stats) 4-th sync: totalThroughput = 16.45k samplesPerSecond , throughputPerWorker = 8.23k samplesPerSecond
MPI Rank 0: 07/14/2016 05:43:27: Finished Epoch[ 3 of 5]: [Training] CrossEntropyWithSoftmax = 1.89285183 * 20480; EvalErrorPrediction = 0.52680664 * 20480; totalSamplesSeen = 61440; learningRatePerSample = 9.7656251e-005; epochTime=1.21672s
MPI Rank 0: 07/14/2016 05:43:27: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn.3'
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:43:27: Starting Epoch 4: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 3: frames [61440..81920] (first utterance at frame 61440), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:43:27: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 07/14/2016 05:43:28:  Epoch[ 4 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.86333327 * 1935; EvalErrorPrediction = 0.50645995 * 1935; time = 0.2178s; samplesPerSecond = 8886.2
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     0.29 seconds since last report (0.00 seconds on comm.); 4851 samples processed by 2 workers (2561 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 16.72k samplesPerSecond , throughputPerWorker = 8.36k samplesPerSecond
MPI Rank 0: 07/14/2016 05:43:28:  Epoch[ 4 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.84529556 * 1919; EvalErrorPrediction = 0.51797811 * 1919; time = 0.1712s; samplesPerSecond = 11210.8
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.08-seconds latency this time; accumulated time on sync point = 0.08 seconds , average latency = 0.04 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     0.29 seconds since last report (0.03 seconds on comm.); 4948 samples processed by 2 workers (2547 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 17.09k samplesPerSecond , throughputPerWorker = 8.55k samplesPerSecond
MPI Rank 0: 07/14/2016 05:43:28:  Epoch[ 4 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.82866780 * 1900; EvalErrorPrediction = 0.51157895 * 1900; time = 0.2516s; samplesPerSecond = 7552.6
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.06-seconds latency this time; accumulated time on sync point = 0.14 seconds , average latency = 0.05 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:     0.28 seconds since last report (0.03 seconds on comm.); 4911 samples processed by 2 workers (2489 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 17.44k samplesPerSecond , throughputPerWorker = 8.72k samplesPerSecond
MPI Rank 0: 07/14/2016 05:43:28:  Epoch[ 4 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.81705569 * 1843; EvalErrorPrediction = 0.50406945 * 1843; time = 0.2151s; samplesPerSecond = 8569.9
MPI Rank 0: 07/14/2016 05:43:28:  Epoch[ 4 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.79874941 * 1876; EvalErrorPrediction = 0.49680171 * 1876; time = 0.1441s; samplesPerSecond = 13017.6
MPI Rank 0: 07/14/2016 05:43:29:  Epoch[ 4 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.81182023 * 1846; EvalErrorPrediction = 0.50162514 * 1846; time = 0.1058s; samplesPerSecond = 17444.6
MPI Rank 0: 07/14/2016 05:43:29:  Epoch[ 4 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.86284542 * 1326; EvalErrorPrediction = 0.51960784 * 1326; time = 0.0850s; samplesPerSecond = 15595.2
MPI Rank 0: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.14 seconds , average latency = 0.03 seconds
MPI Rank 0: 		(model aggregation stats) 4-th sync:     0.35 seconds since last report (0.00 seconds on comm.); 5770 samples processed by 2 workers (5048 by me);
MPI Rank 0: 		(model aggregation stats) 4-th sync: totalThroughput = 16.57k samplesPerSecond , throughputPerWorker = 8.29k samplesPerSecond
MPI Rank 0: 07/14/2016 05:43:29: Finished Epoch[ 4 of 5]: [Training] CrossEntropyWithSoftmax = 1.83211880 * 20480; EvalErrorPrediction = 0.50991211 * 20480; totalSamplesSeen = 81920; learningRatePerSample = 9.7656251e-005; epochTime=1.21037s
MPI Rank 0: 07/14/2016 05:43:29: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn.4'
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:43:29: Starting Epoch 5: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 4: frames [81920..102400] (first utterance at frame 81920), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:43:29: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 07/14/2016 05:43:29:  Epoch[ 5 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.79614915 * 1872; EvalErrorPrediction = 0.48557692 * 1872; time = 0.1678s; samplesPerSecond = 11156.6
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.08-seconds latency this time; accumulated time on sync point = 0.08 seconds , average latency = 0.08 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     0.29 seconds since last report (0.02 seconds on comm.); 4879 samples processed by 2 workers (2475 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 16.82k samplesPerSecond , throughputPerWorker = 8.41k samplesPerSecond
MPI Rank 0: 07/14/2016 05:43:29:  Epoch[ 5 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.80463920 * 1868; EvalErrorPrediction = 0.49197002 * 1868; time = 0.2400s; samplesPerSecond = 7782.8
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.02-seconds latency this time; accumulated time on sync point = 0.09 seconds , average latency = 0.05 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     0.25 seconds since last report (0.01 seconds on comm.); 4542 samples processed by 2 workers (2483 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 17.85k samplesPerSecond , throughputPerWorker = 8.92k samplesPerSecond
MPI Rank 0: 07/14/2016 05:43:29:  Epoch[ 5 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.72412279 * 1839; EvalErrorPrediction = 0.46601414 * 1839; time = 0.1952s; samplesPerSecond = 9418.9
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.06-seconds latency this time; accumulated time on sync point = 0.16 seconds , average latency = 0.05 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:     0.29 seconds since last report (0.03 seconds on comm.); 4905 samples processed by 2 workers (2461 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 17.17k samplesPerSecond , throughputPerWorker = 8.59k samplesPerSecond
MPI Rank 0: 07/14/2016 05:43:30:  Epoch[ 5 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.83556224 * 1840; EvalErrorPrediction = 0.49565217 * 1840; time = 0.2217s; samplesPerSecond = 8298.9
MPI Rank 0: 07/14/2016 05:43:30:  Epoch[ 5 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.81120380 * 1846; EvalErrorPrediction = 0.50650054 * 1846; time = 0.1723s; samplesPerSecond = 10713.5
MPI Rank 0: 07/14/2016 05:43:30:  Epoch[ 5 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.82333172 * 1858; EvalErrorPrediction = 0.50215285 * 1858; time = 0.1082s; samplesPerSecond = 17168.1
MPI Rank 0: 07/14/2016 05:43:30:  Epoch[ 5 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.79813355 * 1296; EvalErrorPrediction = 0.50540123 * 1296; time = 0.0816s; samplesPerSecond = 15877.5
MPI Rank 0: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.16 seconds , average latency = 0.04 seconds
MPI Rank 0: 		(model aggregation stats) 4-th sync:     0.37 seconds since last report (0.00 seconds on comm.); 6154 samples processed by 2 workers (5000 by me);
MPI Rank 0: 		(model aggregation stats) 4-th sync: totalThroughput = 16.43k samplesPerSecond , throughputPerWorker = 8.21k samplesPerSecond
MPI Rank 0: 07/14/2016 05:43:30: Finished Epoch[ 5 of 5]: [Training] CrossEntropyWithSoftmax = 1.79332051 * 20480; EvalErrorPrediction = 0.49741211 * 20480; totalSamplesSeen = 102400; learningRatePerSample = 9.7656251e-005; epochTime=1.20582s
MPI Rank 0: 07/14/2016 05:43:30: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn'
MPI Rank 0: 07/14/2016 05:43:30: CNTKCommandTrainEnd: speechTrain
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:43:30: Action "train" complete.
MPI Rank 0: 
MPI Rank 0: 07/14/2016 05:43:30: __COMPLETED__
MPI Rank 0: ~MPIWrapper
MPI Rank 1: 07/14/2016 05:43:19: Redirecting stderr to file C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_gpu/stderr_speechTrain.logrank1
MPI Rank 1: 07/14/2016 05:43:19: -------------------------------------------------------------------
MPI Rank 1: 07/14/2016 05:43:19: Build info: 
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:43:19: 		Built time: Jul 14 2016 05:09:58
MPI Rank 1: 07/14/2016 05:43:19: 		Last modified date: Wed Jul 13 07:57:26 2016
MPI Rank 1: 07/14/2016 05:43:19: 		Build type: Release
MPI Rank 1: 07/14/2016 05:43:19: 		Build target: GPU
MPI Rank 1: 07/14/2016 05:43:19: 		With 1bit-SGD: no
MPI Rank 1: 07/14/2016 05:43:19: 		Math lib: mkl
MPI Rank 1: 07/14/2016 05:43:19: 		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
MPI Rank 1: 07/14/2016 05:43:19: 		CUB_PATH: C:\src\cub-1.4.1
MPI Rank 1: 07/14/2016 05:43:19: 		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
MPI Rank 1: 07/14/2016 05:43:19: 		Build Branch: HEAD
MPI Rank 1: 07/14/2016 05:43:19: 		Build SHA1: 72bee394bf461e8f6f0feb593a8416c05f481957
MPI Rank 1: 07/14/2016 05:43:19: 		Built by svcphil on DPHAIM-22
MPI Rank 1: 07/14/2016 05:43:19: 		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
MPI Rank 1: 07/14/2016 05:43:19: -------------------------------------------------------------------
MPI Rank 1: 07/14/2016 05:43:19: -------------------------------------------------------------------
MPI Rank 1: 07/14/2016 05:43:19: GPU info:
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:43:19: 		Device[0]: cores = 2496; computeCapability = 5.2; type = "Quadro M4000"; memory = 8090 MB
MPI Rank 1: 07/14/2016 05:43:19: -------------------------------------------------------------------
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:43:19: Running on cntk-muc00 at 2016/07/14 05:43:19
MPI Rank 1: 07/14/2016 05:43:19: Command line: 
MPI Rank 1: C:\jenkins\workspace\CNTK-Test-Windows-W1\x64\release\cntk.exe  configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN/ParallelBM/cntk.cntk  currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data  RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_gpu  DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data  ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN  OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_gpu  DeviceId=0  timestamping=true  numCPUThreads=2  precision=double  speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]  stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_gpu/stderr
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:43:19: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: 07/14/2016 05:43:19: precision = "float"
MPI Rank 1: command = speechTrain
MPI Rank 1: deviceId = $DeviceId$
MPI Rank 1: parallelTrain = true
MPI Rank 1: speechTrain = [
MPI Rank 1:     action = "train"
MPI Rank 1:     modelPath = "$RunDir$/models/cntkSpeech.dnn"
MPI Rank 1:     deviceId = $DeviceId$
MPI Rank 1:     traceLevel = 1
MPI Rank 1:     SimpleNetworkBuilder = [
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 1:         evalCriterion = "ErrorPrediction"
MPI Rank 1:         layerTypes = "Sigmoid"
MPI Rank 1:         initValueScale = 1.0
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         uniformInit = true
MPI Rank 1:         needPrior = true
MPI Rank 1:     ]
MPI Rank 1:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = 'CE'
MPI Rank 1:         evalCriterion = 'Err'
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 1:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 1:         featNorm = if applyMeanVarNorm
MPI Rank 1:                    then MeanVarNorm(features)
MPI Rank 1:                    else features
MPI Rank 1:         layers[layer:1..L-1] = if layer > 1
MPI Rank 1:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 1:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 1:         CE = if trainingCriterion == 'CE'
MPI Rank 1:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 1:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 1:         Err = if evalCriterion == 'Err' then
MPI Rank 1:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 1:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 1:         logPrior = LogPrior(labels)
MPI Rank 1:         // TODO: how to add a tag to an infix operation?
MPI Rank 1:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 1:     ]
MPI Rank 1:     SGD = [
MPI Rank 1:         epochSize = 20480
MPI Rank 1:         minibatchSize = 64:256:1024
MPI Rank 1:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 1:         numMBsToShowResult = 3
MPI Rank 1:         momentumPerMB = 0.9:0.656119
MPI Rank 1:         dropoutRate = 0.0
MPI Rank 1:         maxEpochs = 5
MPI Rank 1:         keepCheckPointFiles = true
MPI Rank 1:         clippingThresholdPerSample = 1#INF
MPI Rank 1:         ParallelTrain = [
MPI Rank 1:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 1:             distributedMBReading = true
MPI Rank 1:             syncPerfStats=1
MPI Rank 1:             BlockMomentumSGD = [
MPI Rank 1:                 blockSizePerWorker=2048
MPI Rank 1:                 resetSGDMomentum=true
MPI Rank 1:                 useNesterovMomentum=true
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:         AutoAdjust = [
MPI Rank 1:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 1:             loadBestModel = true
MPI Rank 1:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 1:             learnRateDecreaseFactor = 0.5
MPI Rank 1:             learnRateIncreaseFactor = 1.382
MPI Rank 1:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader = [
MPI Rank 1:         readerType = "HTKMLFReader"
MPI Rank 1:         readMethod = "blockRandomize"
MPI Rank 1:         miniBatchMode = "partial"
MPI Rank 1:         randomize = "auto"
MPI Rank 1:         verbosity = 0
MPI Rank 1:         features = [
MPI Rank 1:             dim = 363
MPI Rank 1:             type = "real"
MPI Rank 1:             scpFile = "glob_0000.scp"
MPI Rank 1:         ]
MPI Rank 1:         labels = [
MPI Rank 1:             mlfFile = "$DataDir$/glob_0000.mlf"
MPI Rank 1:             labelMappingFile = "$DataDir$/state.list"
MPI Rank 1:             labelDim = 132
MPI Rank 1:             labelType = "category"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1: ]
MPI Rank 1: currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 1: RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_gpu
MPI Rank 1: DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 1: ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN
MPI Rank 1: OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_gpu
MPI Rank 1: DeviceId=0
MPI Rank 1: timestamping=true
MPI Rank 1: numCPUThreads=2
MPI Rank 1: precision=double
MPI Rank 1: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 1: stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_gpu/stderr
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:43:19: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:43:19: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: 07/14/2016 05:43:19: precision = "float"
MPI Rank 1: command = speechTrain
MPI Rank 1: deviceId = 0
MPI Rank 1: parallelTrain = true
MPI Rank 1: speechTrain = [
MPI Rank 1:     action = "train"
MPI Rank 1:     modelPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn"
MPI Rank 1:     deviceId = 0
MPI Rank 1:     traceLevel = 1
MPI Rank 1:     SimpleNetworkBuilder = [
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 1:         evalCriterion = "ErrorPrediction"
MPI Rank 1:         layerTypes = "Sigmoid"
MPI Rank 1:         initValueScale = 1.0
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         uniformInit = true
MPI Rank 1:         needPrior = true
MPI Rank 1:     ]
MPI Rank 1:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = 'CE'
MPI Rank 1:         evalCriterion = 'Err'
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 1:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 1:         featNorm = if applyMeanVarNorm
MPI Rank 1:                    then MeanVarNorm(features)
MPI Rank 1:                    else features
MPI Rank 1:         layers[layer:1..L-1] = if layer > 1
MPI Rank 1:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 1:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 1:         CE = if trainingCriterion == 'CE'
MPI Rank 1:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 1:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 1:         Err = if evalCriterion == 'Err' then
MPI Rank 1:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 1:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 1:         logPrior = LogPrior(labels)
MPI Rank 1:         // TODO: how to add a tag to an infix operation?
MPI Rank 1:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 1:     ]
MPI Rank 1:     SGD = [
MPI Rank 1:         epochSize = 20480
MPI Rank 1:         minibatchSize = 64:256:1024
MPI Rank 1:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 1:         numMBsToShowResult = 3
MPI Rank 1:         momentumPerMB = 0.9:0.656119
MPI Rank 1:         dropoutRate = 0.0
MPI Rank 1:         maxEpochs = 5
MPI Rank 1:         keepCheckPointFiles = true
MPI Rank 1:         clippingThresholdPerSample = 1#INF
MPI Rank 1:         ParallelTrain = [
MPI Rank 1:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 1:             distributedMBReading = true
MPI Rank 1:             syncPerfStats=1
MPI Rank 1:             BlockMomentumSGD = [
MPI Rank 1:                 blockSizePerWorker=2048
MPI Rank 1:                 resetSGDMomentum=true
MPI Rank 1:                 useNesterovMomentum=true
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:         AutoAdjust = [
MPI Rank 1:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 1:             loadBestModel = true
MPI Rank 1:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 1:             learnRateDecreaseFactor = 0.5
MPI Rank 1:             learnRateIncreaseFactor = 1.382
MPI Rank 1:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader = [
MPI Rank 1:         readerType = "HTKMLFReader"
MPI Rank 1:         readMethod = "blockRandomize"
MPI Rank 1:         miniBatchMode = "partial"
MPI Rank 1:         randomize = "auto"
MPI Rank 1:         verbosity = 0
MPI Rank 1:         features = [
MPI Rank 1:             dim = 363
MPI Rank 1:             type = "real"
MPI Rank 1:             scpFile = "glob_0000.scp"
MPI Rank 1:         ]
MPI Rank 1:         labels = [
MPI Rank 1:             mlfFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf"
MPI Rank 1:             labelMappingFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list"
MPI Rank 1:             labelDim = 132
MPI Rank 1:             labelType = "category"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1: ]
MPI Rank 1: currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 1: RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_gpu
MPI Rank 1: DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 1: ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN
MPI Rank 1: OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_gpu
MPI Rank 1: DeviceId=0
MPI Rank 1: timestamping=true
MPI Rank 1: numCPUThreads=2
MPI Rank 1: precision=double
MPI Rank 1: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 1: stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_gpu/stderr
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:43:19: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:43:19: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: configparameters: cntk.cntk:command=speechTrain
MPI Rank 1: configparameters: cntk.cntk:ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN
MPI Rank 1: configparameters: cntk.cntk:currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 1: configparameters: cntk.cntk:DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 1: configparameters: cntk.cntk:deviceId=0
MPI Rank 1: configparameters: cntk.cntk:numCPUThreads=2
MPI Rank 1: configparameters: cntk.cntk:OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_gpu
MPI Rank 1: configparameters: cntk.cntk:parallelTrain=true
MPI Rank 1: configparameters: cntk.cntk:precision=double
MPI Rank 1: configparameters: cntk.cntk:RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_gpu
MPI Rank 1: configparameters: cntk.cntk:speechTrain=[
MPI Rank 1:     action = "train"
MPI Rank 1:     modelPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn"
MPI Rank 1:     deviceId = 0
MPI Rank 1:     traceLevel = 1
MPI Rank 1:     SimpleNetworkBuilder = [
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 1:         evalCriterion = "ErrorPrediction"
MPI Rank 1:         layerTypes = "Sigmoid"
MPI Rank 1:         initValueScale = 1.0
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         uniformInit = true
MPI Rank 1:         needPrior = true
MPI Rank 1:     ]
MPI Rank 1:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = 'CE'
MPI Rank 1:         evalCriterion = 'Err'
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 1:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 1:         featNorm = if applyMeanVarNorm
MPI Rank 1:                    then MeanVarNorm(features)
MPI Rank 1:                    else features
MPI Rank 1:         layers[layer:1..L-1] = if layer > 1
MPI Rank 1:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 1:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 1:         CE = if trainingCriterion == 'CE'
MPI Rank 1:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 1:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 1:         Err = if evalCriterion == 'Err' then
MPI Rank 1:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 1:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 1:         logPrior = LogPrior(labels)
MPI Rank 1:         // TODO: how to add a tag to an infix operation?
MPI Rank 1:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 1:     ]
MPI Rank 1:     SGD = [
MPI Rank 1:         epochSize = 20480
MPI Rank 1:         minibatchSize = 64:256:1024
MPI Rank 1:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 1:         numMBsToShowResult = 3
MPI Rank 1:         momentumPerMB = 0.9:0.656119
MPI Rank 1:         dropoutRate = 0.0
MPI Rank 1:         maxEpochs = 5
MPI Rank 1:         keepCheckPointFiles = true
MPI Rank 1:         clippingThresholdPerSample = 1#INF
MPI Rank 1:         ParallelTrain = [
MPI Rank 1:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 1:             distributedMBReading = true
MPI Rank 1:             syncPerfStats=1
MPI Rank 1:             BlockMomentumSGD = [
MPI Rank 1:                 blockSizePerWorker=2048
MPI Rank 1:                 resetSGDMomentum=true
MPI Rank 1:                 useNesterovMomentum=true
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:         AutoAdjust = [
MPI Rank 1:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 1:             loadBestModel = true
MPI Rank 1:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 1:             learnRateDecreaseFactor = 0.5
MPI Rank 1:             learnRateIncreaseFactor = 1.382
MPI Rank 1:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader = [
MPI Rank 1:         readerType = "HTKMLFReader"
MPI Rank 1:         readMethod = "blockRandomize"
MPI Rank 1:         miniBatchMode = "partial"
MPI Rank 1:         randomize = "auto"
MPI Rank 1:         verbosity = 0
MPI Rank 1:         features = [
MPI Rank 1:             dim = 363
MPI Rank 1:             type = "real"
MPI Rank 1:             scpFile = "glob_0000.scp"
MPI Rank 1:         ]
MPI Rank 1:         labels = [
MPI Rank 1:             mlfFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf"
MPI Rank 1:             labelMappingFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list"
MPI Rank 1:             labelDim = 132
MPI Rank 1:             labelType = "category"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1: ] [SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 1: 
MPI Rank 1: configparameters: cntk.cntk:stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_gpu/stderr
MPI Rank 1: configparameters: cntk.cntk:timestamping=true
MPI Rank 1: 07/14/2016 05:43:19: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 07/14/2016 05:43:19: Commands: speechTrain
MPI Rank 1: 07/14/2016 05:43:19: Precision = "double"
MPI Rank 1: 07/14/2016 05:43:19: Using 2 CPU threads.
MPI Rank 1: 07/14/2016 05:43:19: CNTKModelPath: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.900505\Speech\DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn
MPI Rank 1: 07/14/2016 05:43:19: CNTKCommandTrainInfo: speechTrain : 5
MPI Rank 1: 07/14/2016 05:43:19: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 5
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:43:19: ##############################################################################
MPI Rank 1: 07/14/2016 05:43:19: #                                                                            #
MPI Rank 1: 07/14/2016 05:43:19: # Action "train"                                                             #
MPI Rank 1: 07/14/2016 05:43:19: #                                                                            #
MPI Rank 1: 07/14/2016 05:43:19: ##############################################################################
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:43:19: CNTKCommandTrainBegin: speechTrain
MPI Rank 1: SimpleNetworkBuilder Using GPU 0
MPI Rank 1: reading script file glob_0000.scp ... 948 entries
MPI Rank 1: total 132 state names in state list C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list
MPI Rank 1: htkmlfreader: reading MLF file C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf ... total 948 entries
MPI Rank 1: ...............................................................................................feature set 0: 252734 frames in 948 out of 948 utterances
MPI Rank 1: label set 0: 129 classes
MPI Rank 1: minibatchutterancesource: 948 utterances grouped into 3 chunks, av. chunk size: 316.0 utterances, 84244.7 frames
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:43:20: Creating virgin network.
MPI Rank 1: Microsoft::MSR::CNTK::GPUMatrix<ElemType>::SetUniformRandomValue (GPU): creating curand object with seed 1, sizeof(ElemType)==8
MPI Rank 1: 
MPI Rank 1: Post-processing network...
MPI Rank 1: 
MPI Rank 1: 7 roots:
MPI Rank 1: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
MPI Rank 1: 	EvalErrorPrediction = ErrorPrediction()
MPI Rank 1: 	InvStdOfFeatures = InvStdDev()
MPI Rank 1: 	MeanOfFeatures = Mean()
MPI Rank 1: 	PosteriorProb = Softmax()
MPI Rank 1: 	Prior = Mean()
MPI Rank 1: 	ScaledLogLikelihood = Minus()
MPI Rank 1: 
MPI Rank 1: Validating network. 25 nodes to process in pass 1.
MPI Rank 1: 
MPI Rank 1: Validating --> labels = InputValue() :  -> [132 x *]
MPI Rank 1: Validating --> W2 = LearnableParameter() :  -> [132 x 512]
MPI Rank 1: Validating --> W1 = LearnableParameter() :  -> [512 x 512]
MPI Rank 1: Validating --> W0 = LearnableParameter() :  -> [512 x 363]
MPI Rank 1: Validating --> features = InputValue() :  -> [363 x *]
MPI Rank 1: Validating --> MeanOfFeatures = Mean (features) : [363 x *] -> [363]
MPI Rank 1: Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *] -> [363]
MPI Rank 1: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *], [363], [363] -> [363 x *]
MPI Rank 1: Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [512 x 363], [363 x *] -> [512 x *]
MPI Rank 1: Validating --> B0 = LearnableParameter() :  -> [512 x 1]
MPI Rank 1: Validating --> W0*features+B0 = Plus (W0*features, B0) : [512 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 1: Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 1: Validating --> W1*H1 = Times (W1, H1) : [512 x 512], [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 1: Validating --> B1 = LearnableParameter() :  -> [512 x 1]
MPI Rank 1: Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [512 x 1 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 1: Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 1: Validating --> W2*H1 = Times (W2, H2) : [132 x 512], [512 x 1 x *] -> [132 x 1 x *]
MPI Rank 1: Validating --> B2 = LearnableParameter() :  -> [132 x 1]
MPI Rank 1: Validating --> HLast = Plus (W2*H1, B2) : [132 x 1 x *], [132 x 1] -> [132 x 1 x *]
MPI Rank 1: Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 1: Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 1: Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *] -> [132 x 1 x *]
MPI Rank 1: Validating --> Prior = Mean (labels) : [132 x *] -> [132]
MPI Rank 1: Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
MPI Rank 1: Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *], [132] -> [132 x 1 x *]
MPI Rank 1: 
MPI Rank 1: Validating network. 17 nodes to process in pass 2.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: Validating network, final pass.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 12 out of 25 nodes do not share the minibatch layout with the input data.
MPI Rank 1: 
MPI Rank 1: Post-processing network complete.
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:43:20: Created model with 25 nodes on GPU 0.
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:43:20: Training criterion node(s):
MPI Rank 1: 07/14/2016 05:43:20: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:43:20: Evaluation criterion node(s):
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:43:20: 	EvalErrorPrediction = ErrorPrediction
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: Allocating matrices for forward and/or backward propagation.
MPI Rank 1: 
MPI Rank 1: Memory Sharing Structure:
MPI Rank 1: 
MPI Rank 1: 0000000000000000: {[EvalErrorPrediction Gradient[1]] [InvStdOfFeatures Gradient[363]] [LogOfPrior Gradient[132]] [MVNormalizedFeatures Gradient[363 x *]] [MeanOfFeatures Gradient[363]] [PosteriorProb Gradient[132 x 1 x *]] [PosteriorProb Value[132 x 1 x *]] [Prior Gradient[132]] [ScaledLogLikelihood Gradient[132 x 1 x *]] [features Gradient[363 x *]] [labels Gradient[132 x *]] }
MPI Rank 1: 000000071AE04910: {[W1 Gradient[512 x 512]] [W1*H1+B1 Value[512 x 1 x *]] }
MPI Rank 1: 000000071AE049B0: {[H2 Value[512 x 1 x *]] [W1*H1 Gradient[512 x 1 x *]] }
MPI Rank 1: 000000071AE04CD0: {[W2 Value[132 x 512]] }
MPI Rank 1: 000000071AE04D70: {[B0 Value[512 x 1]] }
MPI Rank 1: 000000071AE05090: {[labels Value[132 x *]] }
MPI Rank 1: 000000071AE05130: {[ScaledLogLikelihood Value[132 x 1 x *]] }
MPI Rank 1: 000000071AE05310: {[MVNormalizedFeatures Value[363 x *]] }
MPI Rank 1: 000000071AE053B0: {[H1 Value[512 x 1 x *]] [W0*features Gradient[512 x *]] }
MPI Rank 1: 000000071AE05450: {[B0 Gradient[512 x 1]] [H1 Gradient[512 x 1 x *]] [W1*H1+B1 Gradient[512 x 1 x *]] [W2*H1 Value[132 x 1 x *]] }
MPI Rank 1: 000000071AE054F0: {[HLast Value[132 x 1 x *]] [W2 Gradient[132 x 512]] }
MPI Rank 1: 000000071AE05630: {[EvalErrorPrediction Value[1]] }
MPI Rank 1: 000000071AE059F0: {[B2 Value[132 x 1]] }
MPI Rank 1: 000000071AE05A90: {[W1 Value[512 x 512]] }
MPI Rank 1: 000000071AE060D0: {[Prior Value[132]] }
MPI Rank 1: 000000071AE06210: {[CrossEntropyWithSoftmax Value[1]] }
MPI Rank 1: 000000071AE062B0: {[LogOfPrior Value[132]] }
MPI Rank 1: 000000071AE063F0: {[W0*features Value[512 x *]] }
MPI Rank 1: 000000071AE06490: {[W0 Gradient[512 x 363]] [W0*features+B0 Value[512 x 1 x *]] }
MPI Rank 1: 000000071AE065D0: {[W0*features+B0 Gradient[512 x 1 x *]] [W1*H1 Value[512 x 1 x *]] }
MPI Rank 1: 000000071AE06670: {[B1 Value[512 x 1]] }
MPI Rank 1: 000000071B2F5CA0: {[B1 Gradient[512 x 1]] [H2 Gradient[512 x 1 x *]] [HLast Gradient[132 x 1 x *]] }
MPI Rank 1: 000000071B2F6380: {[W2*H1 Gradient[132 x 1 x *]] }
MPI Rank 1: 000000071B2F6600: {[B2 Gradient[132 x 1]] }
MPI Rank 1: 000000071B2F70A0: {[CrossEntropyWithSoftmax Gradient[1]] }
MPI Rank 1: 000000077E5C11B0: {[MeanOfFeatures Value[363]] }
MPI Rank 1: 000000077E5C1250: {[InvStdOfFeatures Value[363]] }
MPI Rank 1: 000000077E5C2150: {[W0 Value[512 x 363]] }
MPI Rank 1: 000000077E62AE70: {[features Value[363 x *]] }
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:43:20: Precomputing --> 3 PreCompute nodes found.
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:43:20: 	MeanOfFeatures = Mean()
MPI Rank 1: 07/14/2016 05:43:20: 	InvStdOfFeatures = InvStdDev()
MPI Rank 1: 07/14/2016 05:43:20: 	Prior = Mean()
MPI Rank 1: minibatchiterator: epoch 0: frames [0..252734] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 1: requiredata: determined feature kind as 33-dimensional 'USER' with frame shift 10.0 ms
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:43:22: Precomputing --> Completed.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:43:22: Starting Epoch 1: learning rate per sample = 0.015625  effective momentum = 0.900000  momentum as time constant = 607.4 samples
MPI Rank 1: minibatchiterator: epoch 0: frames [0..20480] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:43:22: Starting minibatch loop.
MPI Rank 1: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[   1-   3, 0.94%]: CrossEntropyWithSoftmax = 4.59555827 * 192; EvalErrorPrediction = 0.95312500 * 192; time = 0.0279s; samplesPerSecond = 6877.8
MPI Rank 1: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[   4-   6, 1.88%]: CrossEntropyWithSoftmax = 4.63574590 * 192; EvalErrorPrediction = 0.92187500 * 192; time = 0.0267s; samplesPerSecond = 7192.9
MPI Rank 1: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[   7-   9, 2.81%]: CrossEntropyWithSoftmax = 4.40475736 * 192; EvalErrorPrediction = 0.90625000 * 192; time = 0.0257s; samplesPerSecond = 7461.5
MPI Rank 1: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  10-  12, 3.75%]: CrossEntropyWithSoftmax = 4.37017519 * 192; EvalErrorPrediction = 0.92187500 * 192; time = 0.0240s; samplesPerSecond = 8007.0
MPI Rank 1: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  13-  15, 4.69%]: CrossEntropyWithSoftmax = 4.34202026 * 192; EvalErrorPrediction = 0.90625000 * 192; time = 0.0254s; samplesPerSecond = 7546.9
MPI Rank 1: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  16-  18, 5.63%]: CrossEntropyWithSoftmax = 4.05288419 * 192; EvalErrorPrediction = 0.87500000 * 192; time = 0.0254s; samplesPerSecond = 7570.1
MPI Rank 1: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  19-  21, 6.56%]: CrossEntropyWithSoftmax = 3.98665980 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.0253s; samplesPerSecond = 7602.2
MPI Rank 1: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  22-  24, 7.50%]: CrossEntropyWithSoftmax = 4.04770240 * 192; EvalErrorPrediction = 0.86979167 * 192; time = 0.0255s; samplesPerSecond = 7542.1
MPI Rank 1: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  25-  27, 8.44%]: CrossEntropyWithSoftmax = 3.90302828 * 192; EvalErrorPrediction = 0.82812500 * 192; time = 0.0253s; samplesPerSecond = 7602.8
MPI Rank 1: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  28-  30, 9.38%]: CrossEntropyWithSoftmax = 3.86543260 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.0254s; samplesPerSecond = 7569.8
MPI Rank 1: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  31-  33, 10.31%]: CrossEntropyWithSoftmax = 3.91647287 * 192; EvalErrorPrediction = 0.90625000 * 192; time = 0.0254s; samplesPerSecond = 7567.1
MPI Rank 1: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  34-  36, 11.25%]: CrossEntropyWithSoftmax = 4.12386071 * 192; EvalErrorPrediction = 0.92187500 * 192; time = 0.0253s; samplesPerSecond = 7579.6
MPI Rank 1: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  37-  39, 12.19%]: CrossEntropyWithSoftmax = 3.69087731 * 192; EvalErrorPrediction = 0.83333333 * 192; time = 0.0254s; samplesPerSecond = 7566.5
MPI Rank 1: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  40-  42, 13.13%]: CrossEntropyWithSoftmax = 3.88162836 * 192; EvalErrorPrediction = 0.90104167 * 192; time = 0.0253s; samplesPerSecond = 7600.6
MPI Rank 1: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  43-  45, 14.06%]: CrossEntropyWithSoftmax = 3.87472683 * 192; EvalErrorPrediction = 0.88541667 * 192; time = 0.0255s; samplesPerSecond = 7533.5
MPI Rank 1: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  46-  48, 15.00%]: CrossEntropyWithSoftmax = 3.86120572 * 192; EvalErrorPrediction = 0.91145833 * 192; time = 0.0253s; samplesPerSecond = 7575.8
MPI Rank 1: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  49-  51, 15.94%]: CrossEntropyWithSoftmax = 3.78233163 * 192; EvalErrorPrediction = 0.95833333 * 192; time = 0.0255s; samplesPerSecond = 7516.7
MPI Rank 1: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  52-  54, 16.88%]: CrossEntropyWithSoftmax = 3.62749940 * 192; EvalErrorPrediction = 0.85937500 * 192; time = 0.0250s; samplesPerSecond = 7673.9
MPI Rank 1: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  55-  57, 17.81%]: CrossEntropyWithSoftmax = 3.66544034 * 192; EvalErrorPrediction = 0.85937500 * 192; time = 0.0255s; samplesPerSecond = 7540.4
MPI Rank 1: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  58-  60, 18.75%]: CrossEntropyWithSoftmax = 3.79012623 * 192; EvalErrorPrediction = 0.90625000 * 192; time = 0.0253s; samplesPerSecond = 7594.3
MPI Rank 1: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  61-  63, 19.69%]: CrossEntropyWithSoftmax = 3.43838716 * 192; EvalErrorPrediction = 0.83333333 * 192; time = 0.0255s; samplesPerSecond = 7542.1
MPI Rank 1: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  64-  66, 20.63%]: CrossEntropyWithSoftmax = 3.48802836 * 192; EvalErrorPrediction = 0.80208333 * 192; time = 0.0254s; samplesPerSecond = 7563.8
MPI Rank 1: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  67-  69, 21.56%]: CrossEntropyWithSoftmax = 3.52297384 * 192; EvalErrorPrediction = 0.82291667 * 192; time = 0.0253s; samplesPerSecond = 7603.4
MPI Rank 1: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  70-  72, 22.50%]: CrossEntropyWithSoftmax = 3.56777881 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.0255s; samplesPerSecond = 7542.7
MPI Rank 1: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  73-  75, 23.44%]: CrossEntropyWithSoftmax = 3.60709825 * 192; EvalErrorPrediction = 0.86979167 * 192; time = 0.0251s; samplesPerSecond = 7662.8
MPI Rank 1: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  76-  78, 24.38%]: CrossEntropyWithSoftmax = 3.43851505 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.0253s; samplesPerSecond = 7595.5
MPI Rank 1: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  79-  81, 25.31%]: CrossEntropyWithSoftmax = 3.43456895 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.0253s; samplesPerSecond = 7594.3
MPI Rank 1: 07/14/2016 05:43:22:  Epoch[ 1 of 5]-Minibatch[  82-  84, 26.25%]: CrossEntropyWithSoftmax = 3.34869877 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.0253s; samplesPerSecond = 7580.8
MPI Rank 1: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[  85-  87, 27.19%]: CrossEntropyWithSoftmax = 3.36772827 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.0253s; samplesPerSecond = 7578.1
MPI Rank 1: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[  88-  90, 28.13%]: CrossEntropyWithSoftmax = 3.20391887 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.0252s; samplesPerSecond = 7629.9
MPI Rank 1: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[  91-  93, 29.06%]: CrossEntropyWithSoftmax = 3.47766749 * 192; EvalErrorPrediction = 0.78645833 * 192; time = 0.0253s; samplesPerSecond = 7592.8
MPI Rank 1: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[  94-  96, 30.00%]: CrossEntropyWithSoftmax = 3.44215927 * 192; EvalErrorPrediction = 0.78645833 * 192; time = 0.0252s; samplesPerSecond = 7612.1
MPI Rank 1: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[  97-  99, 30.94%]: CrossEntropyWithSoftmax = 3.55408161 * 192; EvalErrorPrediction = 0.82291667 * 192; time = 0.0256s; samplesPerSecond = 7509.1
MPI Rank 1: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 100- 102, 31.87%]: CrossEntropyWithSoftmax = 3.50092522 * 192; EvalErrorPrediction = 0.83333333 * 192; time = 0.0254s; samplesPerSecond = 7552.2
MPI Rank 1: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 103- 105, 32.81%]: CrossEntropyWithSoftmax = 3.41013285 * 192; EvalErrorPrediction = 0.84895833 * 192; time = 0.0250s; samplesPerSecond = 7666.8
MPI Rank 1: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 106- 108, 33.75%]: CrossEntropyWithSoftmax = 2.90759530 * 192; EvalErrorPrediction = 0.73437500 * 192; time = 0.0254s; samplesPerSecond = 7561.4
MPI Rank 1: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 109- 111, 34.69%]: CrossEntropyWithSoftmax = 3.22389482 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.0252s; samplesPerSecond = 7604.3
MPI Rank 1: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 112- 114, 35.63%]: CrossEntropyWithSoftmax = 3.30804350 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.0253s; samplesPerSecond = 7592.5
MPI Rank 1: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 115- 117, 36.56%]: CrossEntropyWithSoftmax = 3.25288116 * 192; EvalErrorPrediction = 0.81250000 * 192; time = 0.0252s; samplesPerSecond = 7607.6
MPI Rank 1: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 118- 120, 37.50%]: CrossEntropyWithSoftmax = 3.35903793 * 192; EvalErrorPrediction = 0.79166667 * 192; time = 0.0254s; samplesPerSecond = 7570.1
MPI Rank 1: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 121- 123, 38.44%]: CrossEntropyWithSoftmax = 3.30650873 * 192; EvalErrorPrediction = 0.81250000 * 192; time = 0.0255s; samplesPerSecond = 7538.9
MPI Rank 1: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 124- 126, 39.38%]: CrossEntropyWithSoftmax = 3.06345980 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.0250s; samplesPerSecond = 7681.5
MPI Rank 1: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 127- 129, 40.31%]: CrossEntropyWithSoftmax = 3.15381499 * 192; EvalErrorPrediction = 0.74479167 * 192; time = 0.0253s; samplesPerSecond = 7594.6
MPI Rank 1: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 130- 132, 41.25%]: CrossEntropyWithSoftmax = 2.99509528 * 192; EvalErrorPrediction = 0.73437500 * 192; time = 0.0254s; samplesPerSecond = 7569.8
MPI Rank 1: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 133- 135, 42.19%]: CrossEntropyWithSoftmax = 3.18449473 * 192; EvalErrorPrediction = 0.81770833 * 192; time = 0.0253s; samplesPerSecond = 7597.3
MPI Rank 1: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 136- 138, 43.13%]: CrossEntropyWithSoftmax = 3.08900703 * 192; EvalErrorPrediction = 0.82291667 * 192; time = 0.0254s; samplesPerSecond = 7573.7
MPI Rank 1: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 139- 141, 44.06%]: CrossEntropyWithSoftmax = 2.96007948 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0254s; samplesPerSecond = 7569.2
MPI Rank 1: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 142- 144, 45.00%]: CrossEntropyWithSoftmax = 3.17646703 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.0252s; samplesPerSecond = 7604.9
MPI Rank 1: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 145- 147, 45.94%]: CrossEntropyWithSoftmax = 3.04459700 * 192; EvalErrorPrediction = 0.72395833 * 192; time = 0.0252s; samplesPerSecond = 7618.7
MPI Rank 1: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 148- 150, 46.88%]: CrossEntropyWithSoftmax = 3.00481869 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0255s; samplesPerSecond = 7532.1
MPI Rank 1: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 151- 153, 47.81%]: CrossEntropyWithSoftmax = 2.88356763 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0251s; samplesPerSecond = 7643.3
MPI Rank 1: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 154- 156, 48.75%]: CrossEntropyWithSoftmax = 3.05230853 * 192; EvalErrorPrediction = 0.73958333 * 192; time = 0.0255s; samplesPerSecond = 7522.3
MPI Rank 1: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 157- 159, 49.69%]: CrossEntropyWithSoftmax = 2.81339450 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.0251s; samplesPerSecond = 7662.8
MPI Rank 1: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 160- 162, 50.63%]: CrossEntropyWithSoftmax = 2.96349055 * 192; EvalErrorPrediction = 0.73437500 * 192; time = 0.0256s; samplesPerSecond = 7510.3
MPI Rank 1: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 163- 165, 51.56%]: CrossEntropyWithSoftmax = 2.79795016 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.0249s; samplesPerSecond = 7705.0
MPI Rank 1: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 166- 168, 52.50%]: CrossEntropyWithSoftmax = 2.97208651 * 192; EvalErrorPrediction = 0.76562500 * 192; time = 0.0253s; samplesPerSecond = 7586.2
MPI Rank 1: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 169- 171, 53.44%]: CrossEntropyWithSoftmax = 2.82155741 * 192; EvalErrorPrediction = 0.70833333 * 192; time = 0.0253s; samplesPerSecond = 7589.2
MPI Rank 1: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 172- 174, 54.37%]: CrossEntropyWithSoftmax = 2.63811824 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0254s; samplesPerSecond = 7565.0
MPI Rank 1: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 175- 177, 55.31%]: CrossEntropyWithSoftmax = 2.77075492 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 0.0256s; samplesPerSecond = 7512.0
MPI Rank 1: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 178- 180, 56.25%]: CrossEntropyWithSoftmax = 2.74441211 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.0251s; samplesPerSecond = 7645.7
MPI Rank 1: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 181- 183, 57.19%]: CrossEntropyWithSoftmax = 2.63317367 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0253s; samplesPerSecond = 7576.1
MPI Rank 1: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 184- 186, 58.13%]: CrossEntropyWithSoftmax = 2.84529497 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.0254s; samplesPerSecond = 7565.9
MPI Rank 1: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 187- 189, 59.06%]: CrossEntropyWithSoftmax = 2.61228778 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.0253s; samplesPerSecond = 7585.6
MPI Rank 1: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 190- 192, 60.00%]: CrossEntropyWithSoftmax = 2.57824925 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0252s; samplesPerSecond = 7604.6
MPI Rank 1: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 193- 195, 60.94%]: CrossEntropyWithSoftmax = 2.71402776 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 0.0253s; samplesPerSecond = 7598.5
MPI Rank 1: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 196- 198, 61.88%]: CrossEntropyWithSoftmax = 2.64823732 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.0252s; samplesPerSecond = 7606.7
MPI Rank 1: 07/14/2016 05:43:23:  Epoch[ 1 of 5]-Minibatch[ 199- 201, 62.81%]: CrossEntropyWithSoftmax = 2.69907749 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0253s; samplesPerSecond = 7595.8
MPI Rank 1: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 202- 204, 63.75%]: CrossEntropyWithSoftmax = 2.56462326 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0253s; samplesPerSecond = 7595.2
MPI Rank 1: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 205- 207, 64.69%]: CrossEntropyWithSoftmax = 2.51752425 * 192; EvalErrorPrediction = 0.57291667 * 192; time = 0.0253s; samplesPerSecond = 7576.1
MPI Rank 1: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 208- 210, 65.63%]: CrossEntropyWithSoftmax = 2.39838052 * 192; EvalErrorPrediction = 0.66666667 * 192; time = 0.0252s; samplesPerSecond = 7606.4
MPI Rank 1: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 211- 213, 66.56%]: CrossEntropyWithSoftmax = 2.67807980 * 192; EvalErrorPrediction = 0.71875000 * 192; time = 0.0254s; samplesPerSecond = 7572.5
MPI Rank 1: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 214- 216, 67.50%]: CrossEntropyWithSoftmax = 2.71483202 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.0253s; samplesPerSecond = 7593.4
MPI Rank 1: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 217- 219, 68.44%]: CrossEntropyWithSoftmax = 2.51324154 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.0254s; samplesPerSecond = 7569.5
MPI Rank 1: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 220- 222, 69.38%]: CrossEntropyWithSoftmax = 2.50649730 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.0255s; samplesPerSecond = 7521.7
MPI Rank 1: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 223- 225, 70.31%]: CrossEntropyWithSoftmax = 2.67678541 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.0250s; samplesPerSecond = 7682.8
MPI Rank 1: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 226- 228, 71.25%]: CrossEntropyWithSoftmax = 2.37840607 * 192; EvalErrorPrediction = 0.57291667 * 192; time = 0.0253s; samplesPerSecond = 7576.7
MPI Rank 1: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 229- 231, 72.19%]: CrossEntropyWithSoftmax = 2.43624298 * 192; EvalErrorPrediction = 0.67187500 * 192; time = 0.0253s; samplesPerSecond = 7582.0
MPI Rank 1: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 232- 234, 73.13%]: CrossEntropyWithSoftmax = 2.43409065 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 0.0255s; samplesPerSecond = 7530.9
MPI Rank 1: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 235- 237, 74.06%]: CrossEntropyWithSoftmax = 2.52589262 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0252s; samplesPerSecond = 7632.1
MPI Rank 1: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 238- 240, 75.00%]: CrossEntropyWithSoftmax = 2.49519410 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0252s; samplesPerSecond = 7607.6
MPI Rank 1: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 241- 243, 75.94%]: CrossEntropyWithSoftmax = 2.43278558 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0254s; samplesPerSecond = 7568.9
MPI Rank 1: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 244- 246, 76.88%]: CrossEntropyWithSoftmax = 2.40515550 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.0256s; samplesPerSecond = 7500.3
MPI Rank 1: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 247- 249, 77.81%]: CrossEntropyWithSoftmax = 2.57558579 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.0251s; samplesPerSecond = 7660.4
MPI Rank 1: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 250- 252, 78.75%]: CrossEntropyWithSoftmax = 2.23121798 * 192; EvalErrorPrediction = 0.57812500 * 192; time = 0.0253s; samplesPerSecond = 7597.6
MPI Rank 1: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 253- 255, 79.69%]: CrossEntropyWithSoftmax = 2.50920913 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.0251s; samplesPerSecond = 7636.9
MPI Rank 1: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 256- 258, 80.63%]: CrossEntropyWithSoftmax = 2.51602794 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 0.0253s; samplesPerSecond = 7594.9
MPI Rank 1: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 259- 261, 81.56%]: CrossEntropyWithSoftmax = 2.19041609 * 192; EvalErrorPrediction = 0.56250000 * 192; time = 0.0255s; samplesPerSecond = 7535.9
MPI Rank 1: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 262- 264, 82.50%]: CrossEntropyWithSoftmax = 2.14558034 * 192; EvalErrorPrediction = 0.52083333 * 192; time = 0.0251s; samplesPerSecond = 7642.1
MPI Rank 1: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 265- 267, 83.44%]: CrossEntropyWithSoftmax = 2.26397052 * 192; EvalErrorPrediction = 0.57812500 * 192; time = 0.0252s; samplesPerSecond = 7617.8
MPI Rank 1: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 268- 270, 84.38%]: CrossEntropyWithSoftmax = 2.13992092 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.0253s; samplesPerSecond = 7578.1
MPI Rank 1: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 271- 273, 85.31%]: CrossEntropyWithSoftmax = 2.46059836 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0256s; samplesPerSecond = 7506.5
MPI Rank 1: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 274- 276, 86.25%]: CrossEntropyWithSoftmax = 2.11174554 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0251s; samplesPerSecond = 7658.6
MPI Rank 1: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 277- 279, 87.19%]: CrossEntropyWithSoftmax = 2.36329481 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.0255s; samplesPerSecond = 7539.8
MPI Rank 1: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 280- 282, 88.13%]: CrossEntropyWithSoftmax = 2.33020684 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0250s; samplesPerSecond = 7671.7
MPI Rank 1: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 283- 285, 89.06%]: CrossEntropyWithSoftmax = 2.24993200 * 192; EvalErrorPrediction = 0.59375000 * 192; time = 0.0253s; samplesPerSecond = 7601.9
MPI Rank 1: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 286- 288, 90.00%]: CrossEntropyWithSoftmax = 2.21490528 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.0253s; samplesPerSecond = 7574.9
MPI Rank 1: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 289- 291, 90.94%]: CrossEntropyWithSoftmax = 2.18525455 * 192; EvalErrorPrediction = 0.56770833 * 192; time = 0.0254s; samplesPerSecond = 7556.7
MPI Rank 1: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 292- 294, 91.88%]: CrossEntropyWithSoftmax = 2.37028991 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0254s; samplesPerSecond = 7568.6
MPI Rank 1: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 295- 297, 92.81%]: CrossEntropyWithSoftmax = 2.02858610 * 192; EvalErrorPrediction = 0.57291667 * 192; time = 0.0255s; samplesPerSecond = 7526.2
MPI Rank 1: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 298- 300, 93.75%]: CrossEntropyWithSoftmax = 2.12060224 * 192; EvalErrorPrediction = 0.58854167 * 192; time = 0.0250s; samplesPerSecond = 7676.6
MPI Rank 1: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 301- 303, 94.69%]: CrossEntropyWithSoftmax = 2.24345126 * 192; EvalErrorPrediction = 0.54166667 * 192; time = 0.0252s; samplesPerSecond = 7616.6
MPI Rank 1: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 304- 306, 95.63%]: CrossEntropyWithSoftmax = 2.23414476 * 192; EvalErrorPrediction = 0.58854167 * 192; time = 0.0256s; samplesPerSecond = 7506.7
MPI Rank 1: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 307- 309, 96.56%]: CrossEntropyWithSoftmax = 2.24515288 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.0249s; samplesPerSecond = 7711.2
MPI Rank 1: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 310- 312, 97.50%]: CrossEntropyWithSoftmax = 2.14391664 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.0253s; samplesPerSecond = 7589.2
MPI Rank 1: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 313- 315, 98.44%]: CrossEntropyWithSoftmax = 2.31221990 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.0253s; samplesPerSecond = 7602.8
MPI Rank 1: 07/14/2016 05:43:24:  Epoch[ 1 of 5]-Minibatch[ 316- 318, 99.38%]: CrossEntropyWithSoftmax = 2.34285218 * 192; EvalErrorPrediction = 0.57812500 * 192; time = 0.0255s; samplesPerSecond = 7520.9
MPI Rank 1: 07/14/2016 05:43:24: Finished Epoch[ 1 of 5]: [Training] CrossEntropyWithSoftmax = 3.00091203 * 20480; EvalErrorPrediction = 0.72744141 * 20480; totalSamplesSeen = 20480; learningRatePerSample = 0.015625; epochTime=2.73982s
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:43:25: Starting Epoch 2: learning rate per sample = 0.001953  effective momentum = 0.656119  momentum as time constant = 607.5 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 1: frames [20480..40960] (first utterance at frame 20480), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:43:25: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 07/14/2016 05:43:25:  Epoch[ 2 of 5]-Minibatch[   1-   3, 3.75%]: CrossEntropyWithSoftmax = 2.27199892 * 292; EvalErrorPrediction = 0.60273973 * 292; time = 0.0331s; samplesPerSecond = 8812.2
MPI Rank 1: 07/14/2016 05:43:25:  Epoch[ 2 of 5]-Minibatch[   4-   6, 7.50%]: CrossEntropyWithSoftmax = 2.16144646 * 248; EvalErrorPrediction = 0.60080645 * 248; time = 0.0366s; samplesPerSecond = 6774.7
MPI Rank 1: 07/14/2016 05:43:25:  Epoch[ 2 of 5]-Minibatch[   7-   9, 11.25%]: CrossEntropyWithSoftmax = 2.21994551 * 276; EvalErrorPrediction = 0.61956522 * 276; time = 0.0329s; samplesPerSecond = 8399.8
MPI Rank 1: 07/14/2016 05:43:25:  Epoch[ 2 of 5]-Minibatch[  10-  12, 15.00%]: CrossEntropyWithSoftmax = 2.25986679 * 250; EvalErrorPrediction = 0.62400000 * 250; time = 0.0367s; samplesPerSecond = 6807.0
MPI Rank 1: 07/14/2016 05:43:25:  Epoch[ 2 of 5]-Minibatch[  13-  15, 18.75%]: CrossEntropyWithSoftmax = 2.01515406 * 248; EvalErrorPrediction = 0.58467742 * 248; time = 0.0385s; samplesPerSecond = 6433.5
MPI Rank 1: 07/14/2016 05:43:25:  Epoch[ 2 of 5]-Minibatch[  16-  18, 22.50%]: CrossEntropyWithSoftmax = 2.09545622 * 294; EvalErrorPrediction = 0.54081633 * 294; time = 0.0408s; samplesPerSecond = 7203.1
MPI Rank 1: 07/14/2016 05:43:25:  Epoch[ 2 of 5]-Minibatch[  19-  21, 26.25%]: CrossEntropyWithSoftmax = 1.89313519 * 258; EvalErrorPrediction = 0.50775194 * 258; time = 0.0387s; samplesPerSecond = 6661.5
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     0.30 seconds since last report (0.00 seconds on comm.); 4243 samples processed by 2 workers (2057 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 14.27k samplesPerSecond , throughputPerWorker = 7.14k samplesPerSecond
MPI Rank 1: 07/14/2016 05:43:25:  Epoch[ 2 of 5]-Minibatch[  22-  24, 30.00%]: CrossEntropyWithSoftmax = 2.13839262 * 279; EvalErrorPrediction = 0.54838710 * 279; time = 0.0448s; samplesPerSecond = 6222.1
MPI Rank 1: 07/14/2016 05:43:25:  Epoch[ 2 of 5]-Minibatch[  25-  27, 33.75%]: CrossEntropyWithSoftmax = 2.05379081 * 267; EvalErrorPrediction = 0.56928839 * 267; time = 0.0392s; samplesPerSecond = 6810.5
MPI Rank 1: 07/14/2016 05:43:25:  Epoch[ 2 of 5]-Minibatch[  28-  30, 37.50%]: CrossEntropyWithSoftmax = 1.92078665 * 278; EvalErrorPrediction = 0.56115108 * 278; time = 0.0444s; samplesPerSecond = 6259.6
MPI Rank 1: 07/14/2016 05:43:25:  Epoch[ 2 of 5]-Minibatch[  31-  33, 41.25%]: CrossEntropyWithSoftmax = 1.99356750 * 253; EvalErrorPrediction = 0.55335968 * 253; time = 0.0396s; samplesPerSecond = 6394.5
MPI Rank 1: 07/14/2016 05:43:25:  Epoch[ 2 of 5]-Minibatch[  34-  36, 45.00%]: CrossEntropyWithSoftmax = 1.91538321 * 286; EvalErrorPrediction = 0.53846154 * 286; time = 0.0415s; samplesPerSecond = 6883.6
MPI Rank 1: 07/14/2016 05:43:25:  Epoch[ 2 of 5]-Minibatch[  37-  39, 48.75%]: CrossEntropyWithSoftmax = 2.00558191 * 290; EvalErrorPrediction = 0.54827586 * 290; time = 0.0421s; samplesPerSecond = 6895.9
MPI Rank 1: 07/14/2016 05:43:25:  Epoch[ 2 of 5]-Minibatch[  40-  42, 52.50%]: CrossEntropyWithSoftmax = 1.89801663 * 297; EvalErrorPrediction = 0.52188552 * 297; time = 0.0361s; samplesPerSecond = 8219.0
MPI Rank 1: 07/14/2016 05:43:25:  Epoch[ 2 of 5]-Minibatch[  43-  45, 56.25%]: CrossEntropyWithSoftmax = 2.07827977 * 288; EvalErrorPrediction = 0.59375000 * 288; time = 0.0198s; samplesPerSecond = 14577.8
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     0.29 seconds since last report (0.00 seconds on comm.); 4292 samples processed by 2 workers (2139 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 14.63k samplesPerSecond , throughputPerWorker = 7.32k samplesPerSecond
MPI Rank 1: 07/14/2016 05:43:25:  Epoch[ 2 of 5]-Minibatch[  46-  48, 60.00%]: CrossEntropyWithSoftmax = 1.93068764 * 281; EvalErrorPrediction = 0.54448399 * 281; time = 0.0407s; samplesPerSecond = 6903.2
MPI Rank 1: 07/14/2016 05:43:25:  Epoch[ 2 of 5]-Minibatch[  49-  51, 63.75%]: CrossEntropyWithSoftmax = 1.85531301 * 292; EvalErrorPrediction = 0.51712329 * 292; time = 0.0485s; samplesPerSecond = 6016.9
MPI Rank 1: 07/14/2016 05:43:25:  Epoch[ 2 of 5]-Minibatch[  52-  54, 67.50%]: CrossEntropyWithSoftmax = 1.98801565 * 292; EvalErrorPrediction = 0.57534247 * 292; time = 0.0425s; samplesPerSecond = 6871.2
MPI Rank 1: 07/14/2016 05:43:25:  Epoch[ 2 of 5]-Minibatch[  55-  57, 71.25%]: CrossEntropyWithSoftmax = 2.05808563 * 268; EvalErrorPrediction = 0.56343284 * 268; time = 0.0403s; samplesPerSecond = 6643.5
MPI Rank 1: 07/14/2016 05:43:25:  Epoch[ 2 of 5]-Minibatch[  58-  60, 75.00%]: CrossEntropyWithSoftmax = 1.81503339 * 270; EvalErrorPrediction = 0.52222222 * 270; time = 0.0416s; samplesPerSecond = 6493.7
MPI Rank 1: 07/14/2016 05:43:25:  Epoch[ 2 of 5]-Minibatch[  61-  63, 78.75%]: CrossEntropyWithSoftmax = 2.10398514 * 287; EvalErrorPrediction = 0.58536585 * 287; time = 0.0461s; samplesPerSecond = 6228.6
MPI Rank 1: 07/14/2016 05:43:25:  Epoch[ 2 of 5]-Minibatch[  64-  66, 82.50%]: CrossEntropyWithSoftmax = 1.93305713 * 272; EvalErrorPrediction = 0.54411765 * 272; time = 0.0188s; samplesPerSecond = 14492.0
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:     0.29 seconds since last report (0.00 seconds on comm.); 4263 samples processed by 2 workers (2137 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 14.55k samplesPerSecond , throughputPerWorker = 7.27k samplesPerSecond
MPI Rank 1: 07/14/2016 05:43:25:  Epoch[ 2 of 5]-Minibatch[  67-  69, 86.25%]: CrossEntropyWithSoftmax = 2.02514086 * 267; EvalErrorPrediction = 0.52434457 * 267; time = 0.0295s; samplesPerSecond = 9048.1
MPI Rank 1: 07/14/2016 05:43:25:  Epoch[ 2 of 5]-Minibatch[  70-  72, 90.00%]: CrossEntropyWithSoftmax = 1.95146823 * 280; EvalErrorPrediction = 0.51785714 * 280; time = 0.0407s; samplesPerSecond = 6883.5
MPI Rank 1: 07/14/2016 05:43:26:  Epoch[ 2 of 5]-Minibatch[  73-  75, 93.75%]: CrossEntropyWithSoftmax = 1.75049844 * 278; EvalErrorPrediction = 0.46043165 * 278; time = 0.0400s; samplesPerSecond = 6957.5
MPI Rank 1: 07/14/2016 05:43:26:  Epoch[ 2 of 5]-Minibatch[  76-  78, 97.50%]: CrossEntropyWithSoftmax = 2.01606953 * 288; EvalErrorPrediction = 0.53472222 * 288; time = 0.0406s; samplesPerSecond = 7093.8
MPI Rank 1: 07/14/2016 05:43:26:  Epoch[ 2 of 5]-Minibatch[  79-  81, 101.25%]: CrossEntropyWithSoftmax = 1.98549324 * 174; EvalErrorPrediction = 0.61494253 * 174; time = 0.0286s; samplesPerSecond = 6082.9
MPI Rank 1: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.04-seconds latency this time; accumulated time on sync point = 0.04 seconds , average latency = 0.01 seconds
MPI Rank 1: 		(model aggregation stats) 4-th sync:     0.51 seconds since last report (0.31 seconds on comm.); 7682 samples processed by 2 workers (1020 by me);
MPI Rank 1: 		(model aggregation stats) 4-th sync: totalThroughput = 15.09k samplesPerSecond , throughputPerWorker = 7.54k samplesPerSecond
MPI Rank 1: 07/14/2016 05:43:26: Finished Epoch[ 2 of 5]: [Training] CrossEntropyWithSoftmax = 1.97315701 * 20480; EvalErrorPrediction = 0.54174805 * 20480; totalSamplesSeen = 40960; learningRatePerSample = 0.001953125; epochTime=1.39359s
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:43:26: Starting Epoch 3: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 2: frames [40960..61440] (first utterance at frame 40960), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:43:26: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 07/14/2016 05:43:26:  Epoch[ 3 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.80094771 * 1137; EvalErrorPrediction = 0.51011434 * 1137; time = 0.1763s; samplesPerSecond = 6450.4
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     0.29 seconds since last report (0.00 seconds on comm.); 4848 samples processed by 2 workers (2247 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 16.69k samplesPerSecond , throughputPerWorker = 8.35k samplesPerSecond
MPI Rank 1: 07/14/2016 05:43:26:  Epoch[ 3 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.87991410 * 1110; EvalErrorPrediction = 0.51531532 * 1110; time = 0.1107s; samplesPerSecond = 10030.2
MPI Rank 1: 07/14/2016 05:43:27:  Epoch[ 3 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.99663637 * 1105; EvalErrorPrediction = 0.55384615 * 1105; time = 0.1346s; samplesPerSecond = 8212.1
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     0.28 seconds since last report (0.00 seconds on comm.); 4857 samples processed by 2 workers (2254 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 17.21k samplesPerSecond , throughputPerWorker = 8.60k samplesPerSecond
MPI Rank 1: 07/14/2016 05:43:27:  Epoch[ 3 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.96500956 * 1149; EvalErrorPrediction = 0.52393386 * 1149; time = 0.1470s; samplesPerSecond = 7818.2
MPI Rank 1: 07/14/2016 05:43:27:  Epoch[ 3 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.89824895 * 1158; EvalErrorPrediction = 0.53713299 * 1158; time = 0.1387s; samplesPerSecond = 8351.2
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:     0.29 seconds since last report (0.00 seconds on comm.); 4905 samples processed by 2 workers (2322 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 17.13k samplesPerSecond , throughputPerWorker = 8.56k samplesPerSecond
MPI Rank 1: 07/14/2016 05:43:27:  Epoch[ 3 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.89120997 * 1164; EvalErrorPrediction = 0.52835052 * 1164; time = 0.1470s; samplesPerSecond = 7918.9
MPI Rank 1: 07/14/2016 05:43:27:  Epoch[ 3 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.88116091 * 765; EvalErrorPrediction = 0.51633987 * 765; time = 0.0960s; samplesPerSecond = 7965.2
MPI Rank 1: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.06-seconds latency this time; accumulated time on sync point = 0.06 seconds , average latency = 0.02 seconds
MPI Rank 1: 		(model aggregation stats) 4-th sync:     0.36 seconds since last report (0.19 seconds on comm.); 5870 samples processed by 2 workers (765 by me);
MPI Rank 1: 		(model aggregation stats) 4-th sync: totalThroughput = 16.45k samplesPerSecond , throughputPerWorker = 8.22k samplesPerSecond
MPI Rank 1: 07/14/2016 05:43:27: Finished Epoch[ 3 of 5]: [Training] CrossEntropyWithSoftmax = 1.89285183 * 20480; EvalErrorPrediction = 0.52680664 * 20480; totalSamplesSeen = 61440; learningRatePerSample = 9.7656251e-005; epochTime=1.21671s
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:43:27: Starting Epoch 4: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 3: frames [61440..81920] (first utterance at frame 61440), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:43:27: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 07/14/2016 05:43:28:  Epoch[ 4 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.86227504 * 1137; EvalErrorPrediction = 0.51451187 * 1137; time = 0.1183s; samplesPerSecond = 9607.7
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.01-seconds latency this time; accumulated time on sync point = 0.01 seconds , average latency = 0.01 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     0.29 seconds since last report (0.02 seconds on comm.); 4851 samples processed by 2 workers (2290 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 16.71k samplesPerSecond , throughputPerWorker = 8.35k samplesPerSecond
MPI Rank 1: 07/14/2016 05:43:28:  Epoch[ 4 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.81808742 * 1153; EvalErrorPrediction = 0.50563747 * 1153; time = 0.1687s; samplesPerSecond = 6833.3
MPI Rank 1: 07/14/2016 05:43:28:  Epoch[ 4 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.83978372 * 1172; EvalErrorPrediction = 0.53242321 * 1172; time = 0.1729s; samplesPerSecond = 6777.2
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.01 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     0.29 seconds since last report (0.00 seconds on comm.); 4948 samples processed by 2 workers (2401 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 17.09k samplesPerSecond , throughputPerWorker = 8.55k samplesPerSecond
MPI Rank 1: 07/14/2016 05:43:28:  Epoch[ 4 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.83801944 * 1229; EvalErrorPrediction = 0.52481692 * 1229; time = 0.1158s; samplesPerSecond = 10611.7
MPI Rank 1: 07/14/2016 05:43:28:  Epoch[ 4 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.79660135 * 1196; EvalErrorPrediction = 0.50167224 * 1196; time = 0.1406s; samplesPerSecond = 8505.1
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.01 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:     0.28 seconds since last report (0.00 seconds on comm.); 4911 samples processed by 2 workers (2422 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 17.44k samplesPerSecond , throughputPerWorker = 8.72k samplesPerSecond
MPI Rank 1: 07/14/2016 05:43:28:  Epoch[ 4 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.87024144 * 1226; EvalErrorPrediction = 0.50407830 * 1226; time = 0.1402s; samplesPerSecond = 8744.1
MPI Rank 1: 07/14/2016 05:43:28:  Epoch[ 4 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.78967641 * 722; EvalErrorPrediction = 0.50692521 * 722; time = 0.0879s; samplesPerSecond = 8210.9
MPI Rank 1: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.06-seconds latency this time; accumulated time on sync point = 0.07 seconds , average latency = 0.02 seconds
MPI Rank 1: 		(model aggregation stats) 4-th sync:     0.35 seconds since last report (0.19 seconds on comm.); 5770 samples processed by 2 workers (722 by me);
MPI Rank 1: 		(model aggregation stats) 4-th sync: totalThroughput = 16.57k samplesPerSecond , throughputPerWorker = 8.29k samplesPerSecond
MPI Rank 1: 07/14/2016 05:43:29: Finished Epoch[ 4 of 5]: [Training] CrossEntropyWithSoftmax = 1.83211880 * 20480; EvalErrorPrediction = 0.50991211 * 20480; totalSamplesSeen = 81920; learningRatePerSample = 9.7656251e-005; epochTime=1.21036s
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:43:29: Starting Epoch 5: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 4: frames [81920..102400] (first utterance at frame 81920), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:43:29: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 07/14/2016 05:43:29:  Epoch[ 5 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.71422313 * 1200; EvalErrorPrediction = 0.49333333 * 1200; time = 0.1686s; samplesPerSecond = 7115.8
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     0.29 seconds since last report (0.00 seconds on comm.); 4879 samples processed by 2 workers (2404 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 16.81k samplesPerSecond , throughputPerWorker = 8.40k samplesPerSecond
MPI Rank 1: 07/14/2016 05:43:29:  Epoch[ 5 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.88184801 * 1204; EvalErrorPrediction = 0.52408638 * 1204; time = 0.1178s; samplesPerSecond = 10220.7
MPI Rank 1: 07/14/2016 05:43:29:  Epoch[ 5 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.74109301 * 1233; EvalErrorPrediction = 0.48418491 * 1233; time = 0.1461s; samplesPerSecond = 8441.3
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     0.25 seconds since last report (0.00 seconds on comm.); 4542 samples processed by 2 workers (2059 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 17.85k samplesPerSecond , throughputPerWorker = 8.92k samplesPerSecond
MPI Rank 1: 07/14/2016 05:43:29:  Epoch[ 5 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.75396705 * 1232; EvalErrorPrediction = 0.50568182 * 1232; time = 0.1604s; samplesPerSecond = 7679.4
MPI Rank 1: 07/14/2016 05:43:30:  Epoch[ 5 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.76000122 * 1226; EvalErrorPrediction = 0.50081566 * 1226; time = 0.1500s; samplesPerSecond = 8175.0
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:     0.29 seconds since last report (0.00 seconds on comm.); 4905 samples processed by 2 workers (2444 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 17.17k samplesPerSecond , throughputPerWorker = 8.59k samplesPerSecond
MPI Rank 1: 07/14/2016 05:43:30:  Epoch[ 5 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.80829813 * 1214; EvalErrorPrediction = 0.51482702 * 1214; time = 0.1349s; samplesPerSecond = 9000.6
MPI Rank 1: 07/14/2016 05:43:30:  Epoch[ 5 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.86241174 * 752; EvalErrorPrediction = 0.51196809 * 752; time = 0.1008s; samplesPerSecond = 7462.4
MPI Rank 1: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.02-seconds latency this time; accumulated time on sync point = 0.02 seconds , average latency = 0.01 seconds
MPI Rank 1: 		(model aggregation stats) 4-th sync:     0.37 seconds since last report (0.19 seconds on comm.); 6154 samples processed by 2 workers (1154 by me);
MPI Rank 1: 		(model aggregation stats) 4-th sync: totalThroughput = 16.43k samplesPerSecond , throughputPerWorker = 8.21k samplesPerSecond
MPI Rank 1: 07/14/2016 05:43:30: Finished Epoch[ 5 of 5]: [Training] CrossEntropyWithSoftmax = 1.79332051 * 20480; EvalErrorPrediction = 0.49741211 * 20480; totalSamplesSeen = 102400; learningRatePerSample = 9.7656251e-005; epochTime=1.20581s
MPI Rank 1: 07/14/2016 05:43:30: CNTKCommandTrainEnd: speechTrain
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:43:30: Action "train" complete.
MPI Rank 1: 
MPI Rank 1: 07/14/2016 05:43:30: __COMPLETED__
MPI Rank 1: ~MPIWrapper