=== Running /cygdrive/c/jenkins/workspace/CNTK-Test-Windows-W1/x64/release/cntk.exe configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\Miscellaneous\SLU/rnnlu.cntk currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\Miscellaneous\SLU OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu DeviceId=0 timestamping=true NdlDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Examples\Text\Miscellaneous\SLU ExpDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu OutDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu
-------------------------------------------------------------------
Build info: 

		Built time: May  3 2016 15:19:53
		Last modified date: Sun May  1 05:07:36 2016
		Build type: Release
		Build target: GPU
		With 1bit-SGD: no
		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
		CUB_PATH: C:\src\cub-1.4.1
		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
		Build Branch: HEAD
		Build SHA1: d79e568663666f475b36f13033a93258058bef57
		Built by svcphil on DPHAIM-22
		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
-------------------------------------------------------------------
Changed current directory to C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
05/03/2016 16:04:12: -------------------------------------------------------------------
05/03/2016 16:04:12: Build info: 

05/03/2016 16:04:12: 		Built time: May  3 2016 15:19:53
05/03/2016 16:04:12: 		Last modified date: Sun May  1 05:07:36 2016
05/03/2016 16:04:12: 		Build type: Release
05/03/2016 16:04:12: 		Build target: GPU
05/03/2016 16:04:12: 		With 1bit-SGD: no
05/03/2016 16:04:12: 		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
05/03/2016 16:04:12: 		CUB_PATH: C:\src\cub-1.4.1
05/03/2016 16:04:12: 		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
05/03/2016 16:04:12: 		Build Branch: HEAD
05/03/2016 16:04:12: 		Build SHA1: d79e568663666f475b36f13033a93258058bef57
05/03/2016 16:04:12: 		Built by svcphil on DPHAIM-22
05/03/2016 16:04:12: 		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
05/03/2016 16:04:12: -------------------------------------------------------------------

05/03/2016 16:04:12: Running on cntk-muc02 at 2016/05/03 16:04:12
05/03/2016 16:04:12: Command line: 
C:\jenkins\workspace\CNTK-Test-Windows-W1\x64\release\cntk.exe  configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\Miscellaneous\SLU/rnnlu.cntk  currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU  RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu  DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU  ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\Miscellaneous\SLU  OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu  DeviceId=0  timestamping=true  NdlDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Examples\Text\Miscellaneous\SLU  ExpDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu  OutDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu



05/03/2016 16:04:12: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
05/03/2016 16:04:12: precision="float"
deviceId = $DeviceId$
command=LSTM:LSTMTest
traceLevel=1
LSTM=[
    action=train
	makeMode=true
    modelPath=$ExpDir$/cntkdebug.dnn
    SimpleNetworkBuilder=[
        rnnType=LSTM
        layerSizes=2832:50:300:300:300:127
        lookupTableOrder=3
        recurrentLayer=2:3:4
        defaultHiddenActivity=0.1
        initValueScale=6.0
        trainingCriterion=crossentropywithsoftmax
        evalCriterion=crossentropywithsoftmax
    ]
    SGD=[
maxEpochs=100   
epochSize=71524     
        minibatchSize=10000
        learningRatesPerSample=0.1
        momentumAsTimeConstant=1000
        gradientClippingWithTruncation=true
        clippingThresholdPerSample=15.0
        numMBsToShowResult=50
        loadBestModel=true
        AutoAdjust=[
            autoAdjustLR=adjustafterepoch
            reduceLearnRateIfImproveLessThan=0
            increaseLearnRateIfImproveMoreThan=1000000000
            learnRateDecreaseFactor=0.5
            learnRateIncreaseFactor=1.382
        ]
    ]
    reader=[
        readerType=LUSequenceReader
        wordContext=0:1:2
        randomize=None
nbruttsineachrecurrentiter=10  
        equalLength = false
        wfile=$ExpDir$/sequenceSentence.bin
        wsize=256
        wrecords=1000
        windowSize=10000
        unk="<unk>"
          wordmap=$DataDir$/inputmap.txt
          file=$DataDir$/atis.train.apos.pred.pos.head.IOB.simple
          features=[
            dim=0
            sectionType=data
          ]
          sequence=[
            dim=1
            wrecords=2
            sectionType=data
          ]
          labelIn=[
            dim=1
            usewordmap=true
            labelDim=10000
            labelMappingFile=$ExpDir$/sentenceLabels.txt
            labelType=Category
            beginSequence="BOS"
            endSequence="EOS"
            usewordmap=true
            token=$DataDir$/input.txt
            elementSize=4
            sectionType=labels
            mapping=[
              wrecords=11
              elementSize=10
              sectionType=labelMapping
            ]
            category=[
              dim=11
              sectionType=categoryLabels
            ]
          ]
          labels=[
            dim=1
            labelType=Category
            token=$DataDir$/output.txt
            labelMappingFile=$ExpDir$/sentenceLabels.out.txt
            sectionType=labels
            mapping=[
              sectionType=labelMapping
            ]
            category=[
              sectionType=categoryLabels
            ]
          ]
    ]
    cvReader=[
      readerType=LUSequenceReader
      randomize=None
      wordContext=0:1:2
      nbruttsineachrecurrentiter=200
      equalLength = false
      wfile=$ExpDir$/sequenceSentence.valid.bin
      wsize=256
      wrecords=1000
      windowSize=10000
      unk="<unk>"
      wordmap=$DataDir$/inputmap.txt
      file=$DataDir$/atis.dev.IOB.simple
      features=[
        dim=0
        sectionType=data
      ]
      sequence=[
        dim=1
        wrecords=2
        sectionType=data
      ]
      labelIn=[
        dim=1
        labelDim=10000
        labelMappingFile=$ExpDir$/sentenceLabels.in.txt
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        usewordmap=true
        token=$DataDir$/input.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=11
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=11
          sectionType=categoryLabels
        ]
      ]
      labels=[
        dim=1
        labelType=Category
        token=$DataDir$/output.txt
        labelDim=10000
        labelMappingFile=$ExpDir$/sentenceLabels.out.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=3
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=3
          sectionType=categoryLabels
        ]
      ]
    ]
]
LSTMTest=[
    action=write
    epochSize=4430000
    defaultHiddenActivity=0.1
    modelPath=$ExpDir$/cntkdebug.dnn
    outputNodeNames=outputs:labels
    reader=[
      readerType=LUSequenceReader
      randomize=None
      wordContext=0:1:2
      unk="<unk>"
      wordmap=$DataDir$/inputmap.txt
      file=$DataDir$/atis.test.apos.pred.pos.head.IOB.simple
      wfile=$ExpDir$/sequenceSentence.bin
      wsize=256
      wrecords=1000
      windowSize=10000
      features=[
        dim=0 
        sectionType=data
      ]
      sequence=[
        dim=1
        wrecords=2
        sectionType=data
      ]
      labelIn=[
        dim=1
        labelDim=10000
        labelMappingFile=$ExpDir$/sentenceLabels.txt
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        usewordmap=true
        token=$DataDir$/input.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=11
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=11
          sectionType=categoryLabels
        ]
      ]
      labels=[
        dim=1
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        token=$DataDir$/output.txt
        labelDim=127
        labelMappingFile=$ExpDir$/sentenceLabels.out.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=3
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=3
          sectionType=categoryLabels
        ]
      ]
    ]
    writer=[
        writerType=LUSequenceWriter
        outputs=[
            file=$OutDir$/output.rec.txt
            token=$DataDir$/output.txt
        ]
        labels=[
            file=$OutDir$/output.lbl.txt
            token=$DataDir$/output.txt
        ]
    ]
]
currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu
DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\Miscellaneous\SLU
OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu
DeviceId=0
timestamping=true
NdlDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Examples\Text\Miscellaneous\SLU
ExpDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu
OutDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu

05/03/2016 16:04:12: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<

05/03/2016 16:04:12: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
05/03/2016 16:04:12: precision="float"
deviceId = 0
command=LSTM:LSTMTest
traceLevel=1
LSTM=[
    action=train
	makeMode=true
    modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn
    SimpleNetworkBuilder=[
        rnnType=LSTM
        layerSizes=2832:50:300:300:300:127
        lookupTableOrder=3
        recurrentLayer=2:3:4
        defaultHiddenActivity=0.1
        initValueScale=6.0
        trainingCriterion=crossentropywithsoftmax
        evalCriterion=crossentropywithsoftmax
    ]
    SGD=[
maxEpochs=100   
epochSize=71524     
        minibatchSize=10000
        learningRatesPerSample=0.1
        momentumAsTimeConstant=1000
        gradientClippingWithTruncation=true
        clippingThresholdPerSample=15.0
        numMBsToShowResult=50
        loadBestModel=true
        AutoAdjust=[
            autoAdjustLR=adjustafterepoch
            reduceLearnRateIfImproveLessThan=0
            increaseLearnRateIfImproveMoreThan=1000000000
            learnRateDecreaseFactor=0.5
            learnRateIncreaseFactor=1.382
        ]
    ]
    reader=[
        readerType=LUSequenceReader
        wordContext=0:1:2
        randomize=None
nbruttsineachrecurrentiter=10  
        equalLength = false
        wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/sequenceSentence.bin
        wsize=256
        wrecords=1000
        windowSize=10000
        unk="<unk>"
          wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
          file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.train.apos.pred.pos.head.IOB.simple
          features=[
            dim=0
            sectionType=data
          ]
          sequence=[
            dim=1
            wrecords=2
            sectionType=data
          ]
          labelIn=[
            dim=1
            usewordmap=true
            labelDim=10000
            labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/sentenceLabels.txt
            labelType=Category
            beginSequence="BOS"
            endSequence="EOS"
            usewordmap=true
            token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
            elementSize=4
            sectionType=labels
            mapping=[
              wrecords=11
              elementSize=10
              sectionType=labelMapping
            ]
            category=[
              dim=11
              sectionType=categoryLabels
            ]
          ]
          labels=[
            dim=1
            labelType=Category
            token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
            labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/sentenceLabels.out.txt
            sectionType=labels
            mapping=[
              sectionType=labelMapping
            ]
            category=[
              sectionType=categoryLabels
            ]
          ]
    ]
    cvReader=[
      readerType=LUSequenceReader
      randomize=None
      wordContext=0:1:2
      nbruttsineachrecurrentiter=200
      equalLength = false
      wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/sequenceSentence.valid.bin
      wsize=256
      wrecords=1000
      windowSize=10000
      unk="<unk>"
      wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
      file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.dev.IOB.simple
      features=[
        dim=0
        sectionType=data
      ]
      sequence=[
        dim=1
        wrecords=2
        sectionType=data
      ]
      labelIn=[
        dim=1
        labelDim=10000
        labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/sentenceLabels.in.txt
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        usewordmap=true
        token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=11
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=11
          sectionType=categoryLabels
        ]
      ]
      labels=[
        dim=1
        labelType=Category
        token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
        labelDim=10000
        labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/sentenceLabels.out.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=3
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=3
          sectionType=categoryLabels
        ]
      ]
    ]
]
LSTMTest=[
    action=write
    epochSize=4430000
    defaultHiddenActivity=0.1
    modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn
    outputNodeNames=outputs:labels
    reader=[
      readerType=LUSequenceReader
      randomize=None
      wordContext=0:1:2
      unk="<unk>"
      wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
      file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.test.apos.pred.pos.head.IOB.simple
      wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/sequenceSentence.bin
      wsize=256
      wrecords=1000
      windowSize=10000
      features=[
        dim=0 
        sectionType=data
      ]
      sequence=[
        dim=1
        wrecords=2
        sectionType=data
      ]
      labelIn=[
        dim=1
        labelDim=10000
        labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/sentenceLabels.txt
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        usewordmap=true
        token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=11
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=11
          sectionType=categoryLabels
        ]
      ]
      labels=[
        dim=1
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
        labelDim=127
        labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/sentenceLabels.out.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=3
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=3
          sectionType=categoryLabels
        ]
      ]
    ]
    writer=[
        writerType=LUSequenceWriter
        outputs=[
            file=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/output.rec.txt
            token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
        ]
        labels=[
            file=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/output.lbl.txt
            token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
        ]
    ]
]
currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu
DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\Miscellaneous\SLU
OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu
DeviceId=0
timestamping=true
NdlDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Examples\Text\Miscellaneous\SLU
ExpDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu
OutDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu

05/03/2016 16:04:12: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<

05/03/2016 16:04:12: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
configparameters: rnnlu.cntk:command=LSTM:LSTMTest
configparameters: rnnlu.cntk:ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\Miscellaneous\SLU
configparameters: rnnlu.cntk:currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
configparameters: rnnlu.cntk:DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
configparameters: rnnlu.cntk:deviceId=0
configparameters: rnnlu.cntk:ExpDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu
configparameters: rnnlu.cntk:LSTM=[
    action=train
	makeMode=true
    modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn
    SimpleNetworkBuilder=[
        rnnType=LSTM
        layerSizes=2832:50:300:300:300:127
        lookupTableOrder=3
        recurrentLayer=2:3:4
        defaultHiddenActivity=0.1
        initValueScale=6.0
        trainingCriterion=crossentropywithsoftmax
        evalCriterion=crossentropywithsoftmax
    ]
    SGD=[
maxEpochs=100   
epochSize=71524     
        minibatchSize=10000
        learningRatesPerSample=0.1
        momentumAsTimeConstant=1000
        gradientClippingWithTruncation=true
        clippingThresholdPerSample=15.0
        numMBsToShowResult=50
        loadBestModel=true
        AutoAdjust=[
            autoAdjustLR=adjustafterepoch
            reduceLearnRateIfImproveLessThan=0
            increaseLearnRateIfImproveMoreThan=1000000000
            learnRateDecreaseFactor=0.5
            learnRateIncreaseFactor=1.382
        ]
    ]
    reader=[
        readerType=LUSequenceReader
        wordContext=0:1:2
        randomize=None
nbruttsineachrecurrentiter=10  
        equalLength = false
        wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/sequenceSentence.bin
        wsize=256
        wrecords=1000
        windowSize=10000
        unk="<unk>"
          wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
          file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.train.apos.pred.pos.head.IOB.simple
          features=[
            dim=0
            sectionType=data
          ]
          sequence=[
            dim=1
            wrecords=2
            sectionType=data
          ]
          labelIn=[
            dim=1
            usewordmap=true
            labelDim=10000
            labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/sentenceLabels.txt
            labelType=Category
            beginSequence="BOS"
            endSequence="EOS"
            usewordmap=true
            token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
            elementSize=4
            sectionType=labels
            mapping=[
              wrecords=11
              elementSize=10
              sectionType=labelMapping
            ]
            category=[
              dim=11
              sectionType=categoryLabels
            ]
          ]
          labels=[
            dim=1
            labelType=Category
            token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
            labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/sentenceLabels.out.txt
            sectionType=labels
            mapping=[
              sectionType=labelMapping
            ]
            category=[
              sectionType=categoryLabels
            ]
          ]
    ]
    cvReader=[
      readerType=LUSequenceReader
      randomize=None
      wordContext=0:1:2
      nbruttsineachrecurrentiter=200
      equalLength = false
      wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/sequenceSentence.valid.bin
      wsize=256
      wrecords=1000
      windowSize=10000
      unk="<unk>"
      wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
      file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.dev.IOB.simple
      features=[
        dim=0
        sectionType=data
      ]
      sequence=[
        dim=1
        wrecords=2
        sectionType=data
      ]
      labelIn=[
        dim=1
        labelDim=10000
        labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/sentenceLabels.in.txt
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        usewordmap=true
        token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=11
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=11
          sectionType=categoryLabels
        ]
      ]
      labels=[
        dim=1
        labelType=Category
        token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
        labelDim=10000
        labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/sentenceLabels.out.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=3
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=3
          sectionType=categoryLabels
        ]
      ]
    ]
]

configparameters: rnnlu.cntk:LSTMTest=[
    action=write
    epochSize=4430000
    defaultHiddenActivity=0.1
    modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn
    outputNodeNames=outputs:labels
    reader=[
      readerType=LUSequenceReader
      randomize=None
      wordContext=0:1:2
      unk="<unk>"
      wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
      file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.test.apos.pred.pos.head.IOB.simple
      wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/sequenceSentence.bin
      wsize=256
      wrecords=1000
      windowSize=10000
      features=[
        dim=0 
        sectionType=data
      ]
      sequence=[
        dim=1
        wrecords=2
        sectionType=data
      ]
      labelIn=[
        dim=1
        labelDim=10000
        labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/sentenceLabels.txt
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        usewordmap=true
        token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=11
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=11
          sectionType=categoryLabels
        ]
      ]
      labels=[
        dim=1
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
        labelDim=127
        labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/sentenceLabels.out.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=3
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=3
          sectionType=categoryLabels
        ]
      ]
    ]
    writer=[
        writerType=LUSequenceWriter
        outputs=[
            file=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/output.rec.txt
            token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
        ]
        labels=[
            file=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/output.lbl.txt
            token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
        ]
    ]
]

configparameters: rnnlu.cntk:NdlDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Examples\Text\Miscellaneous\SLU
configparameters: rnnlu.cntk:OutDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu
configparameters: rnnlu.cntk:OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu
configparameters: rnnlu.cntk:precision=float
configparameters: rnnlu.cntk:RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu
configparameters: rnnlu.cntk:timestamping=true
configparameters: rnnlu.cntk:traceLevel=1
05/03/2016 16:04:12: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
05/03/2016 16:04:12: Commands: LSTM LSTMTest
05/03/2016 16:04:12: Precision = "float"
05/03/2016 16:04:12: CNTKModelPath: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn
05/03/2016 16:04:12: CNTKCommandTrainInfo: LSTM : 100
05/03/2016 16:04:12: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 100

05/03/2016 16:04:12: ##############################################################################
05/03/2016 16:04:12: #                                                                            #
05/03/2016 16:04:12: # Action "train"                                                             #
05/03/2016 16:04:12: #                                                                            #
05/03/2016 16:04:12: ##############################################################################

05/03/2016 16:04:12: CNTKCommandTrainBegin: LSTM
SimpleNetworkBuilder Using GPU 0
BatchLUSequenceReader: Input file is C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.train.apos.pred.pos.head.IOB.simple
BatchLUSequenceReader: Input file is C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.dev.IOB.simple

05/03/2016 16:04:12: Creating virgin network.
Microsoft::MSR::CNTK::GPUMatrix<ElemType>::SetUniformRandomValue (GPU): creating curand object with seed 1, sizeof(ElemType)==4

Post-processing network...

3 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	PosteriorProb = Softmax()
	outputs = Times()

Loop[0] --> Loop_AutoName37 -> 31 nodes

	AutoName2	AutoName30	AutoName33
	AutoName1	AutoName21	AutoName24
	AutoName5	AutoName20	AutoName25
	AutoName26	AutoName6	AutoName27
	AutoName0	AutoName8	AutoName11
	AutoName4	AutoName7	AutoName12
	AutoName13	AutoName3	AutoName14
	AutoName15	AutoName17	AutoName18
	AutoName19	AutoName28	AutoName29
	AutoName34	AutoName35	AutoName36
	AutoName37

Loop[1] --> Loop_AutoName75 -> 31 nodes

	AutoName40	AutoName68	AutoName71
	AutoName39	AutoName59	AutoName62
	AutoName43	AutoName58	AutoName63
	AutoName64	AutoName44	AutoName65
	AutoName38	AutoName46	AutoName49
	AutoName42	AutoName45	AutoName50
	AutoName51	AutoName41	AutoName52
	AutoName53	AutoName55	AutoName56
	AutoName57	AutoName66	AutoName67
	AutoName72	AutoName73	AutoName74
	AutoName75

Loop[2] --> Loop_AutoName113 -> 31 nodes

	AutoName78	AutoName106	AutoName109
	AutoName77	AutoName97	AutoName100
	AutoName81	AutoName96	AutoName101
	AutoName102	AutoName82	AutoName103
	AutoName76	AutoName84	AutoName87
	AutoName80	AutoName83	AutoName88
	AutoName89	AutoName79	AutoName90
	AutoName91	AutoName93	AutoName94
	AutoName95	AutoName104	AutoName105
	AutoName110	AutoName111	AutoName112
	AutoName113

Validating network. 168 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [127 x *]
Validating --> W4 = LearnableParameter() :  -> [127 x 300]
Validating --> WXO3 = LearnableParameter() :  -> [300 x 300]
Validating --> WXO2 = LearnableParameter() :  -> [300 x 300]
Validating --> WXO0 = LearnableParameter() :  -> [300 x 150]
Validating --> E0 = LearnableParameter() :  -> [50 x 944]
Validating --> features = InputValue() :  -> [2832 x *]
Validating --> LookupTable = LookupTable (E0, features) : [50 x 944], [2832 x *] -> [150 x *]
Validating --> AutoName31 = Times (WXO0, LookupTable) : [300 x 150], [150 x *] -> [300 x *]
Validating --> bo0 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName32 = Plus (AutoName31, bo0) : [300 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHO0 = LearnableParameter() :  -> [300 x 300]
Validating --> WCO0 = LearnableParameter() :  -> [300 x 1]
Validating --> WXF0 = LearnableParameter() :  -> [300 x 150]
Validating --> AutoName22 = Times (WXF0, LookupTable) : [300 x 150], [150 x *] -> [300 x *]
Validating --> bf0 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName23 = Plus (AutoName22, bf0) : [300 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHF0 = LearnableParameter() :  -> [300 x 300]
Validating --> WCF0 = LearnableParameter() :  -> [300 x 1]
Validating --> WXI0 = LearnableParameter() :  -> [300 x 150]
Validating --> AutoName9 = Times (WXI0, LookupTable) : [300 x 150], [150 x *] -> [300 x *]
Validating --> bi0 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName10 = Plus (AutoName9, bi0) : [300 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHI0 = LearnableParameter() :  -> [300 x 300]
Validating --> WCI0 = LearnableParameter() :  -> [300 x 1]
Validating --> WXC0 = LearnableParameter() :  -> [300 x 150]
Validating --> AutoName16 = Times (WXC0, LookupTable) : [300 x 150], [150 x *] -> [300 x *]
Validating --> WHC0 = LearnableParameter() :  -> [300 x 300]
Validating --> bc0 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName30 = Times (WHO0, AutoName2) : [300 x 300], [300] -> [300]
Validating --> AutoName33 = Plus (AutoName32, AutoName30) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName21 = Times (WHF0, AutoName1) : [300 x 300], [300] -> [300]
Validating --> AutoName24 = Plus (AutoName23, AutoName21) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName20 = DiagTimes (WCF0, AutoName5) : [300 x 1], [300] -> [300]
Validating --> AutoName25 = Plus (AutoName24, AutoName20) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName26 = Sigmoid (AutoName25) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName27 = ElementTimes (AutoName26, AutoName6) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName8 = Times (WHI0, AutoName0) : [300 x 300], [300] -> [300]
Validating --> AutoName11 = Plus (AutoName10, AutoName8) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName7 = DiagTimes (WCI0, AutoName4) : [300 x 1], [300] -> [300]
Validating --> AutoName12 = Plus (AutoName11, AutoName7) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName13 = Sigmoid (AutoName12) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName14 = Times (WHC0, AutoName3) : [300 x 300], [300] -> [300]
Validating --> AutoName15 = Plus (AutoName14, bc0) : [300], [300 x 1] -> [300 x 1]
Validating --> AutoName17 = Plus (AutoName16, AutoName15) : [300 x *], [300 x 1] -> [300 x 1 x *]
Validating --> AutoName18 = Tanh (AutoName17) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName19 = ElementTimes (AutoName13, AutoName18) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName28 = Plus (AutoName27, AutoName19) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName29 = DiagTimes (WCO0, AutoName28) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName34 = Plus (AutoName33, AutoName29) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName35 = Sigmoid (AutoName34) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName36 = Tanh (AutoName28) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName37 = ElementTimes (AutoName35, AutoName36) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName69 = Times (WXO2, AutoName37) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> bo2 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName70 = Plus (AutoName69, bo2) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHO2 = LearnableParameter() :  -> [300 x 300]
Validating --> WCO2 = LearnableParameter() :  -> [300 x 1]
Validating --> WXF2 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName60 = Times (WXF2, AutoName37) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> bf2 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName61 = Plus (AutoName60, bf2) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHF2 = LearnableParameter() :  -> [300 x 300]
Validating --> WCF2 = LearnableParameter() :  -> [300 x 1]
Validating --> WXI2 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName47 = Times (WXI2, AutoName37) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> bi2 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName48 = Plus (AutoName47, bi2) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHI2 = LearnableParameter() :  -> [300 x 300]
Validating --> WCI2 = LearnableParameter() :  -> [300 x 1]
Validating --> WXC2 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName54 = Times (WXC2, AutoName37) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> WHC2 = LearnableParameter() :  -> [300 x 300]
Validating --> bc2 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName68 = Times (WHO2, AutoName40) : [300 x 300], [300] -> [300]
Validating --> AutoName71 = Plus (AutoName70, AutoName68) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName59 = Times (WHF2, AutoName39) : [300 x 300], [300] -> [300]
Validating --> AutoName62 = Plus (AutoName61, AutoName59) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName58 = DiagTimes (WCF2, AutoName43) : [300 x 1], [300] -> [300]
Validating --> AutoName63 = Plus (AutoName62, AutoName58) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName64 = Sigmoid (AutoName63) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName65 = ElementTimes (AutoName64, AutoName44) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName46 = Times (WHI2, AutoName38) : [300 x 300], [300] -> [300]
Validating --> AutoName49 = Plus (AutoName48, AutoName46) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName45 = DiagTimes (WCI2, AutoName42) : [300 x 1], [300] -> [300]
Validating --> AutoName50 = Plus (AutoName49, AutoName45) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName51 = Sigmoid (AutoName50) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName52 = Times (WHC2, AutoName41) : [300 x 300], [300] -> [300]
Validating --> AutoName53 = Plus (AutoName52, bc2) : [300], [300 x 1] -> [300 x 1]
Validating --> AutoName55 = Plus (AutoName54, AutoName53) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> AutoName56 = Tanh (AutoName55) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName57 = ElementTimes (AutoName51, AutoName56) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName66 = Plus (AutoName65, AutoName57) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName67 = DiagTimes (WCO2, AutoName66) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName72 = Plus (AutoName71, AutoName67) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName73 = Sigmoid (AutoName72) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName74 = Tanh (AutoName66) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName75 = ElementTimes (AutoName73, AutoName74) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName107 = Times (WXO3, AutoName75) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> bo3 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName108 = Plus (AutoName107, bo3) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHO3 = LearnableParameter() :  -> [300 x 300]
Validating --> WCO3 = LearnableParameter() :  -> [300 x 1]
Validating --> WXF3 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName98 = Times (WXF3, AutoName75) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> bf3 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName99 = Plus (AutoName98, bf3) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHF3 = LearnableParameter() :  -> [300 x 300]
Validating --> WCF3 = LearnableParameter() :  -> [300 x 1]
Validating --> WXI3 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName85 = Times (WXI3, AutoName75) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> bi3 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName86 = Plus (AutoName85, bi3) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHI3 = LearnableParameter() :  -> [300 x 300]
Validating --> WCI3 = LearnableParameter() :  -> [300 x 1]
Validating --> WXC3 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName92 = Times (WXC3, AutoName75) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> WHC3 = LearnableParameter() :  -> [300 x 300]
Validating --> bc3 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName106 = Times (WHO3, AutoName78) : [300 x 300], [300] -> [300]
Validating --> AutoName109 = Plus (AutoName108, AutoName106) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName97 = Times (WHF3, AutoName77) : [300 x 300], [300] -> [300]
Validating --> AutoName100 = Plus (AutoName99, AutoName97) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName96 = DiagTimes (WCF3, AutoName81) : [300 x 1], [300] -> [300]
Validating --> AutoName101 = Plus (AutoName100, AutoName96) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName102 = Sigmoid (AutoName101) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName103 = ElementTimes (AutoName102, AutoName82) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName84 = Times (WHI3, AutoName76) : [300 x 300], [300] -> [300]
Validating --> AutoName87 = Plus (AutoName86, AutoName84) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName83 = DiagTimes (WCI3, AutoName80) : [300 x 1], [300] -> [300]
Validating --> AutoName88 = Plus (AutoName87, AutoName83) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName89 = Sigmoid (AutoName88) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName90 = Times (WHC3, AutoName79) : [300 x 300], [300] -> [300]
Validating --> AutoName91 = Plus (AutoName90, bc3) : [300], [300 x 1] -> [300 x 1]
Validating --> AutoName93 = Plus (AutoName92, AutoName91) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> AutoName94 = Tanh (AutoName93) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName95 = ElementTimes (AutoName89, AutoName94) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName104 = Plus (AutoName103, AutoName95) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName105 = DiagTimes (WCO3, AutoName104) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName110 = Plus (AutoName109, AutoName105) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName111 = Sigmoid (AutoName110) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName112 = Tanh (AutoName104) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName113 = ElementTimes (AutoName111, AutoName112) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName114 = Times (W4, AutoName113) : [127 x 300], [300 x 1 x *] -> [127 x 1 x *]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, AutoName114) : [127 x *], [127 x 1 x *] -> [1]
Validating --> outputs = Times (W4, AutoName113) : [127 x 300], [300 x 1 x *] -> [127 x 1 x *]
Validating --> PosteriorProb = Softmax (outputs) : [127 x 1 x *] -> [127 x 1 x *]

Validating network. 119 nodes to process in pass 2.

Validating --> AutoName2 = PastValue (AutoName37) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName30 = Times (WHO0, AutoName2) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName1 = PastValue (AutoName37) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName21 = Times (WHF0, AutoName1) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName5 = PastValue (AutoName28) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName20 = DiagTimes (WCF0, AutoName5) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName6 = PastValue (AutoName28) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName0 = PastValue (AutoName37) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName8 = Times (WHI0, AutoName0) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName4 = PastValue (AutoName28) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName7 = DiagTimes (WCI0, AutoName4) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName3 = PastValue (AutoName37) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName14 = Times (WHC0, AutoName3) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName15 = Plus (AutoName14, bc0) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> AutoName40 = PastValue (AutoName75) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName68 = Times (WHO2, AutoName40) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName39 = PastValue (AutoName75) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName59 = Times (WHF2, AutoName39) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName43 = PastValue (AutoName66) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName58 = DiagTimes (WCF2, AutoName43) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName44 = PastValue (AutoName66) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName38 = PastValue (AutoName75) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName46 = Times (WHI2, AutoName38) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName42 = PastValue (AutoName66) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName45 = DiagTimes (WCI2, AutoName42) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName41 = PastValue (AutoName75) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName52 = Times (WHC2, AutoName41) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName53 = Plus (AutoName52, bc2) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> AutoName78 = PastValue (AutoName113) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName106 = Times (WHO3, AutoName78) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName77 = PastValue (AutoName113) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName97 = Times (WHF3, AutoName77) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName81 = PastValue (AutoName104) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName96 = DiagTimes (WCF3, AutoName81) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName82 = PastValue (AutoName104) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName76 = PastValue (AutoName113) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName84 = Times (WHI3, AutoName76) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName80 = PastValue (AutoName104) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName83 = DiagTimes (WCI3, AutoName80) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName79 = PastValue (AutoName113) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName90 = Times (WHC3, AutoName79) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName91 = Plus (AutoName90, bc3) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]

Validating network. 42 nodes to process in pass 3.


Validating network, final pass.



48 out of 168 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

05/03/2016 16:04:13: Created model with 168 nodes on GPU 0.

05/03/2016 16:04:13: Training criterion node(s):
05/03/2016 16:04:13: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax


Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

0000000000000000: {[PosteriorProb Gradient[127 x 1 x *]] [PosteriorProb Value[127 x 1 x *]] [features Gradient[2832 x *]] [labels Gradient[127 x *]] [outputs Gradient[127 x 1 x *]] }
000000CB27734510: {[features Value[2832 x *]] }
000000CB3F273EE0: {[WCF0 Value[300 x 1]] }
000000CB3F274020: {[WCO0 Value[300 x 1]] }
000000CB3F2743E0: {[WXF0 Value[300 x 150]] }
000000CB3F274660: {[WCI0 Value[300 x 1]] }
000000CB3F2748E0: {[WHO0 Value[300 x 300]] }
000000CB3F274E80: {[bo0 Value[300 x 1]] }
000000CB3F274F20: {[bc0 Value[300 x 1]] }
000000CB3F275100: {[WXC0 Value[300 x 150]] }
000000CB3F2752E0: {[bf0 Value[300 x 1]] }
000000CB3F2754C0: {[E0 Value[50 x 944]] }
000000CB3F275740: {[WXO0 Value[300 x 150]] }
000000CB3F2757E0: {[bi0 Value[300 x 1]] }
000000CB3F275920: {[WHI0 Value[300 x 300]] }
000000CB3F275BA0: {[WHF0 Value[300 x 300]] }
000000CB3F275CE0: {[WXI0 Value[300 x 150]] }
000000CB41911F50: {[AutoName6 Value[300 x 1 x *]] }
000000CB41912A90: {[AutoName5 Value[300 x 1 x *]] }
000000CB41912E50: {[AutoName1 Value[300 x 1 x *]] }
000000CB419130D0: {[AutoName2 Value[300 x 1 x *]] [WXC0 Gradient[300 x 150]] }
000000CB41913210: {[WHC0 Value[300 x 300]] }
000000CB419132B0: {[AutoName4 Value[300 x 1 x *]] }
000000CB41913670: {[AutoName0 Value[300 x 1 x *]] }
000000CB41913B70: {[WXO2 Value[300 x 300]] }
000000CB41913D50: {[AutoName3 Value[300 x 1 x *]] }
000000CB41931FA0: {[bf2 Value[300 x 1]] }
000000CB419322C0: {[WCF2 Value[300 x 1]] }
000000CB41932400: {[WHC2 Value[300 x 300]] }
000000CB419324A0: {[AutoName38 Value[300 x 1 x *]] [WHI0 Gradient[300 x 300]] }
000000CB41932540: {[bo2 Value[300 x 1]] }
000000CB419325E0: {[AutoName27 Gradient[300 x 1 x *]] [AutoName39 Value[300 x 1 x *]] }
000000CB419327C0: {[bi2 Value[300 x 1]] }
000000CB41932860: {[WXF2 Value[300 x 300]] }
000000CB41932A40: {[WCI2 Value[300 x 1]] }
000000CB41932AE0: {[WHF2 Value[300 x 300]] }
000000CB41932EA0: {[AutoName20 Gradient[300 x 1 x *]] [AutoName42 Value[300 x 1 x *]] }
000000CB41933260: {[WHO2 Value[300 x 300]] }
000000CB41933300: {[WHI2 Value[300 x 300]] }
000000CB419333A0: {[AutoName40 Value[300 x 1 x *]] [WXC2 Gradient[300 x 300]] }
000000CB419334E0: {[WXC2 Value[300 x 300]] }
000000CB41933580: {[AutoName15 Gradient[300 x 1 x *]] [AutoName43 Value[300 x 1 x *]] }
000000CB41933760: {[bc2 Value[300 x 1]] }
000000CB41933940: {[WXI2 Value[300 x 300]] }
000000CB419339E0: {[AutoName44 Value[300 x 1 x *]] [WCI0 Gradient[300 x 1]] }
000000CB41933BC0: {[WCO2 Value[300 x 1]] }
000000CB41933D00: {[AutoName30 Gradient[300 x 1 x *]] [AutoName41 Value[300 x 1 x *]] }
000000CB4193C260: {[bc3 Value[300 x 1]] }
000000CB4193C300: {[bi3 Value[300 x 1]] }
000000CB4193C6C0: {[WCI3 Value[300 x 1]] }
000000CB4193CA80: {[bo3 Value[300 x 1]] }
000000CB4193CC60: {[WXF3 Value[300 x 300]] }
000000CB4193D160: {[WXO3 Value[300 x 300]] }
000000CB4193D340: {[bf3 Value[300 x 1]] }
000000CB4193D3E0: {[WHI3 Value[300 x 300]] }
000000CB4193D480: {[WHF3 Value[300 x 300]] }
000000CB4193D520: {[WHO3 Value[300 x 300]] }
000000CB4193D5C0: {[WCO3 Value[300 x 1]] }
000000CB4193D7A0: {[WXI3 Value[300 x 300]] }
000000CB4193D840: {[WXC3 Value[300 x 300]] }
000000CB4193D980: {[WCF3 Value[300 x 1]] }
000000CB419420A0: {[AutoName65 Gradient[300 x 1 x *]] [AutoName77 Value[300 x 1 x *]] [AutoName8 Gradient[300 x 1 x *]] }
000000CB419423C0: {[AutoName76 Value[300 x 1 x *]] [WHI2 Gradient[300 x 300]] }
000000CB41942820: {[W4 Value[127 x 300]] }
000000CB41942960: {[AutoName12 Gradient[300 x 1 x *]] [AutoName58 Gradient[300 x 1 x *]] [AutoName80 Value[300 x 1 x *]] }
000000CB41942DC0: {[AutoName78 Value[300 x 1 x *]] [WXC3 Gradient[300 x 300]] }
000000CB41942E60: {[AutoName68 Gradient[300 x 1 x *]] [AutoName79 Value[300 x 1 x *]] }
000000CB419430E0: {[WHC3 Value[300 x 300]] }
000000CB41943400: {[AutoName53 Gradient[300 x 1 x *]] [AutoName81 Value[300 x 1 x *]] }
000000CB419434A0: {[AutoName82 Value[300 x 1 x *]] [WCI2 Gradient[300 x 1]] }
000000CB4194E6F0: {[AutoName31 Value[300 x *]] [E0 Gradient[50 x 944]] }
000000CB4194E790: {[AutoName17 Value[300 x 1 x *]] }
000000CB4194E830: {[AutoName25 Value[300 x 1 x *]] }
000000CB4194E8D0: {[AutoName18 Value[300 x 1 x *]] }
000000CB4194E970: {[AutoName29 Value[300 x 1 x *]] }
000000CB4194EA10: {[outputs Value[127 x 1 x *]] }
000000CB4194EAB0: {[AutoName34 Value[300 x 1 x *]] }
000000CB4194EB50: {[AutoName19 Value[300 x 1 x *]] }
000000CB4194EBF0: {[AutoName35 Gradient[300 x 1 x *]] [AutoName69 Value[300 x 1 x *]] }
000000CB4194EC90: {[AutoName26 Value[300 x 1 x *]] }
000000CB4194EE70: {[CrossEntropyWithSoftmax Value[1]] }
000000CB4194EF10: {[AutoName21 Value[300 x 1 x *]] }
000000CB4194EFB0: {[AutoName8 Value[300 x 1 x *]] }
000000CB4194F190: {[AutoName22 Value[300 x *]] [AutoName31 Gradient[300 x *]] }
000000CB4194F230: {[AutoName7 Value[300 x 1 x *]] }
000000CB4194F2D0: {[AutoName27 Value[300 x 1 x *]] }
000000CB4194F370: {[AutoName13 Value[300 x 1 x *]] }
000000CB4194F410: {[AutoName35 Value[300 x 1 x *]] }
000000CB4194F4B0: {[AutoName70 Value[300 x 1 x *]] [WXO2 Gradient[300 x 300]] }
000000CB4194F550: {[AutoName33 Value[300 x 1 x *]] }
000000CB4194F730: {[AutoName30 Value[300 x 1 x *]] }
000000CB4194F7D0: {[AutoName20 Value[300 x 1 x *]] }
000000CB4194F870: {[AutoName36 Gradient[300 x 1 x *]] [AutoName60 Value[300 x 1 x *]] [AutoName69 Gradient[300 x 1 x *]] }
000000CB4194F910: {[AutoName14 Value[300 x 1 x *]] }
000000CB4194F9B0: {[AutoName10 Value[300 x 1 x *]] [WXI0 Gradient[300 x 150]] }
000000CB4194FA50: {[labels Value[127 x *]] }
000000CB4194FAF0: {[AutoName32 Value[300 x 1 x *]] [WXO0 Gradient[300 x 150]] }
000000CB4194FB90: {[AutoName23 Value[300 x 1 x *]] [WXF0 Gradient[300 x 150]] }
000000CB4194FC30: {[AutoName22 Gradient[300 x *]] [AutoName9 Value[300 x *]] [bo0 Gradient[300 x 1]] }
000000CB4194FCD0: {[AutoName16 Value[300 x *]] [AutoName9 Gradient[300 x *]] [bf0 Gradient[300 x 1]] }
000000CB4194FD70: {[AutoName36 Value[300 x 1 x *]] }
000000CB4194FE10: {[AutoName28 Value[300 x 1 x *]] }
000000CB4194FEB0: {[AutoName15 Value[300 x 1 x *]] }
000000CB4194FFF0: {[AutoName37 Value[300 x 1 x *]] }
000000CB41950090: {[AutoName61 Value[300 x 1 x *]] [WXF2 Gradient[300 x 300]] }
000000CB41950130: {[AutoName47 Value[300 x 1 x *]] [AutoName60 Gradient[300 x 1 x *]] [bo2 Gradient[300 x 1]] }
000000CB41950270: {[LookupTable Value[150 x *]] }
000000CB41950310: {[AutoName24 Value[300 x 1 x *]] }
000000CB419503B0: {[AutoName11 Value[300 x 1 x *]] }
000000CB41950450: {[AutoName12 Value[300 x 1 x *]] }
000000CB41ADE020: {[AutoName93 Value[300 x 1 x *]] }
000000CB41ADE0C0: {[AutoName2 Gradient[300 x 1 x *]] [AutoName52 Value[300 x 1 x *]] [LookupTable Gradient[150 x *]] }
000000CB41ADE160: {[AutoName94 Value[300 x 1 x *]] }
000000CB41ADE200: {[AutoName64 Gradient[300 x 1 x *]] [AutoName84 Value[300 x 1 x *]] }
000000CB41ADE2A0: {[AutoName14 Gradient[300 x 1 x *]] [AutoName43 Gradient[300 x 1 x *]] [AutoName83 Value[300 x 1 x *]] }
000000CB41ADE340: {[AutoName56 Value[300 x 1 x *]] }
000000CB41ADE3E0: {[AutoName37 Gradient[300 x 1 x *]] [AutoName40 Gradient[300 x 1 x *]] [AutoName90 Value[300 x 1 x *]] }
000000CB41ADE480: {[AutoName108 Value[300 x 1 x *]] [WXO3 Gradient[300 x 300]] }
000000CB41ADE520: {[AutoName3 Gradient[300 x 1 x *]] [AutoName58 Value[300 x 1 x *]] }
000000CB41ADE5C0: {[AutoName107 Gradient[300 x 1 x *]] [AutoName74 Gradient[300 x 1 x *]] [AutoName98 Value[300 x 1 x *]] }
000000CB41ADE660: {[AutoName57 Value[300 x 1 x *]] }
000000CB41ADE700: {[AutoName109 Value[300 x 1 x *]] }
000000CB41ADE7A0: {[AutoName41 Gradient[300 x 1 x *]] [AutoName96 Value[300 x 1 x *]] [WHO0 Gradient[300 x 300]] }
000000CB41ADE840: {[AutoName66 Value[300 x 1 x *]] }
000000CB41ADE8E0: {[AutoName102 Value[300 x 1 x *]] [WCF0 Gradient[300 x 1]] }
000000CB41ADE980: {[AutoName71 Value[300 x 1 x *]] }
000000CB41ADEA20: {[AutoName13 Gradient[300 x 1 x *]] [AutoName59 Value[300 x 1 x *]] }
000000CB41ADEAC0: {[AutoName10 Gradient[300 x 1 x *]] [AutoName65 Value[300 x 1 x *]] }
000000CB41ADEB60: {[AutoName45 Value[300 x 1 x *]] [AutoName5 Gradient[300 x 1 x *]] }
000000CB41ADEC00: {[AutoName53 Value[300 x 1 x *]] }
000000CB41ADECA0: {[AutoName85 Value[300 x 1 x *]] [AutoName98 Gradient[300 x 1 x *]] [bo3 Gradient[300 x 1]] }
000000CB41ADED40: {[AutoName103 Value[300 x 1 x *]] [AutoName33 Gradient[300 x 1 x *]] [AutoName48 Gradient[300 x 1 x *]] }
000000CB41ADEDE0: {[AutoName18 Gradient[300 x 1 x *]] [AutoName59 Gradient[300 x 1 x *]] [AutoName88 Value[300 x 1 x *]] }
000000CB41ADEE80: {[AutoName17 Gradient[300 x 1 x *]] [AutoName62 Value[300 x 1 x *]] }
000000CB41ADEF20: {[AutoName21 Gradient[300 x 1 x *]] [AutoName50 Value[300 x 1 x *]] }
000000CB41ADEFC0: {[AutoName47 Gradient[300 x 1 x *]] [AutoName54 Value[300 x 1 x *]] [bf2 Gradient[300 x 1]] }
000000CB41ADF060: {[AutoName72 Value[300 x 1 x *]] }
000000CB41ADF100: {[AutoName107 Value[300 x 1 x *]] [AutoName73 Gradient[300 x 1 x *]] }
000000CB41ADF1A0: {[AutoName67 Value[300 x 1 x *]] }
000000CB41ADF240: {[AutoName100 Value[300 x 1 x *]] [AutoName55 Gradient[300 x 1 x *]] }
000000CB41ADF2E0: {[AutoName106 Value[300 x 1 x *]] [AutoName67 Gradient[300 x 1 x *]] }
000000CB41ADF380: {[AutoName48 Value[300 x 1 x *]] [WXI2 Gradient[300 x 300]] }
000000CB41ADF420: {[AutoName74 Value[300 x 1 x *]] }
000000CB41ADF4C0: {[AutoName86 Value[300 x 1 x *]] [WXI3 Gradient[300 x 300]] }
000000CB41ADF560: {[AutoName75 Value[300 x 1 x *]] }
000000CB41ADF600: {[AutoName99 Value[300 x 1 x *]] [WXF3 Gradient[300 x 300]] }
000000CB41ADF6A0: {[AutoName29 Gradient[300 x 1 x *]] [AutoName68 Value[300 x 1 x *]] }
000000CB41ADF740: {[AutoName11 Gradient[300 x 1 x *]] [AutoName63 Value[300 x 1 x *]] }
000000CB41ADF7E0: {[AutoName55 Value[300 x 1 x *]] }
000000CB41ADF880: {[AutoName73 Value[300 x 1 x *]] }
000000CB41ADF920: {[AutoName25 Gradient[300 x 1 x *]] [AutoName49 Value[300 x 1 x *]] }
000000CB41ADF9C0: {[AutoName85 Gradient[300 x 1 x *]] [AutoName92 Value[300 x 1 x *]] [bf3 Gradient[300 x 1]] }
000000CB41ADFA60: {[AutoName63 Gradient[300 x 1 x *]] [AutoName7 Gradient[300 x 1 x *]] [AutoName87 Value[300 x 1 x *]] }
000000CB41ADFB00: {[AutoName64 Value[300 x 1 x *]] }
000000CB41ADFBA0: {[AutoName1 Gradient[300 x 1 x *]] [AutoName51 Value[300 x 1 x *]] }
000000CB41ADFC40: {[AutoName32 Gradient[300 x 1 x *]] [AutoName51 Gradient[300 x 1 x *]] [AutoName97 Value[300 x 1 x *]] }
000000CB41ADFCE0: {[AutoName19 Gradient[300 x 1 x *]] [AutoName39 Gradient[300 x 1 x *]] [AutoName89 Value[300 x 1 x *]] }
000000CB41ADFD80: {[AutoName91 Value[300 x 1 x *]] }
000000CB41ADFE20: {[AutoName26 Gradient[300 x 1 x *]] [AutoName46 Value[300 x 1 x *]] }
000000CB41ADFEC0: {[AutoName101 Value[300 x 1 x *]] [AutoName24 Gradient[300 x 1 x *]] [AutoName49 Gradient[300 x 1 x *]] }
000000CB41AE4050: {[AutoName112 Value[300 x 1 x *]] }
000000CB41AE40F0: {[AutoName112 Gradient[300 x 1 x *]] [AutoName114 Gradient[127 x 1 x *]] }
000000CB41AE4190: {[WCF2 Gradient[300 x 1]] }
000000CB41AE4230: {[WCI3 Gradient[300 x 1]] }
000000CB41AE42D0: {[CrossEntropyWithSoftmax Gradient[1]] }
000000CB41AE4370: {[WCO3 Gradient[300 x 1]] }
000000CB41AE4410: {[bc0 Gradient[300 x 1]] }
000000CB41AE44B0: {[AutoName80 Gradient[300 x 1 x *]] [WHC0 Gradient[300 x 300]] }
000000CB41AE4550: {[WHI3 Gradient[300 x 300]] }
000000CB41AE45F0: {[AutoName102 Gradient[300 x 1 x *]] }
000000CB41AE4690: {[AutoName0 Gradient[300 x 1 x *]] [AutoName38 Gradient[300 x 1 x *]] [AutoName76 Gradient[300 x 1 x *]] }
000000CB41AE4730: {[AutoName101 Gradient[300 x 1 x *]] [AutoName23 Gradient[300 x 1 x *]] [AutoName45 Gradient[300 x 1 x *]] }
000000CB41AE47D0: {[AutoName103 Gradient[300 x 1 x *]] [AutoName46 Gradient[300 x 1 x *]] [AutoName6 Gradient[300 x 1 x *]] }
000000CB41AE4870: {[AutoName105 Value[300 x 1 x *]] }
000000CB41AE49B0: {[AutoName28 Gradient[300 x 1 x *]] [AutoName70 Gradient[300 x 1 x *]] [AutoName89 Gradient[300 x 1 x *]] }
000000CB41AE4A50: {[AutoName71 Gradient[300 x 1 x *]] [AutoName86 Gradient[300 x 1 x *]] [WCO0 Gradient[300 x 1]] }
000000CB41AE4AF0: {[AutoName105 Gradient[300 x 1 x *]] }
000000CB41AE4B90: {[AutoName90 Gradient[300 x 1 x *]] }
000000CB41AE4C30: {[AutoName42 Gradient[300 x 1 x *]] [AutoName82 Gradient[300 x 1 x *]] }
000000CB41AE4CD0: {[W4 Gradient[127 x 300]] }
000000CB41AE4D70: {[AutoName16 Gradient[300 x *]] [AutoName62 Gradient[300 x 1 x *]] [AutoName87 Gradient[300 x 1 x *]] [bi0 Gradient[300 x 1]] }
000000CB41AE4E10: {[AutoName113 Gradient[300 x 1 x *]] }
000000CB41AE4EB0: {[AutoName34 Gradient[300 x 1 x *]] [AutoName61 Gradient[300 x 1 x *]] [AutoName83 Gradient[300 x 1 x *]] }
000000CB41AE4FF0: {[AutoName110 Value[300 x 1 x *]] }
000000CB41AE5090: {[AutoName111 Value[300 x 1 x *]] }
000000CB41AE5130: {[AutoName110 Gradient[300 x 1 x *]] }
000000CB41AE51D0: {[AutoName79 Gradient[300 x 1 x *]] [WHO2 Gradient[300 x 300]] }
000000CB41AE5270: {[AutoName4 Gradient[300 x 1 x *]] [AutoName44 Gradient[300 x 1 x *]] [AutoName84 Gradient[300 x 1 x *]] }
000000CB41AE5310: {[AutoName100 Gradient[300 x 1 x *]] [AutoName54 Gradient[300 x 1 x *]] [bi2 Gradient[300 x 1]] }
000000CB41AE53B0: {[AutoName50 Gradient[300 x 1 x *]] [AutoName96 Gradient[300 x 1 x *]] [WHF0 Gradient[300 x 300]] }
000000CB41AE5450: {[AutoName92 Gradient[300 x 1 x *]] [bi3 Gradient[300 x 1]] }
000000CB41AE54F0: {[WHC2 Gradient[300 x 300]] }
000000CB41AE5590: {[bc2 Gradient[300 x 1]] }
000000CB41AE5630: {[AutoName95 Value[300 x 1 x *]] }
000000CB41AE5770: {[AutoName95 Gradient[300 x 1 x *]] }
000000CB41AE5810: {[AutoName93 Gradient[300 x 1 x *]] }
000000CB41AE58B0: {[AutoName104 Gradient[300 x 1 x *]] }
000000CB41AE5950: {[AutoName113 Value[300 x 1 x *]] }
000000CB41AE5A90: {[AutoName109 Gradient[300 x 1 x *]] [WCO2 Gradient[300 x 1]] }
000000CB41AE5B30: {[AutoName91 Gradient[300 x 1 x *]] }
000000CB41AE5BD0: {[WHC3 Gradient[300 x 300]] }
000000CB41AE5C70: {[AutoName104 Value[300 x 1 x *]] }
000000CB41AE5D10: {[AutoName111 Gradient[300 x 1 x *]] [AutoName114 Value[127 x 1 x *]] }
000000CB41AE5DB0: {[AutoName88 Gradient[300 x 1 x *]] [WHF2 Gradient[300 x 300]] }
000000CB41AE5E50: {[AutoName94 Gradient[300 x 1 x *]] }
000000CB41AE5EF0: {[bc3 Gradient[300 x 1]] }
000000CB41AE8760: {[AutoName75 Gradient[300 x 1 x *]] [AutoName78 Gradient[300 x 1 x *]] }
000000CB41AE8800: {[AutoName52 Gradient[300 x 1 x *]] [AutoName81 Gradient[300 x 1 x *]] }
000000CB41AE88A0: {[WHO3 Gradient[300 x 300]] }
000000CB41AE8940: {[WHF3 Gradient[300 x 300]] }
000000CB41AE8A80: {[AutoName72 Gradient[300 x 1 x *]] [AutoName99 Gradient[300 x 1 x *]] }
000000CB41AE9340: {[WCF3 Gradient[300 x 1]] }
000000CB41AE9700: {[AutoName57 Gradient[300 x 1 x *]] [AutoName77 Gradient[300 x 1 x *]] }
000000CB41AE9DE0: {[AutoName108 Gradient[300 x 1 x *]] [AutoName66 Gradient[300 x 1 x *]] }
000000CB41AEA4C0: {[AutoName106 Gradient[300 x 1 x *]] }
000000CB41AEA560: {[AutoName56 Gradient[300 x 1 x *]] [AutoName97 Gradient[300 x 1 x *]] }

05/03/2016 16:04:13: No PreCompute nodes found, skipping PreCompute step.

05/03/2016 16:04:13: Starting Epoch 1: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 16:04:13: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:13: Finished Epoch[ 1 of 100]: [Training] CrossEntropyWithSoftmax = 4.84160397 * 81; totalSamplesSeen = 81; learningRatePerSample = 0.1; epochTime=0.401477s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:13: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 4.80312545 * 81; perplexity = 121.89078661
05/03/2016 16:04:13: Finished Epoch[ 1 of 100]: [Validate] CrossEntropyWithSoftmax = 4.80312545 * 81
05/03/2016 16:04:14: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn.1'

05/03/2016 16:04:14: Starting Epoch 2: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 16:04:14: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:14: Finished Epoch[ 2 of 100]: [Training] CrossEntropyWithSoftmax = 4.80312545 * 81; totalSamplesSeen = 162; learningRatePerSample = 0.1; epochTime=0.178929s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:14: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 4.72982750 * 81; perplexity = 113.27602101
05/03/2016 16:04:14: Finished Epoch[ 2 of 100]: [Validate] CrossEntropyWithSoftmax = 4.72982750 * 81
05/03/2016 16:04:14: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn.2'

05/03/2016 16:04:14: Starting Epoch 3: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 16:04:14: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:14: Finished Epoch[ 3 of 100]: [Training] CrossEntropyWithSoftmax = 4.72982750 * 81; totalSamplesSeen = 243; learningRatePerSample = 0.1; epochTime=0.176397s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:15: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 4.62214152 * 81; perplexity = 101.71161655
05/03/2016 16:04:15: Finished Epoch[ 3 of 100]: [Validate] CrossEntropyWithSoftmax = 4.62214152 * 81
05/03/2016 16:04:15: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn.3'

05/03/2016 16:04:15: Starting Epoch 4: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 16:04:15: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:15: Finished Epoch[ 4 of 100]: [Training] CrossEntropyWithSoftmax = 4.62214152 * 81; totalSamplesSeen = 324; learningRatePerSample = 0.1; epochTime=0.177365s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:15: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 4.47407890 * 81; perplexity = 87.71376974
05/03/2016 16:04:15: Finished Epoch[ 4 of 100]: [Validate] CrossEntropyWithSoftmax = 4.47407890 * 81
05/03/2016 16:04:15: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn.4'

05/03/2016 16:04:15: Starting Epoch 5: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 16:04:15: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:15: Finished Epoch[ 5 of 100]: [Training] CrossEntropyWithSoftmax = 4.47407890 * 81; totalSamplesSeen = 405; learningRatePerSample = 0.1; epochTime=0.173958s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
WARNING: The same matrix with dim [127, 120] has been transferred between different devices for 20 times.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:16: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 4.26949546 * 81; perplexity = 71.48555904
05/03/2016 16:04:16: Finished Epoch[ 5 of 100]: [Validate] CrossEntropyWithSoftmax = 4.26949546 * 81
05/03/2016 16:04:16: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn.5'

05/03/2016 16:04:16: Starting Epoch 6: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 16:04:16: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:16: Finished Epoch[ 6 of 100]: [Training] CrossEntropyWithSoftmax = 4.26949546 * 81; totalSamplesSeen = 486; learningRatePerSample = 0.1; epochTime=0.178227s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:16: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 3.97823758 * 81; perplexity = 53.42279759
05/03/2016 16:04:16: Finished Epoch[ 6 of 100]: [Validate] CrossEntropyWithSoftmax = 3.97823758 * 81
05/03/2016 16:04:16: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn.6'

05/03/2016 16:04:16: Starting Epoch 7: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 16:04:16: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:16: Finished Epoch[ 7 of 100]: [Training] CrossEntropyWithSoftmax = 3.97823758 * 81; totalSamplesSeen = 567; learningRatePerSample = 0.1; epochTime=0.178145s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:17: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 3.55474665 * 81; perplexity = 34.97895697
05/03/2016 16:04:17: Finished Epoch[ 7 of 100]: [Validate] CrossEntropyWithSoftmax = 3.55474665 * 81
05/03/2016 16:04:17: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn.7'

05/03/2016 16:04:17: Starting Epoch 8: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 16:04:17: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:17: Finished Epoch[ 8 of 100]: [Training] CrossEntropyWithSoftmax = 3.55474665 * 81; totalSamplesSeen = 648; learningRatePerSample = 0.1; epochTime=0.177939s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:17: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.96335894 * 81; perplexity = 19.36290143
05/03/2016 16:04:17: Finished Epoch[ 8 of 100]: [Validate] CrossEntropyWithSoftmax = 2.96335894 * 81
05/03/2016 16:04:17: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn.8'

05/03/2016 16:04:17: Starting Epoch 9: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 16:04:17: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:17: Finished Epoch[ 9 of 100]: [Training] CrossEntropyWithSoftmax = 2.96335894 * 81; totalSamplesSeen = 729; learningRatePerSample = 0.1; epochTime=0.176493s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:18: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.40280038 * 81; perplexity = 11.05408876
05/03/2016 16:04:18: Finished Epoch[ 9 of 100]: [Validate] CrossEntropyWithSoftmax = 2.40280038 * 81
05/03/2016 16:04:18: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn.9'

05/03/2016 16:04:18: Starting Epoch 10: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 16:04:18: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:18: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280038 * 81; totalSamplesSeen = 810; learningRatePerSample = 0.1; epochTime=0.17551s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:18: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.55921653 * 81; perplexity = 12.92568652
05/03/2016 16:04:18: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.55921653 * 81
05/03/2016 16:04:18: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn.9.
05/03/2016 16:04:18: learnRatePerSample reduced to 0.050000001
05/03/2016 16:04:18: SGD: revoke back to and update checkpoint file for epoch 9

05/03/2016 16:04:18: Starting Epoch 10: learning rate per sample = 0.050000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 16:04:18: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:19: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280038 * 81; totalSamplesSeen = 810; learningRatePerSample = 0.050000001; epochTime=0.17712s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:19: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.53354127 * 81; perplexity = 12.59804026
05/03/2016 16:04:19: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.53354127 * 81
05/03/2016 16:04:19: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn.9.
05/03/2016 16:04:19: learnRatePerSample reduced to 0.025
05/03/2016 16:04:19: SGD: revoke back to and update checkpoint file for epoch 9

05/03/2016 16:04:19: Starting Epoch 10: learning rate per sample = 0.025000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 16:04:19: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:19: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280038 * 81; totalSamplesSeen = 810; learningRatePerSample = 0.025; epochTime=0.17175s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:19: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.52156067 * 81; perplexity = 12.44800873
05/03/2016 16:04:19: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.52156067 * 81
05/03/2016 16:04:19: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn.9.
05/03/2016 16:04:19: learnRatePerSample reduced to 0.0125
05/03/2016 16:04:19: SGD: revoke back to and update checkpoint file for epoch 9

05/03/2016 16:04:20: Starting Epoch 10: learning rate per sample = 0.012500  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 16:04:20: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:20: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280038 * 81; totalSamplesSeen = 810; learningRatePerSample = 0.0125; epochTime=0.178052s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:20: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51578776 * 81; perplexity = 12.37635454
05/03/2016 16:04:20: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51578776 * 81
05/03/2016 16:04:20: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn.9.
05/03/2016 16:04:20: learnRatePerSample reduced to 0.0062500001
05/03/2016 16:04:20: SGD: revoke back to and update checkpoint file for epoch 9

05/03/2016 16:04:20: Starting Epoch 10: learning rate per sample = 0.006250  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 16:04:20: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:20: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280038 * 81; totalSamplesSeen = 810; learningRatePerSample = 0.0062500001; epochTime=0.177575s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:20: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51295641 * 81; perplexity = 12.34136227
05/03/2016 16:04:20: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51295641 * 81
05/03/2016 16:04:20: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn.9.
05/03/2016 16:04:21: learnRatePerSample reduced to 0.003125
05/03/2016 16:04:21: SGD: revoke back to and update checkpoint file for epoch 9

05/03/2016 16:04:21: Starting Epoch 10: learning rate per sample = 0.003125  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 16:04:21: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:21: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280038 * 81; totalSamplesSeen = 810; learningRatePerSample = 0.003125; epochTime=0.170137s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:21: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51155467 * 81; perplexity = 12.32407506
05/03/2016 16:04:21: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51155467 * 81
05/03/2016 16:04:21: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn.9.
05/03/2016 16:04:21: learnRatePerSample reduced to 0.0015625
05/03/2016 16:04:21: SGD: revoke back to and update checkpoint file for epoch 9

05/03/2016 16:04:21: Starting Epoch 10: learning rate per sample = 0.001563  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 16:04:21: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:22: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280038 * 81; totalSamplesSeen = 810; learningRatePerSample = 0.0015625; epochTime=0.173902s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:22: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51085691 * 81; perplexity = 12.31547881
05/03/2016 16:04:22: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51085691 * 81
05/03/2016 16:04:22: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn.9.
05/03/2016 16:04:22: learnRatePerSample reduced to 0.00078125001
05/03/2016 16:04:22: SGD: revoke back to and update checkpoint file for epoch 9

05/03/2016 16:04:22: Starting Epoch 10: learning rate per sample = 0.000781  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 16:04:22: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:22: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280038 * 81; totalSamplesSeen = 810; learningRatePerSample = 0.00078125001; epochTime=0.175584s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:22: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51050897 * 81; perplexity = 12.31119453
05/03/2016 16:04:22: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51050897 * 81
05/03/2016 16:04:22: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn.9.
05/03/2016 16:04:22: learnRatePerSample reduced to 0.00039062501
05/03/2016 16:04:22: SGD: revoke back to and update checkpoint file for epoch 9

05/03/2016 16:04:23: Starting Epoch 10: learning rate per sample = 0.000391  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 16:04:23: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:23: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280038 * 81; totalSamplesSeen = 810; learningRatePerSample = 0.00039062501; epochTime=0.17783s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:23: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51033510 * 81; perplexity = 12.30905411
05/03/2016 16:04:23: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51033510 * 81
05/03/2016 16:04:23: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn.9.
05/03/2016 16:04:23: learnRatePerSample reduced to 0.0001953125
05/03/2016 16:04:23: SGD: revoke back to and update checkpoint file for epoch 9

05/03/2016 16:04:23: Starting Epoch 10: learning rate per sample = 0.000195  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 16:04:23: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:23: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280038 * 81; totalSamplesSeen = 810; learningRatePerSample = 0.0001953125; epochTime=0.17665s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:23: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51024863 * 81; perplexity = 12.30798984
05/03/2016 16:04:23: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51024863 * 81
05/03/2016 16:04:23: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn.9.
05/03/2016 16:04:24: learnRatePerSample reduced to 9.7656251e-005
05/03/2016 16:04:24: SGD: revoke back to and update checkpoint file for epoch 9

05/03/2016 16:04:24: Starting Epoch 10: learning rate per sample = 0.000098  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 16:04:24: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:24: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280038 * 81; totalSamplesSeen = 810; learningRatePerSample = 9.7656251e-005; epochTime=0.171839s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:24: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51020530 * 81; perplexity = 12.30745657
05/03/2016 16:04:24: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51020530 * 81
05/03/2016 16:04:24: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn.9.
05/03/2016 16:04:24: learnRatePerSample reduced to 4.8828126e-005
05/03/2016 16:04:24: SGD: revoke back to and update checkpoint file for epoch 9

05/03/2016 16:04:24: Starting Epoch 10: learning rate per sample = 0.000049  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 16:04:24: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:24: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280038 * 81; totalSamplesSeen = 810; learningRatePerSample = 4.8828126e-005; epochTime=0.171914s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:25: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51018364 * 81; perplexity = 12.30718995
05/03/2016 16:04:25: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51018364 * 81
05/03/2016 16:04:25: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn.9.
05/03/2016 16:04:25: learnRatePerSample reduced to 2.4414063e-005
05/03/2016 16:04:25: SGD: revoke back to and update checkpoint file for epoch 9

05/03/2016 16:04:25: Starting Epoch 10: learning rate per sample = 0.000024  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 16:04:25: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:25: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280038 * 81; totalSamplesSeen = 810; learningRatePerSample = 2.4414063e-005; epochTime=0.167548s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:25: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51017271 * 81; perplexity = 12.30705548
05/03/2016 16:04:25: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51017271 * 81
05/03/2016 16:04:25: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn.9.
05/03/2016 16:04:25: learnRatePerSample reduced to 1.2207031e-005
05/03/2016 16:04:25: SGD: revoke back to and update checkpoint file for epoch 9

05/03/2016 16:04:25: Starting Epoch 10: learning rate per sample = 0.000012  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 16:04:25: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:26: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280038 * 81; totalSamplesSeen = 810; learningRatePerSample = 1.2207031e-005; epochTime=0.177627s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:26: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51016687 * 81; perplexity = 12.30698361
05/03/2016 16:04:26: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51016687 * 81
05/03/2016 16:04:26: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn.9.
05/03/2016 16:04:26: learnRatePerSample reduced to 6.1035157e-006
05/03/2016 16:04:26: SGD: revoke back to and update checkpoint file for epoch 9

05/03/2016 16:04:26: Starting Epoch 10: learning rate per sample = 0.000006  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 16:04:26: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:26: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280038 * 81; totalSamplesSeen = 810; learningRatePerSample = 6.1035157e-006; epochTime=0.173486s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:26: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51016443 * 81; perplexity = 12.30695347
05/03/2016 16:04:26: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51016443 * 81
05/03/2016 16:04:26: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn.9.
05/03/2016 16:04:27: learnRatePerSample reduced to 3.0517579e-006
05/03/2016 16:04:27: SGD: revoke back to and update checkpoint file for epoch 9

05/03/2016 16:04:27: Starting Epoch 10: learning rate per sample = 0.000003  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 16:04:27: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:27: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280038 * 81; totalSamplesSeen = 810; learningRatePerSample = 3.0517579e-006; epochTime=0.177685s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:27: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51016311 * 81; perplexity = 12.30693724
05/03/2016 16:04:27: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51016311 * 81
05/03/2016 16:04:27: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn.9.
05/03/2016 16:04:27: learnRatePerSample reduced to 1.5258789e-006
05/03/2016 16:04:27: SGD: revoke back to and update checkpoint file for epoch 9

05/03/2016 16:04:27: Starting Epoch 10: learning rate per sample = 0.000002  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 16:04:27: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:27: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280038 * 81; totalSamplesSeen = 810; learningRatePerSample = 1.5258789e-006; epochTime=0.175024s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:27: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51016254 * 81; perplexity = 12.30693029
05/03/2016 16:04:27: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51016254 * 81
05/03/2016 16:04:27: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn.9.
05/03/2016 16:04:28: learnRatePerSample reduced to 7.6293946e-007
05/03/2016 16:04:28: SGD: revoke back to and update checkpoint file for epoch 9

05/03/2016 16:04:28: Starting Epoch 10: learning rate per sample = 0.000001  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 16:04:28: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:28: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280038 * 81; totalSamplesSeen = 810; learningRatePerSample = 7.6293946e-007; epochTime=0.175896s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:28: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51016198 * 81; perplexity = 12.30692333
05/03/2016 16:04:28: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51016198 * 81
05/03/2016 16:04:28: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn.9.
05/03/2016 16:04:28: learnRatePerSample reduced to 3.8146973e-007
05/03/2016 16:04:28: SGD: revoke back to and update checkpoint file for epoch 9

05/03/2016 16:04:28: Starting Epoch 10: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 16:04:28: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:29: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280038 * 81; totalSamplesSeen = 810; learningRatePerSample = 3.8146973e-007; epochTime=0.177844s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:29: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51016198 * 81; perplexity = 12.30692333
05/03/2016 16:04:29: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51016198 * 81
05/03/2016 16:04:29: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn.9.
05/03/2016 16:04:29: learnRatePerSample reduced to 1.9073487e-007
05/03/2016 16:04:29: SGD: revoke back to and update checkpoint file for epoch 9

05/03/2016 16:04:29: Starting Epoch 10: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 16:04:29: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:29: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280038 * 81; totalSamplesSeen = 810; learningRatePerSample = 1.9073487e-007; epochTime=0.177459s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:29: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51016198 * 81; perplexity = 12.30692333
05/03/2016 16:04:29: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51016198 * 81
05/03/2016 16:04:29: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn.9.
05/03/2016 16:04:30: learnRatePerSample reduced to 9.5367433e-008
05/03/2016 16:04:30: SGD: revoke back to and update checkpoint file for epoch 9

05/03/2016 16:04:30: Starting Epoch 10: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 16:04:30: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:30: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280038 * 81; totalSamplesSeen = 810; learningRatePerSample = 9.5367433e-008; epochTime=0.177215s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:30: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51016179 * 81; perplexity = 12.30692102
05/03/2016 16:04:30: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51016179 * 81
05/03/2016 16:04:30: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn.9.
05/03/2016 16:04:30: learnRatePerSample reduced to 4.7683717e-008
05/03/2016 16:04:30: SGD: revoke back to and update checkpoint file for epoch 9

05/03/2016 16:04:30: Starting Epoch 10: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 16:04:30: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:30: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280038 * 81; totalSamplesSeen = 810; learningRatePerSample = 4.7683717e-008; epochTime=0.177572s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:30: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51016179 * 81; perplexity = 12.30692102
05/03/2016 16:04:30: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51016179 * 81
05/03/2016 16:04:30: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn.9.
05/03/2016 16:04:31: learnRatePerSample reduced to 2.3841858e-008
05/03/2016 16:04:31: SGD: revoke back to and update checkpoint file for epoch 9

05/03/2016 16:04:31: Starting Epoch 10: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 16:04:31: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:31: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280038 * 81; totalSamplesSeen = 810; learningRatePerSample = 2.3841858e-008; epochTime=0.180311s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:31: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51016179 * 81; perplexity = 12.30692102
05/03/2016 16:04:31: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51016179 * 81
05/03/2016 16:04:31: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn.9.
05/03/2016 16:04:31: learnRatePerSample reduced to 1.1920929e-008
05/03/2016 16:04:31: SGD: revoke back to and update checkpoint file for epoch 9

05/03/2016 16:04:31: Starting Epoch 10: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 16:04:31: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:32: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280038 * 81; totalSamplesSeen = 810; learningRatePerSample = 1.1920929e-008; epochTime=0.172974s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:32: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51016179 * 81; perplexity = 12.30692102
05/03/2016 16:04:32: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51016179 * 81
05/03/2016 16:04:32: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn.9.
05/03/2016 16:04:32: learnRatePerSample reduced to 5.9604646e-009
05/03/2016 16:04:32: SGD: revoke back to and update checkpoint file for epoch 9

05/03/2016 16:04:32: Starting Epoch 10: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 16:04:32: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:32: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280038 * 81; totalSamplesSeen = 810; learningRatePerSample = 5.9604646e-009; epochTime=0.172809s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:32: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51016179 * 81; perplexity = 12.30692102
05/03/2016 16:04:32: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51016179 * 81
05/03/2016 16:04:32: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn.9.
05/03/2016 16:04:32: learnRatePerSample reduced to 2.9802323e-009
05/03/2016 16:04:32: SGD: revoke back to and update checkpoint file for epoch 9

05/03/2016 16:04:33: Starting Epoch 10: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 16:04:33: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:33: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280038 * 81; totalSamplesSeen = 810; learningRatePerSample = 2.9802323e-009; epochTime=0.17771s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:33: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51016179 * 81; perplexity = 12.30692102
05/03/2016 16:04:33: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51016179 * 81
05/03/2016 16:04:33: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn.9.
05/03/2016 16:04:33: learnRatePerSample reduced to 1.4901161e-009
05/03/2016 16:04:33: SGD: revoke back to and update checkpoint file for epoch 9

05/03/2016 16:04:33: Starting Epoch 10: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 16:04:33: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:33: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280038 * 81; totalSamplesSeen = 810; learningRatePerSample = 1.4901161e-009; epochTime=0.177418s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 16:04:33: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51016179 * 81; perplexity = 12.30692102
05/03/2016 16:04:33: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51016179 * 81
05/03/2016 16:04:33: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503155407.673730\Examples\Text\Miscellaneous_SLU@release_gpu/cntkdebug.dnn.9.
05/03/2016 16:04:34: learnRatePerSample reduced to 7.4505807e-010
05/03/2016 16:04:34: SGD: revoke back to and update checkpoint file for epoch 9
05/03/2016 16:04:34: Learn Rate Per Sample for Epoch[10] = 7.4505807e-010 is less than minLearnRate 9.9999997e-010. Training complete.
05/03/2016 16:04:34: CNTKCommandTrainEnd: LSTM

05/03/2016 16:04:34: Action "train" complete.


05/03/2016 16:04:34: ##############################################################################
05/03/2016 16:04:34: #                                                                            #
05/03/2016 16:04:34: # Action "write"                                                             #
05/03/2016 16:04:34: #                                                                            #
05/03/2016 16:04:34: ##############################################################################

BatchLUSequenceReader: Input file is C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.test.apos.pred.pos.head.IOB.simple

Post-processing network...

4 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	PosteriorProb = Softmax()
	labels = InputValue()
	outputs = Times()

Loop[0] --> Loop_AutoName37 -> 31 nodes

	AutoName2	AutoName30	AutoName33
	AutoName1	AutoName21	AutoName24
	AutoName5	AutoName20	AutoName25
	AutoName26	AutoName6	AutoName27
	AutoName0	AutoName8	AutoName11
	AutoName4	AutoName7	AutoName12
	AutoName13	AutoName3	AutoName14
	AutoName15	AutoName17	AutoName18
	AutoName19	AutoName28	AutoName29
	AutoName34	AutoName35	AutoName36
	AutoName37

Loop[1] --> Loop_AutoName75 -> 31 nodes

	AutoName40	AutoName68	AutoName71
	AutoName39	AutoName59	AutoName62
	AutoName43	AutoName58	AutoName63
	AutoName64	AutoName44	AutoName65
	AutoName38	AutoName46	AutoName49
	AutoName42	AutoName45	AutoName50
	AutoName51	AutoName41	AutoName52
	AutoName53	AutoName55	AutoName56
	AutoName57	AutoName66	AutoName67
	AutoName72	AutoName73	AutoName74
	AutoName75

Loop[2] --> Loop_AutoName113 -> 31 nodes

	AutoName78	AutoName106	AutoName109
	AutoName77	AutoName97	AutoName100
	AutoName81	AutoName96	AutoName101
	AutoName102	AutoName82	AutoName103
	AutoName76	AutoName84	AutoName87
	AutoName80	AutoName83	AutoName88
	AutoName89	AutoName79	AutoName90
	AutoName91	AutoName93	AutoName94
	AutoName95	AutoName104	AutoName105
	AutoName110	AutoName111	AutoName112
	AutoName113

Validating network. 168 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [127 x *1]
Validating --> W4 = LearnableParameter() :  -> [127 x 300]
Validating --> WXO3 = LearnableParameter() :  -> [300 x 300]
Validating --> WXO2 = LearnableParameter() :  -> [300 x 300]
Validating --> WXO0 = LearnableParameter() :  -> [300 x 150]
Validating --> E0 = LearnableParameter() :  -> [50 x 944]
Validating --> features = InputValue() :  -> [2832 x *1]
Validating --> LookupTable = LookupTable (E0, features) : [50 x 944], [2832 x *1] -> [150 x *1]
Validating --> AutoName31 = Times (WXO0, LookupTable) : [300 x 150], [150 x *1] -> [300 x *1]
Validating --> bo0 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName32 = Plus (AutoName31, bo0) : [300 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHO0 = LearnableParameter() :  -> [300 x 300]
Validating --> WCO0 = LearnableParameter() :  -> [300 x 1]
Validating --> WXF0 = LearnableParameter() :  -> [300 x 150]
Validating --> AutoName22 = Times (WXF0, LookupTable) : [300 x 150], [150 x *1] -> [300 x *1]
Validating --> bf0 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName23 = Plus (AutoName22, bf0) : [300 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHF0 = LearnableParameter() :  -> [300 x 300]
Validating --> WCF0 = LearnableParameter() :  -> [300 x 1]
Validating --> WXI0 = LearnableParameter() :  -> [300 x 150]
Validating --> AutoName9 = Times (WXI0, LookupTable) : [300 x 150], [150 x *1] -> [300 x *1]
Validating --> bi0 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName10 = Plus (AutoName9, bi0) : [300 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHI0 = LearnableParameter() :  -> [300 x 300]
Validating --> WCI0 = LearnableParameter() :  -> [300 x 1]
Validating --> WXC0 = LearnableParameter() :  -> [300 x 150]
Validating --> AutoName16 = Times (WXC0, LookupTable) : [300 x 150], [150 x *1] -> [300 x *1]
Validating --> WHC0 = LearnableParameter() :  -> [300 x 300]
Validating --> bc0 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName30 = Times (WHO0, AutoName2) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName33 = Plus (AutoName32, AutoName30) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName21 = Times (WHF0, AutoName1) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName24 = Plus (AutoName23, AutoName21) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName20 = DiagTimes (WCF0, AutoName5) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName25 = Plus (AutoName24, AutoName20) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName26 = Sigmoid (AutoName25) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName27 = ElementTimes (AutoName26, AutoName6) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName8 = Times (WHI0, AutoName0) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName11 = Plus (AutoName10, AutoName8) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName7 = DiagTimes (WCI0, AutoName4) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName12 = Plus (AutoName11, AutoName7) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName13 = Sigmoid (AutoName12) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName14 = Times (WHC0, AutoName3) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName15 = Plus (AutoName14, bc0) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName17 = Plus (AutoName16, AutoName15) : [300 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName18 = Tanh (AutoName17) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName19 = ElementTimes (AutoName13, AutoName18) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName28 = Plus (AutoName27, AutoName19) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName29 = DiagTimes (WCO0, AutoName28) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName34 = Plus (AutoName33, AutoName29) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName35 = Sigmoid (AutoName34) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName36 = Tanh (AutoName28) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName37 = ElementTimes (AutoName35, AutoName36) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName69 = Times (WXO2, AutoName37) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> bo2 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName70 = Plus (AutoName69, bo2) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHO2 = LearnableParameter() :  -> [300 x 300]
Validating --> WCO2 = LearnableParameter() :  -> [300 x 1]
Validating --> WXF2 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName60 = Times (WXF2, AutoName37) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> bf2 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName61 = Plus (AutoName60, bf2) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHF2 = LearnableParameter() :  -> [300 x 300]
Validating --> WCF2 = LearnableParameter() :  -> [300 x 1]
Validating --> WXI2 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName47 = Times (WXI2, AutoName37) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> bi2 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName48 = Plus (AutoName47, bi2) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHI2 = LearnableParameter() :  -> [300 x 300]
Validating --> WCI2 = LearnableParameter() :  -> [300 x 1]
Validating --> WXC2 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName54 = Times (WXC2, AutoName37) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> WHC2 = LearnableParameter() :  -> [300 x 300]
Validating --> bc2 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName68 = Times (WHO2, AutoName40) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName71 = Plus (AutoName70, AutoName68) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName59 = Times (WHF2, AutoName39) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName62 = Plus (AutoName61, AutoName59) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName58 = DiagTimes (WCF2, AutoName43) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName63 = Plus (AutoName62, AutoName58) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName64 = Sigmoid (AutoName63) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName65 = ElementTimes (AutoName64, AutoName44) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName46 = Times (WHI2, AutoName38) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName49 = Plus (AutoName48, AutoName46) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName45 = DiagTimes (WCI2, AutoName42) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName50 = Plus (AutoName49, AutoName45) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName51 = Sigmoid (AutoName50) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName52 = Times (WHC2, AutoName41) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName53 = Plus (AutoName52, bc2) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName55 = Plus (AutoName54, AutoName53) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName56 = Tanh (AutoName55) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName57 = ElementTimes (AutoName51, AutoName56) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName66 = Plus (AutoName65, AutoName57) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName67 = DiagTimes (WCO2, AutoName66) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName72 = Plus (AutoName71, AutoName67) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName73 = Sigmoid (AutoName72) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName74 = Tanh (AutoName66) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName75 = ElementTimes (AutoName73, AutoName74) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName107 = Times (WXO3, AutoName75) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> bo3 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName108 = Plus (AutoName107, bo3) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHO3 = LearnableParameter() :  -> [300 x 300]
Validating --> WCO3 = LearnableParameter() :  -> [300 x 1]
Validating --> WXF3 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName98 = Times (WXF3, AutoName75) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> bf3 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName99 = Plus (AutoName98, bf3) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHF3 = LearnableParameter() :  -> [300 x 300]
Validating --> WCF3 = LearnableParameter() :  -> [300 x 1]
Validating --> WXI3 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName85 = Times (WXI3, AutoName75) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> bi3 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName86 = Plus (AutoName85, bi3) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHI3 = LearnableParameter() :  -> [300 x 300]
Validating --> WCI3 = LearnableParameter() :  -> [300 x 1]
Validating --> WXC3 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName92 = Times (WXC3, AutoName75) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> WHC3 = LearnableParameter() :  -> [300 x 300]
Validating --> bc3 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName106 = Times (WHO3, AutoName78) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName109 = Plus (AutoName108, AutoName106) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName97 = Times (WHF3, AutoName77) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName100 = Plus (AutoName99, AutoName97) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName96 = DiagTimes (WCF3, AutoName81) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName101 = Plus (AutoName100, AutoName96) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName102 = Sigmoid (AutoName101) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName103 = ElementTimes (AutoName102, AutoName82) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName84 = Times (WHI3, AutoName76) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName87 = Plus (AutoName86, AutoName84) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName83 = DiagTimes (WCI3, AutoName80) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName88 = Plus (AutoName87, AutoName83) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName89 = Sigmoid (AutoName88) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName90 = Times (WHC3, AutoName79) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName91 = Plus (AutoName90, bc3) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName93 = Plus (AutoName92, AutoName91) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName94 = Tanh (AutoName93) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName95 = ElementTimes (AutoName89, AutoName94) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName104 = Plus (AutoName103, AutoName95) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName105 = DiagTimes (WCO3, AutoName104) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName110 = Plus (AutoName109, AutoName105) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName111 = Sigmoid (AutoName110) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName112 = Tanh (AutoName104) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName113 = ElementTimes (AutoName111, AutoName112) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName114 = Times (W4, AutoName113) : [127 x 300], [300 x 1 x *1] -> [127 x 1 x *1]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, AutoName114) : [127 x *1], [127 x 1 x *1] -> [1]
Validating --> outputs = Times (W4, AutoName113) : [127 x 300], [300 x 1 x *1] -> [127 x 1 x *1]
Validating --> PosteriorProb = Softmax (outputs) : [127 x 1 x *1] -> [127 x 1 x *1]

Validating network. 119 nodes to process in pass 2.

Validating --> AutoName2 = PastValue (AutoName37) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName30 = Times (WHO0, AutoName2) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName1 = PastValue (AutoName37) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName21 = Times (WHF0, AutoName1) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName5 = PastValue (AutoName28) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName20 = DiagTimes (WCF0, AutoName5) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName6 = PastValue (AutoName28) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName0 = PastValue (AutoName37) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName8 = Times (WHI0, AutoName0) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName4 = PastValue (AutoName28) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName7 = DiagTimes (WCI0, AutoName4) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName3 = PastValue (AutoName37) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName14 = Times (WHC0, AutoName3) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName15 = Plus (AutoName14, bc0) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName40 = PastValue (AutoName75) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName68 = Times (WHO2, AutoName40) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName39 = PastValue (AutoName75) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName59 = Times (WHF2, AutoName39) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName43 = PastValue (AutoName66) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName58 = DiagTimes (WCF2, AutoName43) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName44 = PastValue (AutoName66) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName38 = PastValue (AutoName75) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName46 = Times (WHI2, AutoName38) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName42 = PastValue (AutoName66) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName45 = DiagTimes (WCI2, AutoName42) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName41 = PastValue (AutoName75) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName52 = Times (WHC2, AutoName41) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName53 = Plus (AutoName52, bc2) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName78 = PastValue (AutoName113) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName106 = Times (WHO3, AutoName78) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName77 = PastValue (AutoName113) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName97 = Times (WHF3, AutoName77) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName81 = PastValue (AutoName104) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName96 = DiagTimes (WCF3, AutoName81) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName82 = PastValue (AutoName104) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName76 = PastValue (AutoName113) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName84 = Times (WHI3, AutoName76) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName80 = PastValue (AutoName104) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName83 = DiagTimes (WCI3, AutoName80) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName79 = PastValue (AutoName113) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName90 = Times (WHC3, AutoName79) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName91 = Plus (AutoName90, bc3) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]

Validating network. 42 nodes to process in pass 3.


Validating network, final pass.



48 out of 168 nodes do not share the minibatch layout with the input data.

Post-processing network complete.



Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

0000000000000000: {[AutoName0 Gradient[300 x 1 x *1]] [AutoName1 Gradient[300 x 1 x *1]] [AutoName10 Gradient[300 x 1 x *1]] [AutoName100 Gradient[300 x 1 x *1]] [AutoName101 Gradient[300 x 1 x *1]] [AutoName102 Gradient[300 x 1 x *1]] [AutoName103 Gradient[300 x 1 x *1]] [AutoName104 Gradient[300 x 1 x *1]] [AutoName105 Gradient[300 x 1 x *1]] [AutoName106 Gradient[300 x 1 x *1]] [AutoName107 Gradient[300 x 1 x *1]] [AutoName108 Gradient[300 x 1 x *1]] [AutoName109 Gradient[300 x 1 x *1]] [AutoName11 Gradient[300 x 1 x *1]] [AutoName110 Gradient[300 x 1 x *1]] [AutoName111 Gradient[300 x 1 x *1]] [AutoName112 Gradient[300 x 1 x *1]] [AutoName113 Gradient[300 x 1 x *1]] [AutoName114 Gradient[127 x 1 x *1]] [AutoName114 Value[127 x 1 x *1]] [AutoName12 Gradient[300 x 1 x *1]] [AutoName13 Gradient[300 x 1 x *1]] [AutoName14 Gradient[300 x 1 x *1]] [AutoName15 Gradient[300 x 1 x *1]] [AutoName16 Gradient[300 x *1]] [AutoName17 Gradient[300 x 1 x *1]] [AutoName18 Gradient[300 x 1 x *1]] [AutoName19 Gradient[300 x 1 x *1]] [AutoName2 Gradient[300 x 1 x *1]] [AutoName20 Gradient[300 x 1 x *1]] [AutoName21 Gradient[300 x 1 x *1]] [AutoName22 Gradient[300 x *1]] [AutoName23 Gradient[300 x 1 x *1]] [AutoName24 Gradient[300 x 1 x *1]] [AutoName25 Gradient[300 x 1 x *1]] [AutoName26 Gradient[300 x 1 x *1]] [AutoName27 Gradient[300 x 1 x *1]] [AutoName28 Gradient[300 x 1 x *1]] [AutoName29 Gradient[300 x 1 x *1]] [AutoName3 Gradient[300 x 1 x *1]] [AutoName30 Gradient[300 x 1 x *1]] [AutoName31 Gradient[300 x *1]] [AutoName32 Gradient[300 x 1 x *1]] [AutoName33 Gradient[300 x 1 x *1]] [AutoName34 Gradient[300 x 1 x *1]] [AutoName35 Gradient[300 x 1 x *1]] [AutoName36 Gradient[300 x 1 x *1]] [AutoName37 Gradient[300 x 1 x *1]] [AutoName38 Gradient[300 x 1 x *1]] [AutoName39 Gradient[300 x 1 x *1]] [AutoName4 Gradient[300 x 1 x *1]] [AutoName40 Gradient[300 x 1 x *1]] [AutoName41 Gradient[300 x 1 x *1]] [AutoName42 Gradient[300 x 1 x *1]] [AutoName43 Gradient[300 x 1 x *1]] [AutoName44 Gradient[300 x 1 x *1]] [AutoName45 Gradient[300 x 1 x *1]] [AutoName46 Gradient[300 x 1 x *1]] [AutoName47 Gradient[300 x 1 x *1]] [AutoName48 Gradient[300 x 1 x *1]] [AutoName49 Gradient[300 x 1 x *1]] [AutoName5 Gradient[300 x 1 x *1]] [AutoName50 Gradient[300 x 1 x *1]] [AutoName51 Gradient[300 x 1 x *1]] [AutoName52 Gradient[300 x 1 x *1]] [AutoName53 Gradient[300 x 1 x *1]] [AutoName54 Gradient[300 x 1 x *1]] [AutoName55 Gradient[300 x 1 x *1]] [AutoName56 Gradient[300 x 1 x *1]] [AutoName57 Gradient[300 x 1 x *1]] [AutoName58 Gradient[300 x 1 x *1]] [AutoName59 Gradient[300 x 1 x *1]] [AutoName6 Gradient[300 x 1 x *1]] [AutoName60 Gradient[300 x 1 x *1]] [AutoName61 Gradient[300 x 1 x *1]] [AutoName62 Gradient[300 x 1 x *1]] [AutoName63 Gradient[300 x 1 x *1]] [AutoName64 Gradient[300 x 1 x *1]] [AutoName65 Gradient[300 x 1 x *1]] [AutoName66 Gradient[300 x 1 x *1]] [AutoName67 Gradient[300 x 1 x *1]] [AutoName68 Gradient[300 x 1 x *1]] [AutoName69 Gradient[300 x 1 x *1]] [AutoName7 Gradient[300 x 1 x *1]] [AutoName70 Gradient[300 x 1 x *1]] [AutoName71 Gradient[300 x 1 x *1]] [AutoName72 Gradient[300 x 1 x *1]] [AutoName73 Gradient[300 x 1 x *1]] [AutoName74 Gradient[300 x 1 x *1]] [AutoName75 Gradient[300 x 1 x *1]] [AutoName76 Gradient[300 x 1 x *1]] [AutoName77 Gradient[300 x 1 x *1]] [AutoName78 Gradient[300 x 1 x *1]] [AutoName79 Gradient[300 x 1 x *1]] [AutoName8 Gradient[300 x 1 x *1]] [AutoName80 Gradient[300 x 1 x *1]] [AutoName81 Gradient[300 x 1 x *1]] [AutoName82 Gradient[300 x 1 x *1]] [AutoName83 Gradient[300 x 1 x *1]] [AutoName84 Gradient[300 x 1 x *1]] [AutoName85 Gradient[300 x 1 x *1]] [AutoName86 Gradient[300 x 1 x *1]] [AutoName87 Gradient[300 x 1 x *1]] [AutoName88 Gradient[300 x 1 x *1]] [AutoName89 Gradient[300 x 1 x *1]] [AutoName9 Gradient[300 x *1]] [AutoName90 Gradient[300 x 1 x *1]] [AutoName91 Gradient[300 x 1 x *1]] [AutoName92 Gradient[300 x 1 x *1]] [AutoName93 Gradient[300 x 1 x *1]] [AutoName94 Gradient[300 x 1 x *1]] [AutoName95 Gradient[300 x 1 x *1]] [AutoName96 Gradient[300 x 1 x *1]] [AutoName97 Gradient[300 x 1 x *1]] [AutoName98 Gradient[300 x 1 x *1]] [AutoName99 Gradient[300 x 1 x *1]] [CrossEntropyWithSoftmax Gradient[1]] [CrossEntropyWithSoftmax Value[1]] [E0 Gradient[50 x 944]] [LookupTable Gradient[150 x *1]] [PosteriorProb Gradient[127 x 1 x *1]] [PosteriorProb Value[127 x 1 x *1]] [W4 Gradient[127 x 300]] [WCF0 Gradient[300 x 1]] [WCF2 Gradient[300 x 1]] [WCF3 Gradient[300 x 1]] [WCI0 Gradient[300 x 1]] [WCI2 Gradient[300 x 1]] [WCI3 Gradient[300 x 1]] [WCO0 Gradient[300 x 1]] [WCO2 Gradient[300 x 1]] [WCO3 Gradient[300 x 1]] [WHC0 Gradient[300 x 300]] [WHC2 Gradient[300 x 300]] [WHC3 Gradient[300 x 300]] [WHF0 Gradient[300 x 300]] [WHF2 Gradient[300 x 300]] [WHF3 Gradient[300 x 300]] [WHI0 Gradient[300 x 300]] [WHI2 Gradient[300 x 300]] [WHI3 Gradient[300 x 300]] [WHO0 Gradient[300 x 300]] [WHO2 Gradient[300 x 300]] [WHO3 Gradient[300 x 300]] [WXC0 Gradient[300 x 150]] [WXC2 Gradient[300 x 300]] [WXC3 Gradient[300 x 300]] [WXF0 Gradient[300 x 150]] [WXF2 Gradient[300 x 300]] [WXF3 Gradient[300 x 300]] [WXI0 Gradient[300 x 150]] [WXI2 Gradient[300 x 300]] [WXI3 Gradient[300 x 300]] [WXO0 Gradient[300 x 150]] [WXO2 Gradient[300 x 300]] [WXO3 Gradient[300 x 300]] [bc0 Gradient[300 x 1]] [bc2 Gradient[300 x 1]] [bc3 Gradient[300 x 1]] [bf0 Gradient[300 x 1]] [bf2 Gradient[300 x 1]] [bf3 Gradient[300 x 1]] [bi0 Gradient[300 x 1]] [bi2 Gradient[300 x 1]] [bi3 Gradient[300 x 1]] [bo0 Gradient[300 x 1]] [bo2 Gradient[300 x 1]] [bo3 Gradient[300 x 1]] [features Gradient[2832 x *1]] [labels Gradient[127 x *1]] [outputs Gradient[127 x 1 x *1]] }
000000CB27734B50: {[AutoName79 Value[300 x 1 x *1]] }
000000CB3F274A20: {[AutoName77 Value[300 x 1 x *1]] }
000000CB3F275240: {[AutoName76 Value[300 x 1 x *1]] }
000000CB3F2754C0: {[AutoName78 Value[300 x 1 x *1]] }
000000CB3F275740: {[AutoName6 Value[300 x 1 x *1]] }
000000CB41911FF0: {[WCF2 Value[300 x 1]] }
000000CB41912090: {[WCI0 Value[300 x 1]] }
000000CB41912130: {[WHC2 Value[300 x 300]] }
000000CB41912310: {[WHC3 Value[300 x 300]] }
000000CB419124F0: {[WHF0 Value[300 x 300]] }
000000CB419128B0: {[labels Value[127 x *1]] }
000000CB41912950: {[WHF2 Value[300 x 300]] }
000000CB41912B30: {[WHF3 Value[300 x 300]] }
000000CB41912BD0: {[WHI0 Value[300 x 300]] }
000000CB41912D10: {[WCI2 Value[300 x 1]] }
000000CB41912DB0: {[WCI3 Value[300 x 1]] }
000000CB41912EF0: {[features Value[2832 x *1]] }
000000CB41913030: {[W4 Value[127 x 300]] }
000000CB41913170: {[WHC0 Value[300 x 300]] }
000000CB419133F0: {[E0 Value[50 x 944]] }
000000CB41913490: {[WCF3 Value[300 x 1]] }
000000CB419135D0: {[WCO2 Value[300 x 1]] }
000000CB41913670: {[WHI2 Value[300 x 300]] }
000000CB419137B0: {[WHI3 Value[300 x 300]] }
000000CB419138F0: {[WHO0 Value[300 x 300]] }
000000CB41913A30: {[WCF0 Value[300 x 1]] }
000000CB41913AD0: {[WCO3 Value[300 x 1]] }
000000CB41913CB0: {[WCO0 Value[300 x 1]] }
000000CB41943080: {[AutoName85 Value[300 x 1 x *1]] }
000000CB41943120: {[AutoName100 Value[300 x 1 x *1]] }
000000CB419431C0: {[AutoName104 Value[300 x 1 x *1]] }
000000CB41943580: {[AutoName94 Value[300 x 1 x *1]] }
000000CB41943620: {[AutoName84 Value[300 x 1 x *1]] }
000000CB419436C0: {[AutoName113 Value[300 x 1 x *1]] }
000000CB419438A0: {[AutoName109 Value[300 x 1 x *1]] }
000000CB41943A80: {[AutoName89 Value[300 x 1 x *1]] }
000000CB41943C60: {[AutoName97 Value[300 x 1 x *1]] }
000000CB41943D00: {[AutoName86 Value[300 x 1 x *1]] }
000000CB41943DA0: {[AutoName90 Value[300 x 1 x *1]] }
000000CB41944020: {[AutoName112 Value[300 x 1 x *1]] }
000000CB41944160: {[AutoName83 Value[300 x 1 x *1]] }
000000CB41944340: {[AutoName88 Value[300 x 1 x *1]] }
000000CB419445C0: {[AutoName93 Value[300 x 1 x *1]] }
000000CB41944660: {[AutoName111 Value[300 x 1 x *1]] }
000000CB419447A0: {[AutoName95 Value[300 x 1 x *1]] }
000000CB41944840: {[AutoName102 Value[300 x 1 x *1]] }
000000CB419448E0: {[AutoName101 Value[300 x 1 x *1]] }
000000CB41944980: {[AutoName99 Value[300 x 1 x *1]] }
000000CB41944A20: {[AutoName106 Value[300 x 1 x *1]] }
000000CB41944AC0: {[AutoName103 Value[300 x 1 x *1]] }
000000CB41944B60: {[AutoName96 Value[300 x 1 x *1]] }
000000CB41944C00: {[AutoName92 Value[300 x 1 x *1]] }
000000CB41944CA0: {[AutoName87 Value[300 x 1 x *1]] }
000000CB41944D40: {[AutoName91 Value[300 x 1 x *1]] }
000000CB41944DE0: {[AutoName105 Value[300 x 1 x *1]] }
000000CB41944E80: {[AutoName110 Value[300 x 1 x *1]] }
000000CB41948590: {[bf0 Value[300 x 1]] }
000000CB41948950: {[AutoName81 Value[300 x 1 x *1]] }
000000CB419489F0: {[AutoName80 Value[300 x 1 x *1]] }
000000CB41948B30: {[bc3 Value[300 x 1]] }
000000CB419490D0: {[bc0 Value[300 x 1]] }
000000CB41949210: {[bi3 Value[300 x 1]] }
000000CB419492B0: {[bi0 Value[300 x 1]] }
000000CB41949350: {[bc2 Value[300 x 1]] }
000000CB419493F0: {[bf3 Value[300 x 1]] }
000000CB41949490: {[bf2 Value[300 x 1]] }
000000CB41949850: {[bo0 Value[300 x 1]] }
000000CB41949C10: {[bo2 Value[300 x 1]] }
000000CB41949FD0: {[bi2 Value[300 x 1]] }
000000CB4194A070: {[bo3 Value[300 x 1]] }
000000CB4194A2F0: {[AutoName82 Value[300 x 1 x *1]] }
000000CB4197E8E0: {[outputs Value[127 x 1 x *1]] }
000000CB4197EAC0: {[WHO3 Value[300 x 300]] }
000000CB4197EB60: {[LookupTable Value[150 x *1]] }
000000CB4197EC00: {[AutoName31 Value[300 x *1]] }
000000CB4197ECA0: {[AutoName9 Value[300 x *1]] }
000000CB4197ED40: {[AutoName10 Value[300 x 1 x *1]] }
000000CB4197EE80: {[AutoName16 Value[300 x *1]] }
000000CB4197F1A0: {[WXI2 Value[300 x 300]] }
000000CB4197F2E0: {[WXI3 Value[300 x 300]] }
000000CB4197F420: {[WXO0 Value[300 x 150]] }
000000CB4197F560: {[WXO3 Value[300 x 300]] }
000000CB4197F7E0: {[AutoName32 Value[300 x 1 x *1]] }
000000CB4197F880: {[AutoName22 Value[300 x *1]] }
000000CB4197F9C0: {[WHO2 Value[300 x 300]] }
000000CB4197FA60: {[AutoName30 Value[300 x 1 x *1]] }
000000CB4197FB00: {[WXC3 Value[300 x 300]] }
000000CB4197FBA0: {[AutoName21 Value[300 x 1 x *1]] }
000000CB4197FC40: {[AutoName24 Value[300 x 1 x *1]] }
000000CB4197FCE0: {[AutoName20 Value[300 x 1 x *1]] }
000000CB4197FE20: {[AutoName25 Value[300 x 1 x *1]] }
000000CB4197FEC0: {[AutoName23 Value[300 x 1 x *1]] }
000000CB4197FF60: {[AutoName33 Value[300 x 1 x *1]] }
000000CB41980000: {[AutoName26 Value[300 x 1 x *1]] }
000000CB419800A0: {[WXC2 Value[300 x 300]] }
000000CB41980140: {[WXI0 Value[300 x 150]] }
000000CB419801E0: {[WXF2 Value[300 x 300]] }
000000CB41980320: {[WXC0 Value[300 x 150]] }
000000CB419803C0: {[WXF3 Value[300 x 300]] }
000000CB41980460: {[WXO2 Value[300 x 300]] }
000000CB41980500: {[WXF0 Value[300 x 150]] }
000000CB41AE83A0: {[AutoName0 Value[300 x 1 x *1]] }
000000CB41AE8940: {[AutoName3 Value[300 x 1 x *1]] }
000000CB41AE8D00: {[AutoName38 Value[300 x 1 x *1]] }
000000CB41AE8EE0: {[AutoName39 Value[300 x 1 x *1]] }
000000CB41AE92A0: {[AutoName4 Value[300 x 1 x *1]] }
000000CB41AE93E0: {[AutoName27 Value[300 x 1 x *1]] }
000000CB41AEA1A0: {[AutoName1 Value[300 x 1 x *1]] }
000000CB41AEA740: {[AutoName2 Value[300 x 1 x *1]] }
000000CB41AEAF60: {[AutoName40 Value[300 x 1 x *1]] }
000000CB41AEB280: {[AutoName43 Value[300 x 1 x *1]] }
000000CB41AEB3C0: {[AutoName42 Value[300 x 1 x *1]] }
000000CB41AEB6E0: {[AutoName44 Value[300 x 1 x *1]] }
000000CB41AEB8C0: {[AutoName5 Value[300 x 1 x *1]] }
000000CB41AEBF00: {[AutoName41 Value[300 x 1 x *1]] }
000000CB46A2B630: {[AutoName60 Value[300 x 1 x *1]] }
000000CB46A2B6D0: {[AutoName68 Value[300 x 1 x *1]] }
000000CB46A2B770: {[AutoName58 Value[300 x 1 x *1]] }
000000CB46A2B810: {[AutoName53 Value[300 x 1 x *1]] }
000000CB46A2B8B0: {[AutoName57 Value[300 x 1 x *1]] }
000000CB46A2B950: {[AutoName67 Value[300 x 1 x *1]] }
000000CB46A2B9F0: {[AutoName19 Value[300 x 1 x *1]] }
000000CB46A2BA90: {[AutoName8 Value[300 x 1 x *1]] }
000000CB46A2BB30: {[AutoName11 Value[300 x 1 x *1]] }
000000CB46A2BBD0: {[AutoName69 Value[300 x 1 x *1]] }
000000CB46A2BC70: {[AutoName73 Value[300 x 1 x *1]] }
000000CB46A2BD10: {[AutoName75 Value[300 x 1 x *1]] }
000000CB46A2BDB0: {[AutoName107 Value[300 x 1 x *1]] }
000000CB46A2BE50: {[AutoName108 Value[300 x 1 x *1]] }
000000CB46A2BEF0: {[AutoName14 Value[300 x 1 x *1]] }
000000CB46A2BF90: {[AutoName7 Value[300 x 1 x *1]] }
000000CB46A2C030: {[AutoName49 Value[300 x 1 x *1]] }
000000CB46A2C0D0: {[AutoName52 Value[300 x 1 x *1]] }
000000CB46A2C170: {[AutoName56 Value[300 x 1 x *1]] }
000000CB46A2C210: {[AutoName15 Value[300 x 1 x *1]] }
000000CB46A2C2B0: {[AutoName66 Value[300 x 1 x *1]] }
000000CB46A2C350: {[AutoName62 Value[300 x 1 x *1]] }
000000CB46A2C3F0: {[AutoName37 Value[300 x 1 x *1]] }
000000CB46A2C490: {[AutoName48 Value[300 x 1 x *1]] }
000000CB46A2C530: {[AutoName98 Value[300 x 1 x *1]] }
000000CB46A2C5D0: {[AutoName12 Value[300 x 1 x *1]] }
000000CB46A2C670: {[AutoName70 Value[300 x 1 x *1]] }
000000CB46A2C710: {[AutoName65 Value[300 x 1 x *1]] }
000000CB46A2C7B0: {[AutoName13 Value[300 x 1 x *1]] }
000000CB46A2C850: {[AutoName51 Value[300 x 1 x *1]] }
000000CB46A2C8F0: {[AutoName72 Value[300 x 1 x *1]] }
000000CB46A2C990: {[AutoName74 Value[300 x 1 x *1]] }
000000CB46A2CA30: {[AutoName18 Value[300 x 1 x *1]] }
000000CB46A2CAD0: {[AutoName36 Value[300 x 1 x *1]] }
000000CB46A2CB70: {[AutoName46 Value[300 x 1 x *1]] }
000000CB46A2CC10: {[AutoName28 Value[300 x 1 x *1]] }
000000CB46A2CCB0: {[AutoName35 Value[300 x 1 x *1]] }
000000CB46A2CD50: {[AutoName17 Value[300 x 1 x *1]] }
000000CB46A2CDF0: {[AutoName34 Value[300 x 1 x *1]] }
000000CB46A2CE90: {[AutoName54 Value[300 x 1 x *1]] }
000000CB46A2CF30: {[AutoName61 Value[300 x 1 x *1]] }
000000CB46A2CFD0: {[AutoName59 Value[300 x 1 x *1]] }
000000CB46A2D070: {[AutoName63 Value[300 x 1 x *1]] }
000000CB46A2D110: {[AutoName45 Value[300 x 1 x *1]] }
000000CB46A2D1B0: {[AutoName50 Value[300 x 1 x *1]] }
000000CB46A2D250: {[AutoName64 Value[300 x 1 x *1]] }
000000CB46A2D2F0: {[AutoName71 Value[300 x 1 x *1]] }
000000CB46A2D390: {[AutoName55 Value[300 x 1 x *1]] }
000000CB46A2D430: {[AutoName29 Value[300 x 1 x *1]] }
000000CB46A2D4D0: {[AutoName47 Value[300 x 1 x *1]] }

BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 5 lines with a total of 92+5 tokens.
O O O O O O O O O B-fromloc.city_name O B-toloc.city_name I-toloc.city_name O O O O O B-stoploc.city_name I-stoploc.city_name O 
O O O O O O O O O O O O O O O O O O O O O 
O O B-depart_date.month_name B-depart_date.day_number O O O O O B-fromloc.city_name O B-toloc.city_name I-toloc.city_name O B-depart_time.time_relative B-depart_time.time I-depart_time.time O 
O O O O O O O O O O O O O O O O O O 
O O B-depart_date.month_name B-depart_date.day_number O O O O O O B-fromloc.city_name O B-toloc.city_name I-toloc.city_name O 
O O O O O O O O O O O O O O O 
O O O O O O O B-round_trip I-round_trip O B-fromloc.city_name O B-toloc.city_name I-toloc.city_name O B-depart_date.month_name B-depart_date.day_number O 
O O O O O O O O O O O O O O O O O O 
O O O O O O O B-fromloc.city_name O B-toloc.city_name I-toloc.city_name I-toloc.city_name O B-depart_date.month_name B-depart_date.day_number O B-airline_name I-airline_name O 
O O O O O O O O O O O O O O O O O O O 
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
Total Samples Evaluated = 91

05/03/2016 16:04:34: Action "write" complete.

05/03/2016 16:04:34: __COMPLETED__
