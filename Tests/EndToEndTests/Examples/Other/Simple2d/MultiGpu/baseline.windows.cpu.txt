CPU info:
    CPU Model Name: Intel(R) Xeon(R) CPU W3565 @ 3.20GHz
    Hardware threads: 8
    Total Memory: 12580436 kB
-------------------------------------------------------------------
=== Running /cygdrive/c/jenkins/workspace/CNTK-Test-Windows-W1/x64/release/cntk.exe configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Config/Multigpu.cntk currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.266270\Examples\Other\Simple2d_MultiGpu@release_cpu DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Config OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.266270\Examples\Other\Simple2d_MultiGpu@release_cpu DeviceId=-1 timestamping=true Multigpu_Demo_Train=[SGD=[maxEpochs=3]]
-------------------------------------------------------------------
Build info: 

		Built time: Jul 14 2016 05:09:58
		Last modified date: Wed Jul 13 07:57:26 2016
		Build type: Release
		Build target: GPU
		With 1bit-SGD: no
		Math lib: mkl
		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
		CUB_PATH: C:\src\cub-1.4.1
		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
		Build Branch: HEAD
		Build SHA1: 72bee394bf461e8f6f0feb593a8416c05f481957
		Built by svcphil on DPHAIM-22
		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
-------------------------------------------------------------------
Changed current directory to C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data
MPIWrapper: initializing MPI
ping [requestnodes (before change)]: 1 nodes pinging each other
ping [requestnodes (before change)]: all 1 nodes responded
requestnodes [MPIWrapper]: using 1 out of 1 MPI nodes (1 requested); we (0) are in (participating)
ping [requestnodes (after change)]: 1 nodes pinging each other
ping [requestnodes (after change)]: all 1 nodes responded
mpihelper: only one MPI process: MPI operation will be boring
ping [mpihelper]: 1 nodes pinging each other
ping [mpihelper]: all 1 nodes responded
07/14/2016 05:42:11: -------------------------------------------------------------------
07/14/2016 05:42:11: Build info: 

07/14/2016 05:42:11: 		Built time: Jul 14 2016 05:09:58
07/14/2016 05:42:11: 		Last modified date: Wed Jul 13 07:57:26 2016
07/14/2016 05:42:11: 		Build type: Release
07/14/2016 05:42:11: 		Build target: GPU
07/14/2016 05:42:11: 		With 1bit-SGD: no
07/14/2016 05:42:11: 		Math lib: mkl
07/14/2016 05:42:11: 		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
07/14/2016 05:42:11: 		CUB_PATH: C:\src\cub-1.4.1
07/14/2016 05:42:11: 		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
07/14/2016 05:42:11: 		Build Branch: HEAD
07/14/2016 05:42:11: 		Build SHA1: 72bee394bf461e8f6f0feb593a8416c05f481957
07/14/2016 05:42:11: 		Built by svcphil on DPHAIM-22
07/14/2016 05:42:11: 		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
07/14/2016 05:42:11: -------------------------------------------------------------------
07/14/2016 05:42:11: -------------------------------------------------------------------
07/14/2016 05:42:11: GPU info:

07/14/2016 05:42:11: 		Device[0]: cores = 2496; computeCapability = 5.2; type = "Quadro M4000"; memory = 8192 MB
07/14/2016 05:42:11: -------------------------------------------------------------------

07/14/2016 05:42:11: Running on cntk-muc01 at 2016/07/14 05:42:11
07/14/2016 05:42:11: Command line: 
C:\jenkins\workspace\CNTK-Test-Windows-W1\x64\release\cntk.exe  configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Config/Multigpu.cntk  currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data  RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.266270\Examples\Other\Simple2d_MultiGpu@release_cpu  DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data  ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Config  OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.266270\Examples\Other\Simple2d_MultiGpu@release_cpu  DeviceId=-1  timestamping=true  Multigpu_Demo_Train=[SGD=[maxEpochs=3]]



07/14/2016 05:42:11: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
07/14/2016 05:42:11: RootDir = ".."
ConfigDir = "$RootDir$/Config"
DataDir = "$RootDir$/Data"
OutputDir = "$RootDir$/Output"
ModelDir = "$OutputDir$/Models"
deviceId = "auto"
command = Multigpu_Demo_Train:Multigpu_Demo_Test
precision = "float"
traceLevel = 1
modelPath = "$ModelDir$/multigpu.dnn"
outputNodeNames = ScaledLogLikelihood
parallelTrain = true
Multigpu_Demo_Train=[
    action = "train"
    SimpleNetworkBuilder = [
        layerSizes = 2:50*2:2
        trainingCriterion = "CrossEntropyWithSoftmax"
        evalCriterion = "ErrorPrediction"
        layerTypes = "Sigmoid"
        initValueScale = 1.0
        applyMeanVarNorm = true
        uniformInit = true
        needPrior = true
    ]
    SGD = [
        epochSize = 0 
        minibatchSize = 25  
        learningRatesPerMB = 0.5:0.2*20:0.1
        momentumPerMB = 0.9
        dropoutRate = 0.0
        maxEpochs = 10
        parallelTrain = [
            parallelizationMethod = "DataParallelSGD"
            parallelizationStartEpoch = 2
            dataParallelSGD = [
                gradientBits = 1
            ]
        ]
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "$DataDir$/SimpleDataTrain_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
]
Multigpu_Demo_Test=[
    action = "test"
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "$DataDir$/SimpleDataTest_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
]
Multigpu_Demo_Output=[
    action = "write"
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "$DataDir$/SimpleDataTest_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
outputPath = "$OutputDir$/MultigpuOutput"    
]
currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data
RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.266270\Examples\Other\Simple2d_MultiGpu@release_cpu
DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data
ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Config
OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.266270\Examples\Other\Simple2d_MultiGpu@release_cpu
DeviceId=-1
timestamping=true
Multigpu_Demo_Train=[SGD=[maxEpochs=3]]

07/14/2016 05:42:11: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<

07/14/2016 05:42:11: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
07/14/2016 05:42:11: RootDir = ".."
ConfigDir = "../Config"
DataDir = "../Data"
OutputDir = "../Output"
ModelDir = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.266270\Examples\Other\Simple2d_MultiGpu@release_cpu/Models"
deviceId = "auto"
command = Multigpu_Demo_Train:Multigpu_Demo_Test
precision = "float"
traceLevel = 1
modelPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.266270\Examples\Other\Simple2d_MultiGpu@release_cpu/Models/multigpu.dnn"
outputNodeNames = ScaledLogLikelihood
parallelTrain = true
Multigpu_Demo_Train=[
    action = "train"
    SimpleNetworkBuilder = [
        layerSizes = 2:50*2:2
        trainingCriterion = "CrossEntropyWithSoftmax"
        evalCriterion = "ErrorPrediction"
        layerTypes = "Sigmoid"
        initValueScale = 1.0
        applyMeanVarNorm = true
        uniformInit = true
        needPrior = true
    ]
    SGD = [
        epochSize = 0 
        minibatchSize = 25  
        learningRatesPerMB = 0.5:0.2*20:0.1
        momentumPerMB = 0.9
        dropoutRate = 0.0
        maxEpochs = 10
        parallelTrain = [
            parallelizationMethod = "DataParallelSGD"
            parallelizationStartEpoch = 2
            dataParallelSGD = [
                gradientBits = 1
            ]
        ]
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data/SimpleDataTrain_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
]
Multigpu_Demo_Test=[
    action = "test"
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data/SimpleDataTest_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
]
Multigpu_Demo_Output=[
    action = "write"
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data/SimpleDataTest_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
outputPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.266270\Examples\Other\Simple2d_MultiGpu@release_cpu/MultigpuOutput"    
]
currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data
RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.266270\Examples\Other\Simple2d_MultiGpu@release_cpu
DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data
ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Config
OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.266270\Examples\Other\Simple2d_MultiGpu@release_cpu
DeviceId=-1
timestamping=true
Multigpu_Demo_Train=[SGD=[maxEpochs=3]]

07/14/2016 05:42:11: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<

07/14/2016 05:42:11: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
configparameters: Multigpu.cntk:command=Multigpu_Demo_Train:Multigpu_Demo_Test
configparameters: Multigpu.cntk:ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Config
configparameters: Multigpu.cntk:currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data
configparameters: Multigpu.cntk:DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data
configparameters: Multigpu.cntk:deviceId=-1
configparameters: Multigpu.cntk:ModelDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.266270\Examples\Other\Simple2d_MultiGpu@release_cpu/Models
configparameters: Multigpu.cntk:modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.266270\Examples\Other\Simple2d_MultiGpu@release_cpu/Models/multigpu.dnn
configparameters: Multigpu.cntk:Multigpu_Demo_Output=[
    action = "write"
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data/SimpleDataTest_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
outputPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.266270\Examples\Other\Simple2d_MultiGpu@release_cpu/MultigpuOutput"    
]

configparameters: Multigpu.cntk:Multigpu_Demo_Test=[
    action = "test"
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data/SimpleDataTest_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
]

configparameters: Multigpu.cntk:Multigpu_Demo_Train=[
    action = "train"
    SimpleNetworkBuilder = [
        layerSizes = 2:50*2:2
        trainingCriterion = "CrossEntropyWithSoftmax"
        evalCriterion = "ErrorPrediction"
        layerTypes = "Sigmoid"
        initValueScale = 1.0
        applyMeanVarNorm = true
        uniformInit = true
        needPrior = true
    ]
    SGD = [
        epochSize = 0 
        minibatchSize = 25  
        learningRatesPerMB = 0.5:0.2*20:0.1
        momentumPerMB = 0.9
        dropoutRate = 0.0
        maxEpochs = 10
        parallelTrain = [
            parallelizationMethod = "DataParallelSGD"
            parallelizationStartEpoch = 2
            dataParallelSGD = [
                gradientBits = 1
            ]
        ]
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data/SimpleDataTrain_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
] [SGD=[maxEpochs=3]]

configparameters: Multigpu.cntk:OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.266270\Examples\Other\Simple2d_MultiGpu@release_cpu
configparameters: Multigpu.cntk:outputNodeNames=ScaledLogLikelihood
configparameters: Multigpu.cntk:parallelTrain=true
configparameters: Multigpu.cntk:precision=float
configparameters: Multigpu.cntk:RootDir=..
configparameters: Multigpu.cntk:RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.266270\Examples\Other\Simple2d_MultiGpu@release_cpu
configparameters: Multigpu.cntk:timestamping=true
configparameters: Multigpu.cntk:traceLevel=1
07/14/2016 05:42:11: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
07/14/2016 05:42:11: Commands: Multigpu_Demo_Train Multigpu_Demo_Test
07/14/2016 05:42:11: Precision = "float"
07/14/2016 05:42:11: CNTKModelPath: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.266270\Examples\Other\Simple2d_MultiGpu@release_cpu/Models/multigpu.dnn
07/14/2016 05:42:11: CNTKCommandTrainInfo: Multigpu_Demo_Train : 3
07/14/2016 05:42:11: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 3

07/14/2016 05:42:11: ##############################################################################
07/14/2016 05:42:11: #                                                                            #
07/14/2016 05:42:11: # Action "train"                                                             #
07/14/2016 05:42:11: #                                                                            #
07/14/2016 05:42:11: ##############################################################################

07/14/2016 05:42:11: CNTKCommandTrainBegin: Multigpu_Demo_Train
SimpleNetworkBuilder Using CPU

07/14/2016 05:42:11: Creating virgin network.

Post-processing network...

7 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	EvalErrorPrediction = ErrorPrediction()
	InvStdOfFeatures = InvStdDev()
	MeanOfFeatures = Mean()
	PosteriorProb = Softmax()
	Prior = Mean()
	ScaledLogLikelihood = Minus()

Validating network. 25 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [2 x *]
Validating --> W2 = LearnableParameter() :  -> [2 x 50]
Validating --> W1 = LearnableParameter() :  -> [50 x 50]
Validating --> W0 = LearnableParameter() :  -> [50 x 2]
Validating --> features = InputValue() :  -> [2 x *]
Validating --> MeanOfFeatures = Mean (features) : [2 x *] -> [2]
Validating --> InvStdOfFeatures = InvStdDev (features) : [2 x *] -> [2]
Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [2 x *], [2], [2] -> [2 x *]
Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [50 x 2], [2 x *] -> [50 x *]
Validating --> B0 = LearnableParameter() :  -> [50 x 1]
Validating --> W0*features+B0 = Plus (W0*features, B0) : [50 x *], [50 x 1] -> [50 x 1 x *]
Validating --> H1 = Sigmoid (W0*features+B0) : [50 x 1 x *] -> [50 x 1 x *]
Validating --> W1*H1 = Times (W1, H1) : [50 x 50], [50 x 1 x *] -> [50 x 1 x *]
Validating --> B1 = LearnableParameter() :  -> [50 x 1]
Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [50 x 1 x *], [50 x 1] -> [50 x 1 x *]
Validating --> H2 = Sigmoid (W1*H1+B1) : [50 x 1 x *] -> [50 x 1 x *]
Validating --> W2*H1 = Times (W2, H2) : [2 x 50], [50 x 1 x *] -> [2 x 1 x *]
Validating --> B2 = LearnableParameter() :  -> [2 x 1]
Validating --> HLast = Plus (W2*H1, B2) : [2 x 1 x *], [2 x 1] -> [2 x 1 x *]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [2 x *], [2 x 1 x *] -> [1]
Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [2 x *], [2 x 1 x *] -> [1]
Validating --> PosteriorProb = Softmax (HLast) : [2 x 1 x *] -> [2 x 1 x *]
Validating --> Prior = Mean (labels) : [2 x *] -> [2]
Validating --> LogOfPrior = Log (Prior) : [2] -> [2]
Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [2 x 1 x *], [2] -> [2 x 1 x *]

Validating network. 17 nodes to process in pass 2.


Validating network, final pass.



12 out of 25 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

07/14/2016 05:42:11: Created model with 25 nodes on CPU.

07/14/2016 05:42:11: Training criterion node(s):
07/14/2016 05:42:11: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax

07/14/2016 05:42:11: Evaluation criterion node(s):

07/14/2016 05:42:11: 	EvalErrorPrediction = ErrorPrediction


Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

0000000000000000: {[EvalErrorPrediction Gradient[1]] [InvStdOfFeatures Gradient[2]] [LogOfPrior Gradient[2]] [MVNormalizedFeatures Gradient[2 x *]] [MeanOfFeatures Gradient[2]] [PosteriorProb Gradient[2 x 1 x *]] [PosteriorProb Value[2 x 1 x *]] [Prior Gradient[2]] [ScaledLogLikelihood Gradient[2 x 1 x *]] [features Gradient[2 x *]] [labels Gradient[2 x *]] }
00000024A9B67B00: {[MeanOfFeatures Value[2]] }
00000024A9B67BA0: {[InvStdOfFeatures Value[2]] }
00000024A9B67CE0: {[B0 Value[50 x 1]] }
00000024A9B67F60: {[W1 Value[50 x 50]] }
00000024A9B680A0: {[features Value[2 x *]] }
00000024A9B68320: {[W0 Value[50 x 2]] }
00000024A9B68460: {[B1 Value[50 x 1]] }
00000024B2079070: {[W2*H1 Gradient[2 x 1 x *]] }
00000024B2079110: {[B2 Gradient[2 x 1]] }
00000024B2079430: {[EvalErrorPrediction Value[1]] }
00000024B2079610: {[MVNormalizedFeatures Value[2 x *]] }
00000024B2079A70: {[LogOfPrior Value[2]] }
00000024B2079B10: {[labels Value[2 x *]] }
00000024B2079BB0: {[W2 Value[2 x 50]] }
00000024B207A010: {[ScaledLogLikelihood Value[2 x 1 x *]] }
00000024B207A0B0: {[B2 Value[2 x 1]] }
00000024B207A290: {[Prior Value[2]] }
00000024B207A330: {[CrossEntropyWithSoftmax Value[1]] }
00000024B207A3D0: {[W0*features Value[50 x *]] }
00000024B207A470: {[W0 Gradient[50 x 2]] [W0*features+B0 Value[50 x 1 x *]] }
00000024B207A510: {[W0*features+B0 Gradient[50 x 1 x *]] [W1*H1 Value[50 x 1 x *]] }
00000024B207A5B0: {[W1 Gradient[50 x 50]] [W1*H1+B1 Value[50 x 1 x *]] }
00000024B207A6F0: {[H2 Value[50 x 1 x *]] [W1*H1 Gradient[50 x 1 x *]] }
00000024B207A790: {[B0 Gradient[50 x 1]] [H1 Gradient[50 x 1 x *]] [W1*H1+B1 Gradient[50 x 1 x *]] [W2*H1 Value[2 x 1 x *]] }
00000024B207A830: {[H1 Value[50 x 1 x *]] [W0*features Gradient[50 x *]] }
00000024B207A8D0: {[HLast Value[2 x 1 x *]] [W2 Gradient[2 x 50]] }
00000024B207ADD0: {[CrossEntropyWithSoftmax Gradient[1]] }
00000024B207AF10: {[B1 Gradient[50 x 1]] [H2 Gradient[50 x 1 x *]] [HLast Gradient[2 x 1 x *]] }


07/14/2016 05:42:11: Precomputing --> 3 PreCompute nodes found.

07/14/2016 05:42:11: 	MeanOfFeatures = Mean()
07/14/2016 05:42:11: 	InvStdOfFeatures = InvStdDev()
07/14/2016 05:42:11: 	Prior = Mean()
BlockRandomizer::StartEpoch: epoch 0: frames [0..10000] (first sequence at sample 0), data subset 0 of 1

07/14/2016 05:42:11: Precomputing --> Completed.


07/14/2016 05:42:11: Starting Epoch 1: learning rate per sample = 0.020000  effective momentum = 0.900000  momentum as time constant = 237.3 samples
BlockRandomizer::StartEpoch: epoch 0: frames [0..10000] (first sequence at sample 0), data subset 0 of 1

07/14/2016 05:42:11: Starting minibatch loop.
07/14/2016 05:42:11:  Epoch[ 1 of 3]-Minibatch[   1-  10]: CrossEntropyWithSoftmax = 0.70512000 * 250; EvalErrorPrediction = 0.55200000 * 250; time = 0.0132s; samplesPerSecond = 18909.3
07/14/2016 05:42:11:  Epoch[ 1 of 3]-Minibatch[  11-  20]: CrossEntropyWithSoftmax = 0.69754907 * 250; EvalErrorPrediction = 0.47600000 * 250; time = 0.0155s; samplesPerSecond = 16155.1
07/14/2016 05:42:11:  Epoch[ 1 of 3]-Minibatch[  21-  30]: CrossEntropyWithSoftmax = 0.71056921 * 250; EvalErrorPrediction = 0.50400000 * 250; time = 0.0104s; samplesPerSecond = 24138.3
07/14/2016 05:42:11:  Epoch[ 1 of 3]-Minibatch[  31-  40]: CrossEntropyWithSoftmax = 0.72951099 * 250; EvalErrorPrediction = 0.56000000 * 250; time = 0.0101s; samplesPerSecond = 24774.6
07/14/2016 05:42:11:  Epoch[ 1 of 3]-Minibatch[  41-  50]: CrossEntropyWithSoftmax = 0.70946655 * 250; EvalErrorPrediction = 0.48800000 * 250; time = 0.0099s; samplesPerSecond = 25239.8
07/14/2016 05:42:11:  Epoch[ 1 of 3]-Minibatch[  51-  60]: CrossEntropyWithSoftmax = 0.72656787 * 250; EvalErrorPrediction = 0.54400000 * 250; time = 0.0092s; samplesPerSecond = 27212.4
07/14/2016 05:42:11:  Epoch[ 1 of 3]-Minibatch[  61-  70]: CrossEntropyWithSoftmax = 0.69337402 * 250; EvalErrorPrediction = 0.43200000 * 250; time = 0.0098s; samplesPerSecond = 25388.4
07/14/2016 05:42:11:  Epoch[ 1 of 3]-Minibatch[  71-  80]: CrossEntropyWithSoftmax = 0.73605176 * 250; EvalErrorPrediction = 0.50000000 * 250; time = 0.0098s; samplesPerSecond = 25411.7
07/14/2016 05:42:11:  Epoch[ 1 of 3]-Minibatch[  81-  90]: CrossEntropyWithSoftmax = 0.71453125 * 250; EvalErrorPrediction = 0.51200000 * 250; time = 0.0098s; samplesPerSecond = 25633.1
07/14/2016 05:42:11:  Epoch[ 1 of 3]-Minibatch[  91- 100]: CrossEntropyWithSoftmax = 0.75191992 * 250; EvalErrorPrediction = 0.47200000 * 250; time = 0.0101s; samplesPerSecond = 24799.1
07/14/2016 05:42:11:  Epoch[ 1 of 3]-Minibatch[ 101- 110]: CrossEntropyWithSoftmax = 0.75975146 * 250; EvalErrorPrediction = 0.53200000 * 250; time = 0.0098s; samplesPerSecond = 25585.9
07/14/2016 05:42:11:  Epoch[ 1 of 3]-Minibatch[ 111- 120]: CrossEntropyWithSoftmax = 0.73172168 * 250; EvalErrorPrediction = 0.50800000 * 250; time = 0.0096s; samplesPerSecond = 26153.4
07/14/2016 05:42:11:  Epoch[ 1 of 3]-Minibatch[ 121- 130]: CrossEntropyWithSoftmax = 0.76840820 * 250; EvalErrorPrediction = 0.53200000 * 250; time = 0.0097s; samplesPerSecond = 25831.8
07/14/2016 05:42:11:  Epoch[ 1 of 3]-Minibatch[ 131- 140]: CrossEntropyWithSoftmax = 0.70464844 * 250; EvalErrorPrediction = 0.46800000 * 250; time = 0.0099s; samplesPerSecond = 25298.5
07/14/2016 05:42:11:  Epoch[ 1 of 3]-Minibatch[ 141- 150]: CrossEntropyWithSoftmax = 0.70557227 * 250; EvalErrorPrediction = 0.46400000 * 250; time = 0.0100s; samplesPerSecond = 25047.6
07/14/2016 05:42:11:  Epoch[ 1 of 3]-Minibatch[ 151- 160]: CrossEntropyWithSoftmax = 0.72711816 * 250; EvalErrorPrediction = 0.50000000 * 250; time = 0.0095s; samplesPerSecond = 26194.5
07/14/2016 05:42:11:  Epoch[ 1 of 3]-Minibatch[ 161- 170]: CrossEntropyWithSoftmax = 0.70076660 * 250; EvalErrorPrediction = 0.45600000 * 250; time = 0.0099s; samplesPerSecond = 25191.5
07/14/2016 05:42:11:  Epoch[ 1 of 3]-Minibatch[ 171- 180]: CrossEntropyWithSoftmax = 0.69409766 * 250; EvalErrorPrediction = 0.49600000 * 250; time = 0.0092s; samplesPerSecond = 27106.1
07/14/2016 05:42:11:  Epoch[ 1 of 3]-Minibatch[ 181- 190]: CrossEntropyWithSoftmax = 0.69139941 * 250; EvalErrorPrediction = 0.46800000 * 250; time = 0.0103s; samplesPerSecond = 24262.4
07/14/2016 05:42:11:  Epoch[ 1 of 3]-Minibatch[ 191- 200]: CrossEntropyWithSoftmax = 0.73361719 * 250; EvalErrorPrediction = 0.55200000 * 250; time = 0.0099s; samplesPerSecond = 25252.5
07/14/2016 05:42:11:  Epoch[ 1 of 3]-Minibatch[ 201- 210]: CrossEntropyWithSoftmax = 0.72225879 * 250; EvalErrorPrediction = 0.46800000 * 250; time = 0.0100s; samplesPerSecond = 25005.0
07/14/2016 05:42:11:  Epoch[ 1 of 3]-Minibatch[ 211- 220]: CrossEntropyWithSoftmax = 0.70356348 * 250; EvalErrorPrediction = 0.45600000 * 250; time = 0.0100s; samplesPerSecond = 25108.0
07/14/2016 05:42:12:  Epoch[ 1 of 3]-Minibatch[ 221- 230]: CrossEntropyWithSoftmax = 0.69928516 * 250; EvalErrorPrediction = 0.46400000 * 250; time = 0.0096s; samplesPerSecond = 26074.3
07/14/2016 05:42:12:  Epoch[ 1 of 3]-Minibatch[ 231- 240]: CrossEntropyWithSoftmax = 0.72361133 * 250; EvalErrorPrediction = 0.51600000 * 250; time = 0.0097s; samplesPerSecond = 25871.9
07/14/2016 05:42:12:  Epoch[ 1 of 3]-Minibatch[ 241- 250]: CrossEntropyWithSoftmax = 0.69871875 * 250; EvalErrorPrediction = 0.51200000 * 250; time = 0.0097s; samplesPerSecond = 25794.5
07/14/2016 05:42:12:  Epoch[ 1 of 3]-Minibatch[ 251- 260]: CrossEntropyWithSoftmax = 0.69114844 * 250; EvalErrorPrediction = 0.47600000 * 250; time = 0.0098s; samplesPerSecond = 25593.8
07/14/2016 05:42:12:  Epoch[ 1 of 3]-Minibatch[ 261- 270]: CrossEntropyWithSoftmax = 0.68648047 * 250; EvalErrorPrediction = 0.45600000 * 250; time = 0.0097s; samplesPerSecond = 25810.4
07/14/2016 05:42:12:  Epoch[ 1 of 3]-Minibatch[ 271- 280]: CrossEntropyWithSoftmax = 0.69657227 * 250; EvalErrorPrediction = 0.46400000 * 250; time = 0.0096s; samplesPerSecond = 26156.1
07/14/2016 05:42:12:  Epoch[ 1 of 3]-Minibatch[ 281- 290]: CrossEntropyWithSoftmax = 0.71585547 * 250; EvalErrorPrediction = 0.45200000 * 250; time = 0.0096s; samplesPerSecond = 26106.9
07/14/2016 05:42:12:  Epoch[ 1 of 3]-Minibatch[ 291- 300]: CrossEntropyWithSoftmax = 0.69730664 * 250; EvalErrorPrediction = 0.52400000 * 250; time = 0.0098s; samplesPerSecond = 25455.7
07/14/2016 05:42:12:  Epoch[ 1 of 3]-Minibatch[ 301- 310]: CrossEntropyWithSoftmax = 0.70432422 * 250; EvalErrorPrediction = 0.53200000 * 250; time = 0.0102s; samplesPerSecond = 24574.9
07/14/2016 05:42:12:  Epoch[ 1 of 3]-Minibatch[ 311- 320]: CrossEntropyWithSoftmax = 0.69991797 * 250; EvalErrorPrediction = 0.47600000 * 250; time = 0.0099s; samplesPerSecond = 25199.1
07/14/2016 05:42:12:  Epoch[ 1 of 3]-Minibatch[ 321- 330]: CrossEntropyWithSoftmax = 0.68696875 * 250; EvalErrorPrediction = 0.47600000 * 250; time = 0.0098s; samplesPerSecond = 25401.3
07/14/2016 05:42:12:  Epoch[ 1 of 3]-Minibatch[ 331- 340]: CrossEntropyWithSoftmax = 0.67331445 * 250; EvalErrorPrediction = 0.37200000 * 250; time = 0.0098s; samplesPerSecond = 25625.3
07/14/2016 05:42:12:  Epoch[ 1 of 3]-Minibatch[ 341- 350]: CrossEntropyWithSoftmax = 0.65711328 * 250; EvalErrorPrediction = 0.43200000 * 250; time = 0.0100s; samplesPerSecond = 25035.0
07/14/2016 05:42:12:  Epoch[ 1 of 3]-Minibatch[ 351- 360]: CrossEntropyWithSoftmax = 0.64534375 * 250; EvalErrorPrediction = 0.44800000 * 250; time = 0.0096s; samplesPerSecond = 26131.5
07/14/2016 05:42:12:  Epoch[ 1 of 3]-Minibatch[ 361- 370]: CrossEntropyWithSoftmax = 0.61021875 * 250; EvalErrorPrediction = 0.36400000 * 250; time = 0.0101s; samplesPerSecond = 24676.7
07/14/2016 05:42:12:  Epoch[ 1 of 3]-Minibatch[ 371- 380]: CrossEntropyWithSoftmax = 0.54191016 * 250; EvalErrorPrediction = 0.10800000 * 250; time = 0.0098s; samplesPerSecond = 25401.3
07/14/2016 05:42:12:  Epoch[ 1 of 3]-Minibatch[ 381- 390]: CrossEntropyWithSoftmax = 0.45624414 * 250; EvalErrorPrediction = 0.10800000 * 250; time = 0.0098s; samplesPerSecond = 25585.9
07/14/2016 05:42:12:  Epoch[ 1 of 3]-Minibatch[ 391- 400]: CrossEntropyWithSoftmax = 0.37636133 * 250; EvalErrorPrediction = 0.10000000 * 250; time = 0.0117s; samplesPerSecond = 21345.6
07/14/2016 05:42:12: Finished Epoch[ 1 of 3]: [Training] CrossEntropyWithSoftmax = 0.68695698 * 10000; EvalErrorPrediction = 0.45550000 * 10000; totalSamplesSeen = 10000; learningRatePerSample = 0.02; epochTime=0.408185s
07/14/2016 05:42:12: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.266270\Examples\Other\Simple2d_MultiGpu@release_cpu/Models/multigpu.dnn.1'

07/14/2016 05:42:12: Starting Epoch 2: learning rate per sample = 0.008000  effective momentum = 0.900000  momentum as time constant = 237.3 samples
BlockRandomizer::StartEpoch: epoch 1: frames [10000..20000] (first sequence at sample 10000), data subset 0 of 1

07/14/2016 05:42:12: Starting minibatch loop, DataParallelSGD training (MyRank = 0, NumNodes = 1, NumGradientBits = 1).
07/14/2016 05:42:12:  Epoch[ 2 of 3]-Minibatch[   1-  10, 2.50%]: CrossEntropyWithSoftmax = 0.28780420 * 250; EvalErrorPrediction = 0.08000000 * 250; time = 0.0112s; samplesPerSecond = 22373.4
07/14/2016 05:42:12:  Epoch[ 2 of 3]-Minibatch[  11-  20, 5.00%]: CrossEntropyWithSoftmax = 0.28222474 * 250; EvalErrorPrediction = 0.10400000 * 250; time = 0.0125s; samplesPerSecond = 20043.3
07/14/2016 05:42:12:  Epoch[ 2 of 3]-Minibatch[  21-  30, 7.50%]: CrossEntropyWithSoftmax = 0.23589861 * 250; EvalErrorPrediction = 0.08800000 * 250; time = 0.0110s; samplesPerSecond = 22770.7
07/14/2016 05:42:12:  Epoch[ 2 of 3]-Minibatch[  31-  40, 10.00%]: CrossEntropyWithSoftmax = 0.21209478 * 250; EvalErrorPrediction = 0.06800000 * 250; time = 0.0109s; samplesPerSecond = 23039.4
07/14/2016 05:42:12:  Epoch[ 2 of 3]-Minibatch[  41-  50, 12.50%]: CrossEntropyWithSoftmax = 0.20285940 * 250; EvalErrorPrediction = 0.07200000 * 250; time = 0.0111s; samplesPerSecond = 22506.3
07/14/2016 05:42:12:  Epoch[ 2 of 3]-Minibatch[  51-  60, 15.00%]: CrossEntropyWithSoftmax = 0.21301004 * 250; EvalErrorPrediction = 0.09600000 * 250; time = 0.0111s; samplesPerSecond = 22551.0
07/14/2016 05:42:12:  Epoch[ 2 of 3]-Minibatch[  61-  70, 17.50%]: CrossEntropyWithSoftmax = 0.17835587 * 250; EvalErrorPrediction = 0.08800000 * 250; time = 0.0112s; samplesPerSecond = 22391.4
07/14/2016 05:42:12:  Epoch[ 2 of 3]-Minibatch[  71-  80, 20.00%]: CrossEntropyWithSoftmax = 0.18830300 * 250; EvalErrorPrediction = 0.07600000 * 250; time = 0.0111s; samplesPerSecond = 22429.6
07/14/2016 05:42:12:  Epoch[ 2 of 3]-Minibatch[  81-  90, 22.50%]: CrossEntropyWithSoftmax = 0.14198842 * 250; EvalErrorPrediction = 0.04000000 * 250; time = 0.0113s; samplesPerSecond = 22084.8
07/14/2016 05:42:12:  Epoch[ 2 of 3]-Minibatch[  91- 100, 25.00%]: CrossEntropyWithSoftmax = 0.15895242 * 250; EvalErrorPrediction = 0.06000000 * 250; time = 0.0111s; samplesPerSecond = 22421.5
07/14/2016 05:42:12:  Epoch[ 2 of 3]-Minibatch[ 101- 110, 27.50%]: CrossEntropyWithSoftmax = 0.21062995 * 250; EvalErrorPrediction = 0.11200000 * 250; time = 0.0108s; samplesPerSecond = 23071.2
07/14/2016 05:42:12:  Epoch[ 2 of 3]-Minibatch[ 111- 120, 30.00%]: CrossEntropyWithSoftmax = 0.16081642 * 250; EvalErrorPrediction = 0.08000000 * 250; time = 0.0108s; samplesPerSecond = 23092.6
07/14/2016 05:42:12:  Epoch[ 2 of 3]-Minibatch[ 121- 130, 32.50%]: CrossEntropyWithSoftmax = 0.15635579 * 250; EvalErrorPrediction = 0.06400000 * 250; time = 0.0111s; samplesPerSecond = 22453.7
07/14/2016 05:42:12:  Epoch[ 2 of 3]-Minibatch[ 131- 140, 35.00%]: CrossEntropyWithSoftmax = 0.13008536 * 250; EvalErrorPrediction = 0.04800000 * 250; time = 0.0109s; samplesPerSecond = 22837.3
07/14/2016 05:42:12:  Epoch[ 2 of 3]-Minibatch[ 141- 150, 37.50%]: CrossEntropyWithSoftmax = 0.16625014 * 250; EvalErrorPrediction = 0.07600000 * 250; time = 0.0110s; samplesPerSecond = 22675.7
07/14/2016 05:42:12:  Epoch[ 2 of 3]-Minibatch[ 151- 160, 40.00%]: CrossEntropyWithSoftmax = 0.15001853 * 250; EvalErrorPrediction = 0.05600000 * 250; time = 0.0109s; samplesPerSecond = 22839.4
07/14/2016 05:42:12:  Epoch[ 2 of 3]-Minibatch[ 161- 170, 42.50%]: CrossEntropyWithSoftmax = 0.22344152 * 250; EvalErrorPrediction = 0.11200000 * 250; time = 0.0111s; samplesPerSecond = 22510.4
07/14/2016 05:42:12:  Epoch[ 2 of 3]-Minibatch[ 171- 180, 45.00%]: CrossEntropyWithSoftmax = 0.18004985 * 250; EvalErrorPrediction = 0.09600000 * 250; time = 0.0111s; samplesPerSecond = 22463.8
07/14/2016 05:42:12:  Epoch[ 2 of 3]-Minibatch[ 181- 190, 47.50%]: CrossEntropyWithSoftmax = 0.15361313 * 250; EvalErrorPrediction = 0.06800000 * 250; time = 0.0107s; samplesPerSecond = 23366.7
07/14/2016 05:42:12:  Epoch[ 2 of 3]-Minibatch[ 191- 200, 50.00%]: CrossEntropyWithSoftmax = 0.17040634 * 250; EvalErrorPrediction = 0.08400000 * 250; time = 0.0109s; samplesPerSecond = 22843.6
07/14/2016 05:42:12:  Epoch[ 2 of 3]-Minibatch[ 201- 210, 52.50%]: CrossEntropyWithSoftmax = 0.15516930 * 250; EvalErrorPrediction = 0.06400000 * 250; time = 0.0105s; samplesPerSecond = 23734.9
07/14/2016 05:42:12:  Epoch[ 2 of 3]-Minibatch[ 211- 220, 55.00%]: CrossEntropyWithSoftmax = 0.15968730 * 250; EvalErrorPrediction = 0.07600000 * 250; time = 0.0112s; samplesPerSecond = 22253.9
07/14/2016 05:42:12:  Epoch[ 2 of 3]-Minibatch[ 221- 230, 57.50%]: CrossEntropyWithSoftmax = 0.15940399 * 250; EvalErrorPrediction = 0.06400000 * 250; time = 0.0109s; samplesPerSecond = 22862.4
07/14/2016 05:42:12:  Epoch[ 2 of 3]-Minibatch[ 231- 240, 60.00%]: CrossEntropyWithSoftmax = 0.15299913 * 250; EvalErrorPrediction = 0.06800000 * 250; time = 0.0109s; samplesPerSecond = 22858.2
07/14/2016 05:42:12:  Epoch[ 2 of 3]-Minibatch[ 241- 250, 62.50%]: CrossEntropyWithSoftmax = 0.14904051 * 250; EvalErrorPrediction = 0.06800000 * 250; time = 0.0111s; samplesPerSecond = 22614.2
07/14/2016 05:42:12:  Epoch[ 2 of 3]-Minibatch[ 251- 260, 65.00%]: CrossEntropyWithSoftmax = 0.15043569 * 250; EvalErrorPrediction = 0.06400000 * 250; time = 0.0106s; samplesPerSecond = 23678.7
07/14/2016 05:42:12:  Epoch[ 2 of 3]-Minibatch[ 261- 270, 67.50%]: CrossEntropyWithSoftmax = 0.15529896 * 250; EvalErrorPrediction = 0.07200000 * 250; time = 0.0108s; samplesPerSecond = 23124.6
07/14/2016 05:42:12:  Epoch[ 2 of 3]-Minibatch[ 271- 280, 70.00%]: CrossEntropyWithSoftmax = 0.17990958 * 250; EvalErrorPrediction = 0.08800000 * 250; time = 0.0109s; samplesPerSecond = 23013.9
07/14/2016 05:42:12:  Epoch[ 2 of 3]-Minibatch[ 281- 290, 72.50%]: CrossEntropyWithSoftmax = 0.22924388 * 250; EvalErrorPrediction = 0.10400000 * 250; time = 0.0108s; samplesPerSecond = 23120.3
07/14/2016 05:42:12:  Epoch[ 2 of 3]-Minibatch[ 291- 300, 75.00%]: CrossEntropyWithSoftmax = 0.16842890 * 250; EvalErrorPrediction = 0.08400000 * 250; time = 0.0110s; samplesPerSecond = 22812.3
07/14/2016 05:42:12:  Epoch[ 2 of 3]-Minibatch[ 301- 310, 77.50%]: CrossEntropyWithSoftmax = 0.18044743 * 250; EvalErrorPrediction = 0.09200000 * 250; time = 0.0395s; samplesPerSecond = 6334.6
07/14/2016 05:42:12:  Epoch[ 2 of 3]-Minibatch[ 311- 320, 80.00%]: CrossEntropyWithSoftmax = 0.13337512 * 250; EvalErrorPrediction = 0.04800000 * 250; time = 0.0105s; samplesPerSecond = 23914.3
07/14/2016 05:42:12:  Epoch[ 2 of 3]-Minibatch[ 321- 330, 82.50%]: CrossEntropyWithSoftmax = 0.14331413 * 250; EvalErrorPrediction = 0.06800000 * 250; time = 0.0108s; samplesPerSecond = 23054.2
07/14/2016 05:42:12:  Epoch[ 2 of 3]-Minibatch[ 331- 340, 85.00%]: CrossEntropyWithSoftmax = 0.18749336 * 250; EvalErrorPrediction = 0.10000000 * 250; time = 0.0109s; samplesPerSecond = 22833.1
07/14/2016 05:42:12:  Epoch[ 2 of 3]-Minibatch[ 341- 350, 87.50%]: CrossEntropyWithSoftmax = 0.15505745 * 250; EvalErrorPrediction = 0.04400000 * 250; time = 0.0114s; samplesPerSecond = 22024.5
07/14/2016 05:42:12:  Epoch[ 2 of 3]-Minibatch[ 351- 360, 90.00%]: CrossEntropyWithSoftmax = 0.19618855 * 250; EvalErrorPrediction = 0.08400000 * 250; time = 0.0111s; samplesPerSecond = 22561.1
07/14/2016 05:42:12:  Epoch[ 2 of 3]-Minibatch[ 361- 370, 92.50%]: CrossEntropyWithSoftmax = 0.17304974 * 250; EvalErrorPrediction = 0.08800000 * 250; time = 0.0108s; samplesPerSecond = 23245.0
07/14/2016 05:42:12:  Epoch[ 2 of 3]-Minibatch[ 371- 380, 95.00%]: CrossEntropyWithSoftmax = 0.15198200 * 250; EvalErrorPrediction = 0.06000000 * 250; time = 0.0110s; samplesPerSecond = 22723.1
07/14/2016 05:42:12:  Epoch[ 2 of 3]-Minibatch[ 381- 390, 97.50%]: CrossEntropyWithSoftmax = 0.12101704 * 250; EvalErrorPrediction = 0.04800000 * 250; time = 0.0108s; samplesPerSecond = 23135.3
07/14/2016 05:42:12:  Epoch[ 2 of 3]-Minibatch[ 391- 400, 100.00%]: CrossEntropyWithSoftmax = 0.15278116 * 250; EvalErrorPrediction = 0.07200000 * 250; time = 0.0126s; samplesPerSecond = 19764.4
07/14/2016 05:42:12: Finished Epoch[ 2 of 3]: [Training] CrossEntropyWithSoftmax = 0.17643704 * 10000; EvalErrorPrediction = 0.07560000 * 10000; totalSamplesSeen = 20000; learningRatePerSample = 0.0080000004; epochTime=0.472213s
07/14/2016 05:42:12: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.266270\Examples\Other\Simple2d_MultiGpu@release_cpu/Models/multigpu.dnn.2'

07/14/2016 05:42:12: Starting Epoch 3: learning rate per sample = 0.008000  effective momentum = 0.900000  momentum as time constant = 237.3 samples
BlockRandomizer::StartEpoch: epoch 2: frames [20000..30000] (first sequence at sample 20000), data subset 0 of 1

07/14/2016 05:42:12: Starting minibatch loop, DataParallelSGD training (MyRank = 0, NumNodes = 1, NumGradientBits = 1).
07/14/2016 05:42:12:  Epoch[ 3 of 3]-Minibatch[   1-  10, 2.50%]: CrossEntropyWithSoftmax = 0.10623175 * 250; EvalErrorPrediction = 0.05200000 * 250; time = 0.0109s; samplesPerSecond = 22954.7
07/14/2016 05:42:12:  Epoch[ 3 of 3]-Minibatch[  11-  20, 5.00%]: CrossEntropyWithSoftmax = 0.17519744 * 250; EvalErrorPrediction = 0.07600000 * 250; time = 0.0126s; samplesPerSecond = 19891.8
07/14/2016 05:42:12:  Epoch[ 3 of 3]-Minibatch[  21-  30, 7.50%]: CrossEntropyWithSoftmax = 0.14133780 * 250; EvalErrorPrediction = 0.06800000 * 250; time = 0.0219s; samplesPerSecond = 11401.5
07/14/2016 05:42:12:  Epoch[ 3 of 3]-Minibatch[  31-  40, 10.00%]: CrossEntropyWithSoftmax = 0.16278478 * 250; EvalErrorPrediction = 0.07200000 * 250; time = 0.0115s; samplesPerSecond = 21693.9
07/14/2016 05:42:12:  Epoch[ 3 of 3]-Minibatch[  41-  50, 12.50%]: CrossEntropyWithSoftmax = 0.11783442 * 250; EvalErrorPrediction = 0.04000000 * 250; time = 0.0108s; samplesPerSecond = 23173.9
07/14/2016 05:42:12:  Epoch[ 3 of 3]-Minibatch[  51-  60, 15.00%]: CrossEntropyWithSoftmax = 0.16342210 * 250; EvalErrorPrediction = 0.08800000 * 250; time = 0.0109s; samplesPerSecond = 23039.4
07/14/2016 05:42:12:  Epoch[ 3 of 3]-Minibatch[  61-  70, 17.50%]: CrossEntropyWithSoftmax = 0.16272890 * 250; EvalErrorPrediction = 0.08000000 * 250; time = 0.0108s; samplesPerSecond = 23148.1
07/14/2016 05:42:12:  Epoch[ 3 of 3]-Minibatch[  71-  80, 20.00%]: CrossEntropyWithSoftmax = 0.19399986 * 250; EvalErrorPrediction = 0.08400000 * 250; time = 0.0112s; samplesPerSecond = 22411.5
07/14/2016 05:42:12:  Epoch[ 3 of 3]-Minibatch[  81-  90, 22.50%]: CrossEntropyWithSoftmax = 0.20187937 * 250; EvalErrorPrediction = 0.09200000 * 250; time = 0.0110s; samplesPerSecond = 22797.7
07/14/2016 05:42:12:  Epoch[ 3 of 3]-Minibatch[  91- 100, 25.00%]: CrossEntropyWithSoftmax = 0.13674674 * 250; EvalErrorPrediction = 0.05200000 * 250; time = 0.0108s; samplesPerSecond = 23242.8
07/14/2016 05:42:12:  Epoch[ 3 of 3]-Minibatch[ 101- 110, 27.50%]: CrossEntropyWithSoftmax = 0.20070198 * 250; EvalErrorPrediction = 0.10800000 * 250; time = 0.0113s; samplesPerSecond = 22188.7
07/14/2016 05:42:12:  Epoch[ 3 of 3]-Minibatch[ 111- 120, 30.00%]: CrossEntropyWithSoftmax = 0.17728025 * 250; EvalErrorPrediction = 0.08400000 * 250; time = 0.0107s; samplesPerSecond = 23382.0
07/14/2016 05:42:12:  Epoch[ 3 of 3]-Minibatch[ 121- 130, 32.50%]: CrossEntropyWithSoftmax = 0.15905517 * 250; EvalErrorPrediction = 0.06000000 * 250; time = 0.0107s; samplesPerSecond = 23406.0
07/14/2016 05:42:12:  Epoch[ 3 of 3]-Minibatch[ 131- 140, 35.00%]: CrossEntropyWithSoftmax = 0.16282062 * 250; EvalErrorPrediction = 0.08000000 * 250; time = 0.0107s; samplesPerSecond = 23373.2
07/14/2016 05:42:12:  Epoch[ 3 of 3]-Minibatch[ 141- 150, 37.50%]: CrossEntropyWithSoftmax = 0.19835027 * 250; EvalErrorPrediction = 0.10400000 * 250; time = 0.0113s; samplesPerSecond = 22163.1
07/14/2016 05:42:12:  Epoch[ 3 of 3]-Minibatch[ 151- 160, 40.00%]: CrossEntropyWithSoftmax = 0.10217722 * 250; EvalErrorPrediction = 0.04000000 * 250; time = 0.0107s; samplesPerSecond = 23357.9
07/14/2016 05:42:12:  Epoch[ 3 of 3]-Minibatch[ 161- 170, 42.50%]: CrossEntropyWithSoftmax = 0.17011517 * 250; EvalErrorPrediction = 0.08000000 * 250; time = 0.0107s; samplesPerSecond = 23301.3
07/14/2016 05:42:12:  Epoch[ 3 of 3]-Minibatch[ 171- 180, 45.00%]: CrossEntropyWithSoftmax = 0.16599307 * 250; EvalErrorPrediction = 0.08400000 * 250; time = 0.0106s; samplesPerSecond = 23527.2
07/14/2016 05:42:12:  Epoch[ 3 of 3]-Minibatch[ 181- 190, 47.50%]: CrossEntropyWithSoftmax = 0.12648969 * 250; EvalErrorPrediction = 0.05600000 * 250; time = 0.0104s; samplesPerSecond = 24038.5
07/14/2016 05:42:12:  Epoch[ 3 of 3]-Minibatch[ 191- 200, 50.00%]: CrossEntropyWithSoftmax = 0.11920859 * 250; EvalErrorPrediction = 0.06000000 * 250; time = 0.0108s; samplesPerSecond = 23131.0
07/14/2016 05:42:12:  Epoch[ 3 of 3]-Minibatch[ 201- 210, 52.50%]: CrossEntropyWithSoftmax = 0.12883783 * 250; EvalErrorPrediction = 0.06400000 * 250; time = 0.0112s; samplesPerSecond = 22325.4
07/14/2016 05:42:12:  Epoch[ 3 of 3]-Minibatch[ 211- 220, 55.00%]: CrossEntropyWithSoftmax = 0.18224450 * 250; EvalErrorPrediction = 0.09200000 * 250; time = 0.0111s; samplesPerSecond = 22510.4
07/14/2016 05:42:12:  Epoch[ 3 of 3]-Minibatch[ 221- 230, 57.50%]: CrossEntropyWithSoftmax = 0.13443159 * 250; EvalErrorPrediction = 0.05200000 * 250; time = 0.0106s; samplesPerSecond = 23527.2
07/14/2016 05:42:12:  Epoch[ 3 of 3]-Minibatch[ 231- 240, 60.00%]: CrossEntropyWithSoftmax = 0.19723675 * 250; EvalErrorPrediction = 0.10800000 * 250; time = 0.0110s; samplesPerSecond = 22644.9
07/14/2016 05:42:12:  Epoch[ 3 of 3]-Minibatch[ 241- 250, 62.50%]: CrossEntropyWithSoftmax = 0.15580631 * 250; EvalErrorPrediction = 0.07600000 * 250; time = 0.0108s; samplesPerSecond = 23240.7
07/14/2016 05:42:12:  Epoch[ 3 of 3]-Minibatch[ 251- 260, 65.00%]: CrossEntropyWithSoftmax = 0.11855243 * 250; EvalErrorPrediction = 0.04800000 * 250; time = 0.0109s; samplesPerSecond = 22893.8
07/14/2016 05:42:12:  Epoch[ 3 of 3]-Minibatch[ 261- 270, 67.50%]: CrossEntropyWithSoftmax = 0.13705889 * 250; EvalErrorPrediction = 0.06000000 * 250; time = 0.0109s; samplesPerSecond = 22965.3
07/14/2016 05:42:13:  Epoch[ 3 of 3]-Minibatch[ 271- 280, 70.00%]: CrossEntropyWithSoftmax = 0.20006069 * 250; EvalErrorPrediction = 0.09200000 * 250; time = 0.0111s; samplesPerSecond = 22504.3
07/14/2016 05:42:13:  Epoch[ 3 of 3]-Minibatch[ 281- 290, 72.50%]: CrossEntropyWithSoftmax = 0.19074601 * 250; EvalErrorPrediction = 0.11200000 * 250; time = 0.0107s; samplesPerSecond = 23377.6
07/14/2016 05:42:13:  Epoch[ 3 of 3]-Minibatch[ 291- 300, 75.00%]: CrossEntropyWithSoftmax = 0.16506938 * 250; EvalErrorPrediction = 0.07200000 * 250; time = 0.0109s; samplesPerSecond = 22986.4
07/14/2016 05:42:13:  Epoch[ 3 of 3]-Minibatch[ 301- 310, 77.50%]: CrossEntropyWithSoftmax = 0.12233066 * 250; EvalErrorPrediction = 0.05600000 * 250; time = 0.0107s; samplesPerSecond = 23401.7
07/14/2016 05:42:13:  Epoch[ 3 of 3]-Minibatch[ 311- 320, 80.00%]: CrossEntropyWithSoftmax = 0.16345747 * 250; EvalErrorPrediction = 0.08800000 * 250; time = 0.0113s; samplesPerSecond = 22210.4
07/14/2016 05:42:13:  Epoch[ 3 of 3]-Minibatch[ 321- 330, 82.50%]: CrossEntropyWithSoftmax = 0.15876680 * 250; EvalErrorPrediction = 0.06400000 * 250; time = 0.0108s; samplesPerSecond = 23054.2
07/14/2016 05:42:13:  Epoch[ 3 of 3]-Minibatch[ 331- 340, 85.00%]: CrossEntropyWithSoftmax = 0.12248987 * 250; EvalErrorPrediction = 0.05200000 * 250; time = 0.0109s; samplesPerSecond = 22944.2
07/14/2016 05:42:13:  Epoch[ 3 of 3]-Minibatch[ 341- 350, 87.50%]: CrossEntropyWithSoftmax = 0.13456085 * 250; EvalErrorPrediction = 0.06400000 * 250; time = 0.0108s; samplesPerSecond = 23141.7
07/14/2016 05:42:13:  Epoch[ 3 of 3]-Minibatch[ 351- 360, 90.00%]: CrossEntropyWithSoftmax = 0.20975374 * 250; EvalErrorPrediction = 0.11600000 * 250; time = 0.0110s; samplesPerSecond = 22777.0
07/14/2016 05:42:13:  Epoch[ 3 of 3]-Minibatch[ 361- 370, 92.50%]: CrossEntropyWithSoftmax = 0.16518925 * 250; EvalErrorPrediction = 0.07600000 * 250; time = 0.0104s; samplesPerSecond = 23990.0
07/14/2016 05:42:13:  Epoch[ 3 of 3]-Minibatch[ 371- 380, 95.00%]: CrossEntropyWithSoftmax = 0.14970771 * 250; EvalErrorPrediction = 0.06400000 * 250; time = 0.0111s; samplesPerSecond = 22612.2
07/14/2016 05:42:13:  Epoch[ 3 of 3]-Minibatch[ 381- 390, 97.50%]: CrossEntropyWithSoftmax = 0.16454116 * 250; EvalErrorPrediction = 0.07600000 * 250; time = 0.0109s; samplesPerSecond = 22898.0
07/14/2016 05:42:13:  Epoch[ 3 of 3]-Minibatch[ 391- 400, 100.00%]: CrossEntropyWithSoftmax = 0.16971783 * 250; EvalErrorPrediction = 0.08000000 * 250; time = 0.0122s; samplesPerSecond = 20453.2
07/14/2016 05:42:13: Finished Epoch[ 3 of 3]: [Training] CrossEntropyWithSoftmax = 0.15787287 * 10000; EvalErrorPrediction = 0.07430000 * 10000; totalSamplesSeen = 30000; learningRatePerSample = 0.0080000004; epochTime=0.45449s
07/14/2016 05:42:13: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714054158.266270\Examples\Other\Simple2d_MultiGpu@release_cpu/Models/multigpu.dnn'
07/14/2016 05:42:13: CNTKCommandTrainEnd: Multigpu_Demo_Train

07/14/2016 05:42:13: Action "train" complete.


07/14/2016 05:42:13: ##############################################################################
07/14/2016 05:42:13: #                                                                            #
07/14/2016 05:42:13: # Action "test"                                                              #
07/14/2016 05:42:13: #                                                                            #
07/14/2016 05:42:13: ##############################################################################


Post-processing network...

7 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	EvalErrorPrediction = ErrorPrediction()
	InvStdOfFeatures = InvStdDev()
	MeanOfFeatures = Mean()
	PosteriorProb = Softmax()
	Prior = Mean()
	ScaledLogLikelihood = Minus()

Validating network. 25 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [2 x *1]
Validating --> W2 = LearnableParameter() :  -> [2 x 50]
Validating --> W1 = LearnableParameter() :  -> [50 x 50]
Validating --> W0 = LearnableParameter() :  -> [50 x 2]
Validating --> features = InputValue() :  -> [2 x *1]
Validating --> MeanOfFeatures = Mean (features) : [2 x *1] -> [2]
Validating --> InvStdOfFeatures = InvStdDev (features) : [2 x *1] -> [2]
Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [2 x *1], [2], [2] -> [2 x *1]
Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [50 x 2], [2 x *1] -> [50 x *1]
Validating --> B0 = LearnableParameter() :  -> [50 x 1]
Validating --> W0*features+B0 = Plus (W0*features, B0) : [50 x *1], [50 x 1] -> [50 x 1 x *1]
Validating --> H1 = Sigmoid (W0*features+B0) : [50 x 1 x *1] -> [50 x 1 x *1]
Validating --> W1*H1 = Times (W1, H1) : [50 x 50], [50 x 1 x *1] -> [50 x 1 x *1]
Validating --> B1 = LearnableParameter() :  -> [50 x 1]
Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [50 x 1 x *1], [50 x 1] -> [50 x 1 x *1]
Validating --> H2 = Sigmoid (W1*H1+B1) : [50 x 1 x *1] -> [50 x 1 x *1]
Validating --> W2*H1 = Times (W2, H2) : [2 x 50], [50 x 1 x *1] -> [2 x 1 x *1]
Validating --> B2 = LearnableParameter() :  -> [2 x 1]
Validating --> HLast = Plus (W2*H1, B2) : [2 x 1 x *1], [2 x 1] -> [2 x 1 x *1]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [2 x *1], [2 x 1 x *1] -> [1]
Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [2 x *1], [2 x 1 x *1] -> [1]
Validating --> PosteriorProb = Softmax (HLast) : [2 x 1 x *1] -> [2 x 1 x *1]
Validating --> Prior = Mean (labels) : [2 x *1] -> [2]
Validating --> LogOfPrior = Log (Prior) : [2] -> [2]
Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [2 x 1 x *1], [2] -> [2 x 1 x *1]

Validating network. 17 nodes to process in pass 2.


Validating network, final pass.



12 out of 25 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

evalNodeNames are not specified, using all the default evalnodes and training criterion nodes.


Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

0000000000000000: {[B0 Gradient[50 x 1]] [B1 Gradient[50 x 1]] [B2 Gradient[2 x 1]] [CrossEntropyWithSoftmax Gradient[1]] [EvalErrorPrediction Gradient[1]] [H1 Gradient[50 x 1 x *1]] [H2 Gradient[50 x 1 x *1]] [HLast Gradient[2 x 1 x *1]] [InvStdOfFeatures Gradient[2]] [LogOfPrior Gradient[2]] [MVNormalizedFeatures Gradient[2 x *1]] [MeanOfFeatures Gradient[2]] [PosteriorProb Gradient[2 x 1 x *1]] [PosteriorProb Value[2 x 1 x *1]] [Prior Gradient[2]] [ScaledLogLikelihood Gradient[2 x 1 x *1]] [ScaledLogLikelihood Value[2 x 1 x *1]] [W0 Gradient[50 x 2]] [W0*features Gradient[50 x *1]] [W0*features+B0 Gradient[50 x 1 x *1]] [W1 Gradient[50 x 50]] [W1*H1 Gradient[50 x 1 x *1]] [W1*H1+B1 Gradient[50 x 1 x *1]] [W2 Gradient[2 x 50]] [W2*H1 Gradient[2 x 1 x *1]] [features Gradient[2 x *1]] [labels Gradient[2 x *1]] }
00000024A9B677E0: {[W0*features+B0 Value[50 x 1 x *1]] }
00000024A9B67B00: {[W2*H1 Value[2 x 1 x *1]] }
00000024A9B67C40: {[H2 Value[50 x 1 x *1]] }
00000024A9B67CE0: {[LogOfPrior Value[2]] }
00000024A9B67EC0: {[CrossEntropyWithSoftmax Value[1]] }
00000024A9B67F60: {[MVNormalizedFeatures Value[2 x *1]] }
00000024A9B680A0: {[EvalErrorPrediction Value[1]] }
00000024A9B68140: {[W1*H1 Value[50 x 1 x *1]] }
00000024A9B681E0: {[W1*H1+B1 Value[50 x 1 x *1]] }
00000024A9B68320: {[W0*features Value[50 x *1]] }
00000024A9B683C0: {[H1 Value[50 x 1 x *1]] }
00000024A9B68460: {[HLast Value[2 x 1 x *1]] }
00000024C0CD7520: {[Prior Value[2]] }
00000024C0CD7660: {[W2 Value[2 x 50]] }
00000024C0CD77A0: {[InvStdOfFeatures Value[2]] }
00000024C0CD7980: {[labels Value[2 x *1]] }
00000024C0CD7B60: {[B1 Value[50 x 1]] }
00000024C0CD7FC0: {[MeanOfFeatures Value[2]] }
00000024C0CD82E0: {[features Value[2 x *1]] }
00000024C0CD87E0: {[B2 Value[2 x 1]] }
00000024C0CD8B00: {[B0 Value[50 x 1]] }
00000024C0CD8BA0: {[W0 Value[50 x 2]] }
00000024C0CD91E0: {[W1 Value[50 x 50]] }

BlockRandomizer::StartEpoch: epoch 0: frames [0..603] (first sequence at sample 0), data subset 0 of 1
Actual gradient aggregation time: 4.2e-005
07/14/2016 05:42:13: Minibatch[1-1]: EvalErrorPrediction = 0.05306799 * 603; CrossEntropyWithSoftmax = 0.11779054 * 603
07/14/2016 05:42:13: Final Results: Minibatch[1-1]: EvalErrorPrediction = 0.05306799 * 603; CrossEntropyWithSoftmax = 0.11779054 * 603; perplexity = 1.12500844

07/14/2016 05:42:13: Action "test" complete.

07/14/2016 05:42:13: __COMPLETED__
~MPIWrapper