1 === Running /home/tim/git/cntk_dev/build/debug/bin/cntk configFile=/home/tim/git/cntk_dev/Tests/En    dToEndTests/Examples/Image/MNIST/01_OneHidden_MemorySwapping/../../../../../../Examples/Image/MNIS    T/Config/01_OneHidden.cntk currentDirectory=/home/tim/git/cntk_dev/Examples/Image/MNIST/Data RunDi    r=/tmp/cntk-test-20160720151705.379876/Examples/Image/MNIST_01_OneHidden_MemorySwapping@debug_gpu     DataDir=/home/tim/git/cntk_dev/Examples/Image/MNIST/Data ConfigDir=/home/tim/git/cntk_dev/Tests/En    dToEndTests/Examples/Image/MNIST/01_OneHidden_MemorySwapping/../../../../../../Examples/Image/MNIS    T/Config OutputDir=/tmp/cntk-test-20160720151705.379876/Examples/Image/MNIST_01_OneHidden_MemorySw    apping@debug_gpu DeviceId=0 timestamping=true train=[SGD=[maxEpochs=3]] imageLayout="cudnn"
07/20/2016 15:15:37: -------------------------------------------------------------------
07/20/2016 15:15:37: Build info: 

07/20/2016 15:15:37: 		Built time: Jul 20 2016 14:33:01
07/20/2016 15:15:37: 		Last modified date: Fri Jul 15 16:34:02 2016
07/20/2016 15:15:37: 		Build type: debug
07/20/2016 15:15:37: 		Build target: GPU
07/20/2016 15:15:37: 		With 1bit-SGD: yes
07/20/2016 15:15:37: 		Math lib: acml
07/20/2016 15:15:37: 		CUDA_PATH: /usr/local/cuda-7.5
07/20/2016 15:15:37: 		CUB_PATH: /usr/local/cub-1.4.1
07/20/2016 15:15:37: 		CUDNN_PATH: /usr/local/cudnn-4.0
07/20/2016 15:15:37: 		Build Branch: t-tidett/memoryswapping
07/20/2016 15:15:37: 		Build SHA1: e6043b78c343c3065c6c86847d433df91f2dcfb2 (modified)
07/20/2016 15:15:37: 		Built by tim on tim
07/20/2016 15:15:37: 		Build Path: /home/tim/git/cntk_dev
07/20/2016 15:15:37: -------------------------------------------------------------------

07/20/2016 15:15:37: Running on localhost at 2016/07/20 15:15:37
07/20/2016 15:15:37: Command line: 
/home/tim/git/cntk_dev/build/debug/bin/cntk  configFile=/home/tim/git/cntk_dev/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden_MemorySwapping/../../../../../../Examples/Image/MNIST/Config/01_OneHidden.cntk  currentDirectory=/home/tim/git/cntk_dev/Examples/Image/MNIST/Data  RunDir=/tmp/cntk-test-20160720150347.56676/Examples/Image/MNIST_01_OneHidden_MemorySwapping@debug_gpu  DataDir=/home/tim/git/cntk_dev/Examples/Image/MNIST/Data  ConfigDir=/home/tim/git/cntk_dev/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden_MemorySwapping/../../../../../../Examples/Image/MNIST/Config  OutputDir=/home/tim/Image/MNIST_01_OneHidden_MemorySwapping@debug_gpu  DeviceId=0  timestamping=true  train=[SGD=[maxEpochs=3]]  imageLayout=cudnn



07/20/2016 15:15:37: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
07/20/2016 15:15:37: rootDir = ".."
configDir = "$rootDir$/Config"
dataDir   = "$rootDir$/Data"
outputDir = "$rootDir$/Output"
modelDir  = "$outputDir$/Models"
deviceId = 0
command = train:test
precision = "float"
modelPath = "$modelDir$/01_OneHidden"
useMemorySwapping = true
stderr="$outputDir$/out.txt"
traceLevel = 1
numMBsToShowResult = 500
train = [
    action = "train"
    BrainScriptNetworkBuilder_disabled = [
        include "Shared.bs"
featDim = 28 * 28                           
labelDim = 10                               
        features = Input (featDim)
        featScaled = Constant (1.0 / 256.0) .* features
        labels = Input (labelDim)
        hiddenDim = 200
        h1 = DNNSigmoidLayer (featDim,  hiddenDim, featScaled, 1)
        z  = DNNLayer        (hiddenDim, labelDim, h1,         1)
        ce   = CrossEntropyWithSoftmax (labels, z)
        errs = ErrorPrediction         (labels, z)
        top5Errs = ErrorPrediction (labels, z, topN=5)
        featureNodes    = (features)
        labelNodes      = (labels)
        criterionNodes  = (ce)
        evaluationNodes = (errs)
        outputNodes     = (z)
    ]
    NDLNetworkBuilder = [
        imageLayout = "cudnn"
        initOnCPUOnly = true
        ndlMacros = "$configDir$/Macros.ndl"
        networkDescription = "$ConfigDir$/01_OneHidden.ndl"
    ]
    SGD = [
        epochSize = 60000
        minibatchSize = 32
        learningRatesPerSample = 0.003125
        momentumAsTimeConstant = 0
        maxEpochs = 30
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "$DataDir$/Train-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]   
]
test = [
    action = "test"
minibatchSize = 1024    
    evalNodeNames = ce:errs:top5Errs
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "$DataDir$/Test-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]
]
currentDirectory=/home/tim/git/cntk_dev/Examples/Image/MNIST/Data
RunDir=/tmp/cntk-test-20160720150347.56676/Examples/Image/MNIST_01_OneHidden_MemorySwapping@debug_gpu
DataDir=/home/tim/git/cntk_dev/Examples/Image/MNIST/Data
ConfigDir=/home/tim/git/cntk_dev/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden_MemorySwapping/../../../../../../Examples/Image/MNIST/Config
OutputDir=/home/tim/Image/MNIST_01_OneHidden_MemorySwapping@debug_gpu
DeviceId=0
timestamping=true
train=[SGD=[maxEpochs=3]]
imageLayout=cudnn

07/20/2016 15:15:37: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<

07/20/2016 15:15:37: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
07/20/2016 15:15:37: rootDir = ".."
configDir = "../Config"
dataDir   = "../Data"
outputDir = "../Output"
modelDir  = "/home/tim/Image/MNIST_01_OneHidden_MemorySwapping@debug_gpu/Models"
deviceId = 0
command = train:test
precision = "float"
modelPath = "/home/tim/Image/MNIST_01_OneHidden_MemorySwapping@debug_gpu/Models/01_OneHidden"
useMemorySwapping = true
stderr="/home/tim/Image/MNIST_01_OneHidden_MemorySwapping@debug_gpu/out.txt"
traceLevel = 1
numMBsToShowResult = 500
train = [
    action = "train"
    BrainScriptNetworkBuilder_disabled = [
        include "Shared.bs"
featDim = 28 * 28                           
labelDim = 10                               
        features = Input (featDim)
        featScaled = Constant (1.0 / 256.0) .* features
        labels = Input (labelDim)
        hiddenDim = 200
        h1 = DNNSigmoidLayer (featDim,  hiddenDim, featScaled, 1)
        z  = DNNLayer        (hiddenDim, labelDim, h1,         1)
        ce   = CrossEntropyWithSoftmax (labels, z)
        errs = ErrorPrediction         (labels, z)
        top5Errs = ErrorPrediction (labels, z, topN=5)
        featureNodes    = (features)
        labelNodes      = (labels)
        criterionNodes  = (ce)
        evaluationNodes = (errs)
        outputNodes     = (z)
    ]
    NDLNetworkBuilder = [
        imageLayout = "cudnn"
        initOnCPUOnly = true
        ndlMacros = "/home/tim/git/cntk_dev/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden_MemorySwapping/../../../../../../Examples/Image/MNIST/Config/Macros.ndl"
        networkDescription = "/home/tim/git/cntk_dev/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden_MemorySwapping/../../../../../../Examples/Image/MNIST/Config/01_OneHidden.ndl"
    ]
    SGD = [
        epochSize = 60000
        minibatchSize = 32
        learningRatesPerSample = 0.003125
        momentumAsTimeConstant = 0
        maxEpochs = 30
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "/home/tim/git/cntk_dev/Examples/Image/MNIST/Data/Train-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]   
]
test = [
    action = "test"
minibatchSize = 1024    
    evalNodeNames = ce:errs:top5Errs
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "/home/tim/git/cntk_dev/Examples/Image/MNIST/Data/Test-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]
]
currentDirectory=/home/tim/git/cntk_dev/Examples/Image/MNIST/Data
RunDir=/tmp/cntk-test-20160720150347.56676/Examples/Image/MNIST_01_OneHidden_MemorySwapping@debug_gpu
DataDir=/home/tim/git/cntk_dev/Examples/Image/MNIST/Data
ConfigDir=/home/tim/git/cntk_dev/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden_MemorySwapping/../../../../../../Examples/Image/MNIST/Config
OutputDir=/home/tim/Image/MNIST_01_OneHidden_MemorySwapping@debug_gpu
DeviceId=0
timestamping=true
train=[SGD=[maxEpochs=3]]
imageLayout=cudnn

07/20/2016 15:15:37: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<

07/20/2016 15:15:37: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
configparameters: 01_OneHidden.cntk:command=train:test
configparameters: 01_OneHidden.cntk:configDir=/home/tim/git/cntk_dev/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden_MemorySwapping/../../../../../../Examples/Image/MNIST/Config
configparameters: 01_OneHidden.cntk:currentDirectory=/home/tim/git/cntk_dev/Examples/Image/MNIST/Data
configparameters: 01_OneHidden.cntk:dataDir=/home/tim/git/cntk_dev/Examples/Image/MNIST/Data
configparameters: 01_OneHidden.cntk:deviceId=0
configparameters: 01_OneHidden.cntk:imageLayout=cudnn
configparameters: 01_OneHidden.cntk:modelDir=/home/tim/Image/MNIST_01_OneHidden_MemorySwapping@debug_gpu/Models
configparameters: 01_OneHidden.cntk:modelPath=/home/tim/Image/MNIST_01_OneHidden_MemorySwapping@debug_gpu/Models/01_OneHidden
configparameters: 01_OneHidden.cntk:numMBsToShowResult=500
configparameters: 01_OneHidden.cntk:outputDir=/home/tim/Image/MNIST_01_OneHidden_MemorySwapping@debug_gpu
configparameters: 01_OneHidden.cntk:precision=float
configparameters: 01_OneHidden.cntk:rootDir=..
configparameters: 01_OneHidden.cntk:RunDir=/tmp/cntk-test-20160720150347.56676/Examples/Image/MNIST_01_OneHidden_MemorySwapping@debug_gpu
configparameters: 01_OneHidden.cntk:stderr=/home/tim/Image/MNIST_01_OneHidden_MemorySwapping@debug_gpu/out.txt
configparameters: 01_OneHidden.cntk:test=[
    action = "test"
minibatchSize = 1024    
    evalNodeNames = ce:errs:top5Errs
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "/home/tim/git/cntk_dev/Examples/Image/MNIST/Data/Test-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]
]

configparameters: 01_OneHidden.cntk:timestamping=true
configparameters: 01_OneHidden.cntk:traceLevel=1
configparameters: 01_OneHidden.cntk:train=[
    action = "train"
    BrainScriptNetworkBuilder_disabled = [
        include "Shared.bs"
featDim = 28 * 28                           
labelDim = 10                               
        features = Input (featDim)
        featScaled = Constant (1.0 / 256.0) .* features
        labels = Input (labelDim)
        hiddenDim = 200
        h1 = DNNSigmoidLayer (featDim,  hiddenDim, featScaled, 1)
        z  = DNNLayer        (hiddenDim, labelDim, h1,         1)
        ce   = CrossEntropyWithSoftmax (labels, z)
        errs = ErrorPrediction         (labels, z)
        top5Errs = ErrorPrediction (labels, z, topN=5)
        featureNodes    = (features)
        labelNodes      = (labels)
        criterionNodes  = (ce)
        evaluationNodes = (errs)
        outputNodes     = (z)
    ]
    NDLNetworkBuilder = [
        imageLayout = "cudnn"
        initOnCPUOnly = true
        ndlMacros = "/home/tim/git/cntk_dev/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden_MemorySwapping/../../../../../../Examples/Image/MNIST/Config/Macros.ndl"
        networkDescription = "/home/tim/git/cntk_dev/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden_MemorySwapping/../../../../../../Examples/Image/MNIST/Config/01_OneHidden.ndl"
    ]
    SGD = [
        epochSize = 60000
        minibatchSize = 32
        learningRatesPerSample = 0.003125
        momentumAsTimeConstant = 0
        maxEpochs = 30
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "/home/tim/git/cntk_dev/Examples/Image/MNIST/Data/Train-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]   
] [SGD=[maxEpochs=3]]

configparameters: 01_OneHidden.cntk:useMemorySwapping=true
07/20/2016 15:15:37: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
07/20/2016 15:15:37: Commands: train test
07/20/2016 15:15:37: Precision = "float"
07/20/2016 15:15:37: CNTKModelPath: /home/tim/Image/MNIST_01_OneHidden_MemorySwapping@debug_gpu/Models/01_OneHidden
07/20/2016 15:15:37: CNTKCommandTrainInfo: train : 3
07/20/2016 15:15:37: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 3

07/20/2016 15:15:37: ##############################################################################
07/20/2016 15:15:37: #                                                                            #
07/20/2016 15:15:37: # Action "train"                                                             #
07/20/2016 15:15:37: #                                                                            #
07/20/2016 15:15:37: ##############################################################################

07/20/2016 15:15:37: CNTKCommandTrainBegin: train
NDLBuilder Using GPU 0

07/20/2016 15:15:38: Creating virgin network.

Post-processing network...

4 roots:
	ce = CrossEntropyWithSoftmax()
	errs = ErrorPrediction()
	ol.z = Plus()
	top5Errs = ErrorPrediction()

Validating network. 17 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [10 x *]
Validating --> ol.W = LearnableParameter() :  -> [10 x 200]
Validating --> h1.W = LearnableParameter() :  -> [200 x 784]
Validating --> featScale = LearnableParameter() :  -> [1 x 1]
Validating --> features = InputValue() :  -> [784 x *]
Validating --> featScaled = ElementTimes (featScale, features) : [1 x 1], [784 x *] -> [784 x 1 x *]
Validating --> h1.t = Times (h1.W, featScaled) : [200 x 784], [784 x 1 x *] -> [200 x 1 x *]
Validating --> h1.b = LearnableParameter() :  -> [200 x 1]
Validating --> h1.z = Plus (h1.t, h1.b) : [200 x 1 x *], [200 x 1] -> [200 x 1 x *]
Validating --> h1.y = Sigmoid (h1.z) : [200 x 1 x *] -> [200 x 1 x *]
Validating --> ol.t = Times (ol.W, h1.y) : [10 x 200], [200 x 1 x *] -> [10 x 1 x *]
Validating --> ol.b = LearnableParameter() :  -> [10 x 1]
Validating --> ol.z = Plus (ol.t, ol.b) : [10 x 1 x *], [10 x 1] -> [10 x 1 x *]
Validating --> ce = CrossEntropyWithSoftmax (labels, ol.z) : [10 x *], [10 x 1 x *] -> [1]
Validating --> errs = ErrorPrediction (labels, ol.z) : [10 x *], [10 x 1 x *] -> [1]
Validating --> unnamed89 = LearnableParameter() :  -> [1 x 1]
Validating --> top5Errs = ErrorPrediction (labels, ol.z, unnamed89) : [10 x *], [10 x 1 x *], [1 x 1] -> [1]

Validating network. 9 nodes to process in pass 2.


Validating network, final pass.



9 out of 17 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

07/20/2016 15:15:38: Created model with 17 nodes on GPU 0.

07/20/2016 15:15:38: Training criterion node(s):
07/20/2016 15:15:38: 	ce = CrossEntropyWithSoftmax

07/20/2016 15:15:38: Evaluation criterion node(s):

07/20/2016 15:15:38: 	top5Errs = ErrorPrediction
07/20/2016 15:15:38: 	errs = ErrorPrediction


Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

(nil): {[errs Gradient[1]] [featScale Gradient[1 x 1]] [featScaled Gradient[784 x 1 x *]] [features Gradient[784 x *]] [labels Gradient[10 x *]] [top5Errs Gradient[1]] [unnamed89 Gradient[1 x 1]] }
0x41d3438: {[features Value[784 x *]] }
0x41d4ac8: {[top5Errs Value[1]] }
0x41d4c28: {[errs Value[1]] }
0x4cacc68: {[h1.W Value[200 x 784]] }
0x4cadbb8: {[h1.b Value[200 x 1]] }
0x4caea28: {[ol.b Value[10 x 1]] }
0x4caed28: {[ol.W Value[10 x 200]] }
0x4cb1628: {[unnamed89 Value[1 x 1]] }
0x4cb5298: {[ol.z Value[10 x 1 x *]] }
0x4cb5458: {[ce Value[1]] }
0x4cb6858: {[featScaled Value[784 x 1 x *]] }
0x4cb6f98: {[h1.t Value[200 x 1 x *]] }
0x4cb70f8: {[h1.W Gradient[200 x 784]] [h1.z Value[200 x 1 x *]] }
0x4cb72b8: {[h1.t Gradient[200 x 1 x *]] [h1.y Value[200 x 1 x *]] }
0x4cb7478: {[h1.z Gradient[200 x 1 x *]] [ol.t Value[10 x 1 x *]] }
0x4cb8498: {[ce Gradient[1]] }
0x4cb8658: {[ol.W Gradient[10 x 200]] [ol.z Gradient[10 x 1 x *]] }
0x4cb8818: {[ol.t Gradient[10 x 1 x *]] }
0x4cb89d8: {[ol.b Gradient[10 x 1]] }
0x4cb8b98: {[h1.b Gradient[200 x 1]] [h1.y Gradient[200 x 1 x *]] }
0x4cca088: {[featScale Value[1 x 1]] }
0x4ccb2f8: {[labels Value[10 x *]] }

07/20/2016 15:15:38: No PreCompute nodes found, skipping PreCompute step.

07/20/2016 15:15:38: Starting Epoch 1: learning rate per sample = 0.003125  effective momentum = 0.000000  momentum as time constant = 0.0 samples
BlockRandomizer::StartEpoch: epoch 0: frames [0..60000] (first sequence at sample 0), data subset 0 of 1

07/20/2016 15:15:38: Starting minibatch loop.
Begin benchmarking for memory swapping...
Step number: 1 step name: featScaled_forward
Step number: 2 step name: h1.t_forward
Step number: 3 step name: h1.z_forward
Step number: 4 step name: h1.y_forward
Step number: 5 step name: ol.t_forward
Step number: 6 step name: ol.z_forward
Step number: 7 step name: top5Errs_forward
Step number: 9 step name: errs_forward
Step number: 11 step name: ce_forward
Step number: 12 step name: ce_backprop
Step number: 13 step name: ol.z_backprop
Step number: 14 step name: ol.t_backprop
Step number: 15 step name: h1.y_backprop
Step number: 16 step name: h1.z_backprop
Step number: 17 step name: h1.t_backprop
Memory swapping benchmarking complete!Swapping buffer: 0x4cacc68 with dim 200x784 out at step 2 and in at step 7
Swapping buffer: 0x4cadbb8 with dim 200x1 out at step 3 and in at step 15
Swapping buffer: 0x4caea28 with dim 10x1 out at step 6 and in at step 12
Swapping buffer: 0x4caed28 with dim 10x200 out at step 5 and in at step 13
Swapping buffer: 0x4cb5298 with dim 10x32 out at step 7 and in at step 8
Swapping buffer: 0x4cb5298 with dim 10x32 out at step 9 and in at step 10
Swapping buffer: 0x4ccb2f8 with dim 10x32 out at step 7 and in at step 8
Swapping buffer: 0x4ccb2f8 with dim 10x32 out at step 9 and in at step 10
Total swapped memory: 0.611458MB
Total swappable memory: 0.704727MB
07/20/2016 15:15:48:  Epoch[ 1 of 3]-Minibatch[   1- 500, 26.67%]: ce = 1.29990210 * 16000; top5Errs = 9.594% * 16000; errs = 38.625% * 16000; time = 9.5711s; samplesPerSecond = 1671.7
07/20/2016 15:15:50:  Epoch[ 1 of 3]-Minibatch[ 501-1000, 53.33%]: ce = 0.49051416 * 16000; top5Errs = 0.994% * 16000; errs = 13.056% * 16000; time = 1.7551s; samplesPerSecond = 9116.1
07/20/2016 15:15:51:  Epoch[ 1 of 3]-Minibatch[1001-1500, 80.00%]: ce = 0.39756055 * 16000; top5Errs = 0.750% * 16000; errs = 11.169% * 16000; time = 1.8241s; samplesPerSecond = 8771.4
07/20/2016 15:15:53: Finished Epoch[ 1 of 3]: [Training] ce = 0.65492266 * 60000; top5Errs = 3.152% * 60000; errs = 18.735% * 60000; totalSamplesSeen = 60000; learningRatePerSample = 0.003125; epochTime=15.0598s
07/20/2016 15:15:53: SGD: Saving checkpoint model '/home/tim/Image/MNIST_01_OneHidden_MemorySwapping@debug_gpu/Models/01_OneHidden.1'

07/20/2016 15:15:53: Starting Epoch 2: learning rate per sample = 0.003125  effective momentum = 0.000000  momentum as time constant = 0.0 samples
BlockRandomizer::StartEpoch: epoch 1: frames [60000..120000] (first sequence at sample 60000), data subset 0 of 1

07/20/2016 15:15:53: Starting minibatch loop.
07/20/2016 15:16:01:  Epoch[ 2 of 3]-Minibatch[   1- 500, 26.67%]: ce = 0.32875250 * 16000; top5Errs = 0.600% * 16000; errs = 9.525% * 16000; time = 7.9189s; samplesPerSecond = 2020.5
07/20/2016 15:16:03:  Epoch[ 2 of 3]-Minibatch[ 501-1000, 53.33%]: ce = 0.31813129 * 16000; top5Errs = 0.556% * 16000; errs = 9.213% * 16000; time = 2.0627s; samplesPerSecond = 7756.9
07/20/2016 15:16:05:  Epoch[ 2 of 3]-Minibatch[1001-1500, 80.00%]: ce = 0.31004590 * 16000; top5Errs = 0.613% * 16000; errs = 8.756% * 16000; time = 2.0721s; samplesPerSecond = 7721.8
07/20/2016 15:16:07: Finished Epoch[ 2 of 3]: [Training] ce = 0.31497067 * 60000; top5Errs = 0.558% * 60000; errs = 9.090% * 60000; totalSamplesSeen = 120000; learningRatePerSample = 0.003125; epochTime=13.5733s
07/20/2016 15:16:07: SGD: Saving checkpoint model '/home/tim/Image/MNIST_01_OneHidden_MemorySwapping@debug_gpu/Models/01_OneHidden.2'

07/20/2016 15:16:07: Starting Epoch 3: learning rate per sample = 0.003125  effective momentum = 0.000000  momentum as time constant = 0.0 samples
BlockRandomizer::StartEpoch: epoch 2: frames [120000..180000] (first sequence at sample 120000), data subset 0 of 1

07/20/2016 15:16:07: Starting minibatch loop.
07/20/2016 15:16:15:  Epoch[ 3 of 3]-Minibatch[   1- 500, 26.67%]: ce = 0.28019092 * 16000; top5Errs = 0.369% * 16000; errs = 8.188% * 16000; time = 8.4211s; samplesPerSecond = 1900.0
07/20/2016 15:16:17:  Epoch[ 3 of 3]-Minibatch[ 501-1000, 53.33%]: ce = 0.28040411 * 16000; top5Errs = 0.506% * 16000; errs = 8.088% * 16000; time = 1.7442s; samplesPerSecond = 9173.2
07/20/2016 15:16:19:  Epoch[ 3 of 3]-Minibatch[1001-1500, 80.00%]: ce = 0.27622791 * 16000; top5Errs = 0.469% * 16000; errs = 8.231% * 16000; time = 1.8050s; samplesPerSecond = 8864.2
07/20/2016 15:16:21: Finished Epoch[ 3 of 3]: [Training] ce = 0.27478320 * 60000; top5Errs = 0.435% * 60000; errs = 8.010% * 60000; totalSamplesSeen = 180000; learningRatePerSample = 0.003125; epochTime=13.7202s
07/20/2016 15:16:21: SGD: Saving checkpoint model '/home/tim/Image/MNIST_01_OneHidden_MemorySwapping@debug_gpu/Models/01_OneHidden'
07/20/2016 15:16:21: CNTKCommandTrainEnd: train

07/20/2016 15:16:21: Action "train" complete.


07/20/2016 15:16:21: ##############################################################################
07/20/2016 15:16:21: #                                                                            #
07/20/2016 15:16:21: # Action "test"                                                              #
07/20/2016 15:16:21: #                                                                            #
07/20/2016 15:16:21: ##############################################################################


Post-processing network...

3 roots:
	ce = CrossEntropyWithSoftmax()
	errs = ErrorPrediction()
	top5Errs = ErrorPrediction()

Validating network. 17 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [10 x *1]
Validating --> ol.W = LearnableParameter() :  -> [10 x 200]
Validating --> h1.W = LearnableParameter() :  -> [200 x 784]
Validating --> featScale = LearnableParameter() :  -> [1 x 1]
Validating --> features = InputValue() :  -> [784 x *1]
Validating --> featScaled = ElementTimes (featScale, features) : [1 x 1], [784 x *1] -> [784 x 1 x *1]
Validating --> h1.t = Times (h1.W, featScaled) : [200 x 784], [784 x 1 x *1] -> [200 x 1 x *1]
Validating --> h1.b = LearnableParameter() :  -> [200 x 1]
Validating --> h1.z = Plus (h1.t, h1.b) : [200 x 1 x *1], [200 x 1] -> [200 x 1 x *1]
Validating --> h1.y = Sigmoid (h1.z) : [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> ol.t = Times (ol.W, h1.y) : [10 x 200], [200 x 1 x *1] -> [10 x 1 x *1]
Validating --> ol.b = LearnableParameter() :  -> [10 x 1]
Validating --> ol.z = Plus (ol.t, ol.b) : [10 x 1 x *1], [10 x 1] -> [10 x 1 x *1]
Validating --> ce = CrossEntropyWithSoftmax (labels, ol.z) : [10 x *1], [10 x 1 x *1] -> [1]
Validating --> errs = ErrorPrediction (labels, ol.z) : [10 x *1], [10 x 1 x *1] -> [1]
Validating --> unnamed89 = LearnableParameter() :  -> [1 x 1]
Validating --> top5Errs = ErrorPrediction (labels, ol.z, unnamed89) : [10 x *1], [10 x 1 x *1], [1 x 1] -> [1]

Validating network. 9 nodes to process in pass 2.


Validating network, final pass.



9 out of 17 nodes do not share the minibatch layout with the input data.

Post-processing network complete.



Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

(nil): {[ce Gradient[1]] [errs Gradient[1]] [featScale Gradient[1 x 1]] [featScaled Gradient[784 x 1 x *1]] [features Gradient[784 x *1]] [h1.W Gradient[200 x 784]] [h1.b Gradient[200 x 1]] [h1.t Gradient[200 x 1 x *1]] [h1.y Gradient[200 x 1 x *1]] [h1.z Gradient[200 x 1 x *1]] [labels Gradient[10 x *1]] [ol.W Gradient[10 x 200]] [ol.b Gradient[10 x 1]] [ol.t Gradient[10 x 1 x *1]] [ol.z Gradient[10 x 1 x *1]] [top5Errs Gradient[1]] [unnamed89 Gradient[1 x 1]] }
0x38591c8: {[ce Value[1]] }
0x385a758: {[featScale Value[1 x 1]] }
0x385b318: {[features Value[784 x *1]] }
0x385c1b8: {[h1.b Value[200 x 1]] }
0x385ce98: {[h1.W Value[200 x 784]] }
0x385e238: {[labels Value[10 x *1]] }
0x385ec88: {[ol.b Value[10 x 1]] }
0x385f968: {[ol.W Value[10 x 200]] }
0x38603f8: {[unnamed89 Value[1 x 1]] }
0x3863c98: {[errs Value[1]] }
0x3863df8: {[top5Errs Value[1]] }
0x3865058: {[featScaled Value[784 x 1 x *1]] }
0x38656d8: {[h1.t Value[200 x 1 x *1]] }
0x3865838: {[h1.z Value[200 x 1 x *1]] }
0x38659f8: {[h1.y Value[200 x 1 x *1]] }
0x3865bb8: {[ol.t Value[10 x 1 x *1]] }
0x3865d78: {[ol.z Value[10 x 1 x *1]] }

BlockRandomizer::StartEpoch: epoch 0: frames [0..10000] (first sequence at sample 0), data subset 0 of 1
07/20/2016 15:16:22: Minibatch[1-10]: ce = 0.25291620 * 10000; errs = 7.140% * 10000; top5Errs = 0.420% * 10000
07/20/2016 15:16:22: Final Results: Minibatch[1-10]: ce = 0.25291620 * 10000; perplexity = 1.28777536; errs = 7.140% * 10000; top5Errs = 0.420% * 10000

07/20/2016 15:16:22: Action "test" complete.

07/20/2016 15:16:22: __COMPLETED__
