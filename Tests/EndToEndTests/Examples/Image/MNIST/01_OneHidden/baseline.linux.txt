CPU info:
    CPU Model Name: Intel(R) Xeon(R) CPU E5-2630 v2 @ 2.60GHz
    Hardware threads: 24
    Total Memory: 264173120 kB
-------------------------------------------------------------------
=== Running /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/gpu/release/bin/cntk configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden/../../../../../../Examples/Image/MNIST/Config/01_OneHidden.cntk currentDirectory=/tmp/cntk-test-20160713122019.252341/Examples/Image/MNIST_01_OneHidden@release_gpu/TestData RunDir=/tmp/cntk-test-20160713122019.252341/Examples/Image/MNIST_01_OneHidden@release_gpu DataDir=/tmp/cntk-test-20160713122019.252341/Examples/Image/MNIST_01_OneHidden@release_gpu/TestData ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden/../../../../../../Examples/Image/MNIST/Config OutputDir=/tmp/cntk-test-20160713122019.252341/Examples/Image/MNIST_01_OneHidden@release_gpu DeviceId=0 timestamping=true train=[SGD=[maxEpochs=3]] imageLayout="cudnn"
-------------------------------------------------------------------
Build info: 

		Built time: Jul 13 2016 12:01:30
		Last modified date: Tue Jul 12 04:28:35 2016
		Build type: release
		Build target: GPU
		With 1bit-SGD: no
		Math lib: mkl
		CUDA_PATH: /usr/local/cuda-7.5
		CUB_PATH: /usr/local/cub-1.4.1
		CUDNN_PATH: /usr/local/cudnn-4.0
		Build Branch: HEAD
		Build SHA1: 50bb4c8afbc87c14548a5b5f315a064186a5cb5f
		Built by philly on 2bc22072e267
		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
-------------------------------------------------------------------
Changed current directory to /tmp/cntk-test-20160713122019.252341/Examples/Image/MNIST_01_OneHidden@release_gpu/TestData
07/13/2016 13:10:57: -------------------------------------------------------------------
07/13/2016 13:10:57: Build info: 

07/13/2016 13:10:57: 		Built time: Jul 13 2016 12:01:30
07/13/2016 13:10:57: 		Last modified date: Tue Jul 12 04:28:35 2016
07/13/2016 13:10:57: 		Build type: release
07/13/2016 13:10:57: 		Build target: GPU
07/13/2016 13:10:57: 		With 1bit-SGD: no
07/13/2016 13:10:57: 		Math lib: mkl
07/13/2016 13:10:57: 		CUDA_PATH: /usr/local/cuda-7.5
07/13/2016 13:10:57: 		CUB_PATH: /usr/local/cub-1.4.1
07/13/2016 13:10:57: 		CUDNN_PATH: /usr/local/cudnn-4.0
07/13/2016 13:10:57: 		Build Branch: HEAD
07/13/2016 13:10:57: 		Build SHA1: 50bb4c8afbc87c14548a5b5f315a064186a5cb5f
07/13/2016 13:10:57: 		Built by philly on 2bc22072e267
07/13/2016 13:10:57: 		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
07/13/2016 13:10:57: -------------------------------------------------------------------
07/13/2016 13:10:58: -------------------------------------------------------------------
07/13/2016 13:10:58: GPU info:

07/13/2016 13:10:58: 		Device[0]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
07/13/2016 13:10:58: 		Device[1]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
07/13/2016 13:10:58: 		Device[2]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
07/13/2016 13:10:58: 		Device[3]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
07/13/2016 13:10:58: -------------------------------------------------------------------

07/13/2016 13:10:58: Running on localhost at 2016/07/13 13:10:58
07/13/2016 13:10:58: Command line: 
/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/gpu/release/bin/cntk  configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden/../../../../../../Examples/Image/MNIST/Config/01_OneHidden.cntk  currentDirectory=/tmp/cntk-test-20160713122019.252341/Examples/Image/MNIST_01_OneHidden@release_gpu/TestData  RunDir=/tmp/cntk-test-20160713122019.252341/Examples/Image/MNIST_01_OneHidden@release_gpu  DataDir=/tmp/cntk-test-20160713122019.252341/Examples/Image/MNIST_01_OneHidden@release_gpu/TestData  ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden/../../../../../../Examples/Image/MNIST/Config  OutputDir=/tmp/cntk-test-20160713122019.252341/Examples/Image/MNIST_01_OneHidden@release_gpu  DeviceId=0  timestamping=true  train=[SGD=[maxEpochs=3]]  imageLayout="cudnn"



07/13/2016 13:10:58: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
07/13/2016 13:10:58: rootDir = ".."
configDir = "$rootDir$/Config"
dataDir   = "$rootDir$/Data"
outputDir = "$rootDir$/Output"
modelDir  = "$outputDir$/Models"
deviceId = 0
command = train:test
precision = "float"
modelPath = "$modelDir$/01_OneHidden"
traceLevel = 1
numMBsToShowResult = 500
train = [
    action = "train"
    BrainScriptNetworkBuilder_disabled = [
        include "Shared.bs"
featDim = 28 * 28                           
labelDim = 10                               
        features = Input (featDim)
        featScaled = Constant (1.0 / 256.0) .* features
        labels = Input (labelDim)
        hiddenDim = 200
        h1 = DNNSigmoidLayer (featDim,  hiddenDim, featScaled, 1)
        z  = DNNLayer        (hiddenDim, labelDim, h1,         1)
        ce   = CrossEntropyWithSoftmax (labels, z)
        errs = ErrorPrediction         (labels, z)
        top5Errs = ErrorPrediction (labels, z, topN=5)
        featureNodes    = (features)
        labelNodes      = (labels)
        criterionNodes  = (ce)
        evaluationNodes = (errs)
        outputNodes     = (z)
    ]
    NDLNetworkBuilder = [
        imageLayout = "cudnn"
        initOnCPUOnly = true
        ndlMacros = "$configDir$/Macros.ndl"
        networkDescription = "$ConfigDir$/01_OneHidden.ndl"
    ]
    SGD = [
        epochSize = 60000
        minibatchSize = 32
        learningRatesPerSample = 0.003125
        momentumAsTimeConstant = 0
        maxEpochs = 30
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "$DataDir$/Train-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]   
]
test = [
    action = "test"
minibatchSize = 1024    
    evalNodeNames = ce:errs:top5Errs
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "$DataDir$/Test-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]
]
currentDirectory=/tmp/cntk-test-20160713122019.252341/Examples/Image/MNIST_01_OneHidden@release_gpu/TestData
RunDir=/tmp/cntk-test-20160713122019.252341/Examples/Image/MNIST_01_OneHidden@release_gpu
DataDir=/tmp/cntk-test-20160713122019.252341/Examples/Image/MNIST_01_OneHidden@release_gpu/TestData
ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden/../../../../../../Examples/Image/MNIST/Config
OutputDir=/tmp/cntk-test-20160713122019.252341/Examples/Image/MNIST_01_OneHidden@release_gpu
DeviceId=0
timestamping=true
train=[SGD=[maxEpochs=3]]
imageLayout="cudnn"

07/13/2016 13:10:58: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<

07/13/2016 13:10:58: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
07/13/2016 13:10:58: rootDir = ".."
configDir = "../Config"
dataDir   = "../Data"
outputDir = "../Output"
modelDir  = "/tmp/cntk-test-20160713122019.252341/Examples/Image/MNIST_01_OneHidden@release_gpu/Models"
deviceId = 0
command = train:test
precision = "float"
modelPath = "/tmp/cntk-test-20160713122019.252341/Examples/Image/MNIST_01_OneHidden@release_gpu/Models/01_OneHidden"
traceLevel = 1
numMBsToShowResult = 500
train = [
    action = "train"
    BrainScriptNetworkBuilder_disabled = [
        include "Shared.bs"
featDim = 28 * 28                           
labelDim = 10                               
        features = Input (featDim)
        featScaled = Constant (1.0 / 256.0) .* features
        labels = Input (labelDim)
        hiddenDim = 200
        h1 = DNNSigmoidLayer (featDim,  hiddenDim, featScaled, 1)
        z  = DNNLayer        (hiddenDim, labelDim, h1,         1)
        ce   = CrossEntropyWithSoftmax (labels, z)
        errs = ErrorPrediction         (labels, z)
        top5Errs = ErrorPrediction (labels, z, topN=5)
        featureNodes    = (features)
        labelNodes      = (labels)
        criterionNodes  = (ce)
        evaluationNodes = (errs)
        outputNodes     = (z)
    ]
    NDLNetworkBuilder = [
        imageLayout = "cudnn"
        initOnCPUOnly = true
        ndlMacros = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden/../../../../../../Examples/Image/MNIST/Config/Macros.ndl"
        networkDescription = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden/../../../../../../Examples/Image/MNIST/Config/01_OneHidden.ndl"
    ]
    SGD = [
        epochSize = 60000
        minibatchSize = 32
        learningRatesPerSample = 0.003125
        momentumAsTimeConstant = 0
        maxEpochs = 30
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "/tmp/cntk-test-20160713122019.252341/Examples/Image/MNIST_01_OneHidden@release_gpu/TestData/Train-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]   
]
test = [
    action = "test"
minibatchSize = 1024    
    evalNodeNames = ce:errs:top5Errs
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "/tmp/cntk-test-20160713122019.252341/Examples/Image/MNIST_01_OneHidden@release_gpu/TestData/Test-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]
]
currentDirectory=/tmp/cntk-test-20160713122019.252341/Examples/Image/MNIST_01_OneHidden@release_gpu/TestData
RunDir=/tmp/cntk-test-20160713122019.252341/Examples/Image/MNIST_01_OneHidden@release_gpu
DataDir=/tmp/cntk-test-20160713122019.252341/Examples/Image/MNIST_01_OneHidden@release_gpu/TestData
ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden/../../../../../../Examples/Image/MNIST/Config
OutputDir=/tmp/cntk-test-20160713122019.252341/Examples/Image/MNIST_01_OneHidden@release_gpu
DeviceId=0
timestamping=true
train=[SGD=[maxEpochs=3]]
imageLayout="cudnn"

07/13/2016 13:10:58: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<

07/13/2016 13:10:58: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
configparameters: 01_OneHidden.cntk:command=train:test
configparameters: 01_OneHidden.cntk:configDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden/../../../../../../Examples/Image/MNIST/Config
configparameters: 01_OneHidden.cntk:currentDirectory=/tmp/cntk-test-20160713122019.252341/Examples/Image/MNIST_01_OneHidden@release_gpu/TestData
configparameters: 01_OneHidden.cntk:dataDir=/tmp/cntk-test-20160713122019.252341/Examples/Image/MNIST_01_OneHidden@release_gpu/TestData
configparameters: 01_OneHidden.cntk:deviceId=0
configparameters: 01_OneHidden.cntk:imageLayout=cudnn
configparameters: 01_OneHidden.cntk:modelDir=/tmp/cntk-test-20160713122019.252341/Examples/Image/MNIST_01_OneHidden@release_gpu/Models
configparameters: 01_OneHidden.cntk:modelPath=/tmp/cntk-test-20160713122019.252341/Examples/Image/MNIST_01_OneHidden@release_gpu/Models/01_OneHidden
configparameters: 01_OneHidden.cntk:numMBsToShowResult=500
configparameters: 01_OneHidden.cntk:outputDir=/tmp/cntk-test-20160713122019.252341/Examples/Image/MNIST_01_OneHidden@release_gpu
configparameters: 01_OneHidden.cntk:precision=float
configparameters: 01_OneHidden.cntk:rootDir=..
configparameters: 01_OneHidden.cntk:RunDir=/tmp/cntk-test-20160713122019.252341/Examples/Image/MNIST_01_OneHidden@release_gpu
configparameters: 01_OneHidden.cntk:test=[
    action = "test"
minibatchSize = 1024    
    evalNodeNames = ce:errs:top5Errs
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "/tmp/cntk-test-20160713122019.252341/Examples/Image/MNIST_01_OneHidden@release_gpu/TestData/Test-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]
]

configparameters: 01_OneHidden.cntk:timestamping=true
configparameters: 01_OneHidden.cntk:traceLevel=1
configparameters: 01_OneHidden.cntk:train=[
    action = "train"
    BrainScriptNetworkBuilder_disabled = [
        include "Shared.bs"
featDim = 28 * 28                           
labelDim = 10                               
        features = Input (featDim)
        featScaled = Constant (1.0 / 256.0) .* features
        labels = Input (labelDim)
        hiddenDim = 200
        h1 = DNNSigmoidLayer (featDim,  hiddenDim, featScaled, 1)
        z  = DNNLayer        (hiddenDim, labelDim, h1,         1)
        ce   = CrossEntropyWithSoftmax (labels, z)
        errs = ErrorPrediction         (labels, z)
        top5Errs = ErrorPrediction (labels, z, topN=5)
        featureNodes    = (features)
        labelNodes      = (labels)
        criterionNodes  = (ce)
        evaluationNodes = (errs)
        outputNodes     = (z)
    ]
    NDLNetworkBuilder = [
        imageLayout = "cudnn"
        initOnCPUOnly = true
        ndlMacros = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden/../../../../../../Examples/Image/MNIST/Config/Macros.ndl"
        networkDescription = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden/../../../../../../Examples/Image/MNIST/Config/01_OneHidden.ndl"
    ]
    SGD = [
        epochSize = 60000
        minibatchSize = 32
        learningRatesPerSample = 0.003125
        momentumAsTimeConstant = 0
        maxEpochs = 30
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "/tmp/cntk-test-20160713122019.252341/Examples/Image/MNIST_01_OneHidden@release_gpu/TestData/Train-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]   
] [SGD=[maxEpochs=3]]

07/13/2016 13:10:58: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
07/13/2016 13:10:58: Commands: train test
07/13/2016 13:10:58: Precision = "float"
07/13/2016 13:10:58: CNTKModelPath: /tmp/cntk-test-20160713122019.252341/Examples/Image/MNIST_01_OneHidden@release_gpu/Models/01_OneHidden
07/13/2016 13:10:58: CNTKCommandTrainInfo: train : 3
07/13/2016 13:10:58: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 3

07/13/2016 13:10:58: ##############################################################################
07/13/2016 13:10:58: #                                                                            #
07/13/2016 13:10:58: # Action "train"                                                             #
07/13/2016 13:10:58: #                                                                            #
07/13/2016 13:10:58: ##############################################################################

07/13/2016 13:10:58: CNTKCommandTrainBegin: train
NDLBuilder Using GPU 0

07/13/2016 13:10:58: Creating virgin network.

Post-processing network...

4 roots:
	ce = CrossEntropyWithSoftmax()
	errs = ErrorPrediction()
	ol.z = Plus()
	top5Errs = ErrorPrediction()

Validating network. 17 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [10 x *]
Validating --> ol.W = LearnableParameter() :  -> [10 x 200]
Validating --> h1.W = LearnableParameter() :  -> [200 x 784]
Validating --> featScale = LearnableParameter() :  -> [1 x 1]
Validating --> features = InputValue() :  -> [784 x *]
Validating --> featScaled = ElementTimes (featScale, features) : [1 x 1], [784 x *] -> [784 x 1 x *]
Validating --> h1.t = Times (h1.W, featScaled) : [200 x 784], [784 x 1 x *] -> [200 x 1 x *]
Validating --> h1.b = LearnableParameter() :  -> [200 x 1]
Validating --> h1.z = Plus (h1.t, h1.b) : [200 x 1 x *], [200 x 1] -> [200 x 1 x *]
Validating --> h1.y = Sigmoid (h1.z) : [200 x 1 x *] -> [200 x 1 x *]
Validating --> ol.t = Times (ol.W, h1.y) : [10 x 200], [200 x 1 x *] -> [10 x 1 x *]
Validating --> ol.b = LearnableParameter() :  -> [10 x 1]
Validating --> ol.z = Plus (ol.t, ol.b) : [10 x 1 x *], [10 x 1] -> [10 x 1 x *]
Validating --> ce = CrossEntropyWithSoftmax (labels, ol.z) : [10 x *], [10 x 1 x *] -> [1]
Validating --> errs = ErrorPrediction (labels, ol.z) : [10 x *], [10 x 1 x *] -> [1]
Validating --> unnamed89 = LearnableParameter() :  -> [1 x 1]
Validating --> top5Errs = ErrorPrediction (labels, ol.z, unnamed89) : [10 x *], [10 x 1 x *], [1 x 1] -> [1]

Validating network. 9 nodes to process in pass 2.


Validating network, final pass.



9 out of 17 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

07/13/2016 13:10:58: Created model with 17 nodes on GPU 0.

07/13/2016 13:10:58: Training criterion node(s):
07/13/2016 13:10:58: 	ce = CrossEntropyWithSoftmax

07/13/2016 13:10:58: Evaluation criterion node(s):

07/13/2016 13:10:58: 	top5Errs = ErrorPrediction
07/13/2016 13:10:58: 	errs = ErrorPrediction


Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

(nil): {[errs Gradient[1]] [featScale Gradient[1 x 1]] [featScaled Gradient[784 x 1 x *]] [features Gradient[784 x *]] [labels Gradient[10 x *]] [top5Errs Gradient[1]] [unnamed89 Gradient[1 x 1]] }
0x2b6ead8: {[top5Errs Value[1]] }
0x2b6ec98: {[errs Value[1]] }
0x2b71958: {[features Value[784 x *]] }
0x33867d8: {[featScale Value[1 x 1]] }
0x3387908: {[labels Value[10 x *]] }
0x3388018: {[h1.W Value[200 x 784]] }
0x3389318: {[h1.b Value[200 x 1]] }
0x38a7e88: {[ol.W Value[10 x 200]] }
0x38a8d58: {[ol.b Value[10 x 1]] }
0x38aa6e8: {[unnamed89 Value[1 x 1]] }
0x38ae208: {[featScaled Value[784 x 1 x *]] }
0x38ae448: {[ol.z Value[10 x 1 x *]] }
0x38ae608: {[ce Value[1]] }
0x38ae778: {[h1.t Value[200 x 1 x *]] }
0x38afff8: {[h1.W Gradient[200 x 784]] [h1.z Value[200 x 1 x *]] }
0x38b00f8: {[h1.t Gradient[200 x 1 x *]] [h1.y Value[200 x 1 x *]] }
0x38b0528: {[h1.z Gradient[200 x 1 x *]] [ol.t Value[10 x 1 x *]] }
0x38b1488: {[ce Gradient[1]] }
0x38b1648: {[ol.W Gradient[10 x 200]] [ol.z Gradient[10 x 1 x *]] }
0x38b1808: {[ol.t Gradient[10 x 1 x *]] }
0x38b19c8: {[ol.b Gradient[10 x 1]] }
0x38b1b88: {[h1.b Gradient[200 x 1]] [h1.y Gradient[200 x 1 x *]] }

07/13/2016 13:10:58: No PreCompute nodes found, skipping PreCompute step.

07/13/2016 13:10:58: Starting Epoch 1: learning rate per sample = 0.003125  effective momentum = 0.000000  momentum as time constant = 0.0 samples
BlockRandomizer::StartEpoch: epoch 0: frames [0..60000] (first sequence at sample 0), data subset 0 of 1

07/13/2016 13:10:58: Starting minibatch loop.
07/13/2016 13:11:00:  Epoch[ 1 of 3]-Minibatch[   1- 500, 26.67%]: ce = 1.30072449 * 16000; top5Errs = 9.438% * 16000; errs = 38.469% * 16000; time = 1.3811s; samplesPerSecond = 11585.3
07/13/2016 13:11:00:  Epoch[ 1 of 3]-Minibatch[ 501-1000, 53.33%]: ce = 0.49017273 * 16000; top5Errs = 0.994% * 16000; errs = 13.037% * 16000; time = 0.3402s; samplesPerSecond = 47024.2
07/13/2016 13:11:00:  Epoch[ 1 of 3]-Minibatch[1001-1500, 80.00%]: ce = 0.39744922 * 16000; top5Errs = 0.756% * 16000; errs = 11.169% * 16000; time = 0.3351s; samplesPerSecond = 47753.1
07/13/2016 13:11:01: Finished Epoch[ 1 of 3]: [Training] ce = 0.65501042 * 60000; top5Errs = 3.112% * 60000; errs = 18.685% * 60000; totalSamplesSeen = 60000; learningRatePerSample = 0.003125; epochTime=2.32085s
07/13/2016 13:11:01: SGD: Saving checkpoint model '/tmp/cntk-test-20160713122019.252341/Examples/Image/MNIST_01_OneHidden@release_gpu/Models/01_OneHidden.1'

07/13/2016 13:11:01: Starting Epoch 2: learning rate per sample = 0.003125  effective momentum = 0.000000  momentum as time constant = 0.0 samples
BlockRandomizer::StartEpoch: epoch 1: frames [60000..120000] (first sequence at sample 60000), data subset 0 of 1

07/13/2016 13:11:01: Starting minibatch loop.
07/13/2016 13:11:01:  Epoch[ 2 of 3]-Minibatch[   1- 500, 26.67%]: ce = 0.32870679 * 16000; top5Errs = 0.600% * 16000; errs = 9.531% * 16000; time = 0.3476s; samplesPerSecond = 46028.2
07/13/2016 13:11:01:  Epoch[ 2 of 3]-Minibatch[ 501-1000, 53.33%]: ce = 0.31809930 * 16000; top5Errs = 0.556% * 16000; errs = 9.206% * 16000; time = 0.3521s; samplesPerSecond = 45440.3
07/13/2016 13:11:02:  Epoch[ 2 of 3]-Minibatch[1001-1500, 80.00%]: ce = 0.31002502 * 16000; top5Errs = 0.613% * 16000; errs = 8.762% * 16000; time = 0.3352s; samplesPerSecond = 47730.7
07/13/2016 13:11:02: Finished Epoch[ 2 of 3]: [Training] ce = 0.31494245 * 60000; top5Errs = 0.557% * 60000; errs = 9.090% * 60000; totalSamplesSeen = 120000; learningRatePerSample = 0.003125; epochTime=1.28823s
07/13/2016 13:11:02: SGD: Saving checkpoint model '/tmp/cntk-test-20160713122019.252341/Examples/Image/MNIST_01_OneHidden@release_gpu/Models/01_OneHidden.2'

07/13/2016 13:11:02: Starting Epoch 3: learning rate per sample = 0.003125  effective momentum = 0.000000  momentum as time constant = 0.0 samples
BlockRandomizer::StartEpoch: epoch 2: frames [120000..180000] (first sequence at sample 120000), data subset 0 of 1

07/13/2016 13:11:02: Starting minibatch loop.
07/13/2016 13:11:02:  Epoch[ 3 of 3]-Minibatch[   1- 500, 26.67%]: ce = 0.28016867 * 16000; top5Errs = 0.369% * 16000; errs = 8.188% * 16000; time = 0.3282s; samplesPerSecond = 48757.6
07/13/2016 13:11:03:  Epoch[ 3 of 3]-Minibatch[ 501-1000, 53.33%]: ce = 0.28037985 * 16000; top5Errs = 0.506% * 16000; errs = 8.094% * 16000; time = 0.3272s; samplesPerSecond = 48907.2
07/13/2016 13:11:03:  Epoch[ 3 of 3]-Minibatch[1001-1500, 80.00%]: ce = 0.27621069 * 16000; top5Errs = 0.469% * 16000; errs = 8.238% * 16000; time = 0.3251s; samplesPerSecond = 49222.4
07/13/2016 13:11:03: Finished Epoch[ 3 of 3]: [Training] ce = 0.27476087 * 60000; top5Errs = 0.435% * 60000; errs = 8.012% * 60000; totalSamplesSeen = 180000; learningRatePerSample = 0.003125; epochTime=1.242s
07/13/2016 13:11:03: SGD: Saving checkpoint model '/tmp/cntk-test-20160713122019.252341/Examples/Image/MNIST_01_OneHidden@release_gpu/Models/01_OneHidden'
07/13/2016 13:11:03: CNTKCommandTrainEnd: train

07/13/2016 13:11:04: Action "train" complete.


07/13/2016 13:11:04: ##############################################################################
07/13/2016 13:11:04: #                                                                            #
07/13/2016 13:11:04: # Action "test"                                                              #
07/13/2016 13:11:04: #                                                                            #
07/13/2016 13:11:04: ##############################################################################


Post-processing network...

3 roots:
	ce = CrossEntropyWithSoftmax()
	errs = ErrorPrediction()
	top5Errs = ErrorPrediction()

Validating network. 17 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [10 x *1]
Validating --> ol.W = LearnableParameter() :  -> [10 x 200]
Validating --> h1.W = LearnableParameter() :  -> [200 x 784]
Validating --> featScale = LearnableParameter() :  -> [1 x 1]
Validating --> features = InputValue() :  -> [784 x *1]
Validating --> featScaled = ElementTimes (featScale, features) : [1 x 1], [784 x *1] -> [784 x 1 x *1]
Validating --> h1.t = Times (h1.W, featScaled) : [200 x 784], [784 x 1 x *1] -> [200 x 1 x *1]
Validating --> h1.b = LearnableParameter() :  -> [200 x 1]
Validating --> h1.z = Plus (h1.t, h1.b) : [200 x 1 x *1], [200 x 1] -> [200 x 1 x *1]
Validating --> h1.y = Sigmoid (h1.z) : [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> ol.t = Times (ol.W, h1.y) : [10 x 200], [200 x 1 x *1] -> [10 x 1 x *1]
Validating --> ol.b = LearnableParameter() :  -> [10 x 1]
Validating --> ol.z = Plus (ol.t, ol.b) : [10 x 1 x *1], [10 x 1] -> [10 x 1 x *1]
Validating --> ce = CrossEntropyWithSoftmax (labels, ol.z) : [10 x *1], [10 x 1 x *1] -> [1]
Validating --> errs = ErrorPrediction (labels, ol.z) : [10 x *1], [10 x 1 x *1] -> [1]
Validating --> unnamed89 = LearnableParameter() :  -> [1 x 1]
Validating --> top5Errs = ErrorPrediction (labels, ol.z, unnamed89) : [10 x *1], [10 x 1 x *1], [1 x 1] -> [1]

Validating network. 9 nodes to process in pass 2.


Validating network, final pass.



9 out of 17 nodes do not share the minibatch layout with the input data.

Post-processing network complete.



Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

(nil): {[ce Gradient[1]] [errs Gradient[1]] [featScale Gradient[1 x 1]] [featScaled Gradient[784 x 1 x *1]] [features Gradient[784 x *1]] [h1.W Gradient[200 x 784]] [h1.b Gradient[200 x 1]] [h1.t Gradient[200 x 1 x *1]] [h1.y Gradient[200 x 1 x *1]] [h1.z Gradient[200 x 1 x *1]] [labels Gradient[10 x *1]] [ol.W Gradient[10 x 200]] [ol.b Gradient[10 x 1]] [ol.t Gradient[10 x 1 x *1]] [ol.z Gradient[10 x 1 x *1]] [top5Errs Gradient[1]] [unnamed89 Gradient[1 x 1]] }
0x7fcb12d5c648: {[top5Errs Value[1]] }
0x7fcb12d5cad8: {[h1.t Value[200 x 1 x *1]] }
0x7fcb12d5de78: {[featScaled Value[784 x 1 x *1]] }
0x7fcb12d5e348: {[h1.z Value[200 x 1 x *1]] }
0x7fcb12d5e508: {[h1.y Value[200 x 1 x *1]] }
0x7fcb12d5e6c8: {[ol.t Value[10 x 1 x *1]] }
0x7fcb12d5e888: {[ol.z Value[10 x 1 x *1]] }
0x7fcb207f5ad8: {[ce Value[1]] }
0x7fcb207f6338: {[errs Value[1]] }
0x7fcb207f6a88: {[featScale Value[1 x 1]] }
0x7fcb207f8278: {[features Value[784 x *1]] }
0x7fcb207f9128: {[h1.b Value[200 x 1]] }
0x7fcb207f9618: {[h1.W Value[200 x 784]] }
0x7fcb207fb1f8: {[labels Value[10 x *1]] }
0x7fcb207fb8c8: {[ol.b Value[10 x 1]] }
0x7fcb207fc978: {[ol.W Value[10 x 200]] }
0x7fcb207ffda8: {[unnamed89 Value[1 x 1]] }

BlockRandomizer::StartEpoch: epoch 0: frames [0..10000] (first sequence at sample 0), data subset 0 of 1
07/13/2016 13:11:04: Minibatch[1-10]: ce = 0.25287636 * 10000; errs = 7.140% * 10000; top5Errs = 0.420% * 10000
07/13/2016 13:11:04: Final Results: Minibatch[1-10]: ce = 0.25287636 * 10000; perplexity = 1.28772405; errs = 7.140% * 10000; top5Errs = 0.420% * 10000

07/13/2016 13:11:04: Action "test" complete.

07/13/2016 13:11:04: __COMPLETED__