CPU info:
    CPU Model Name: Intel(R) Xeon(R) CPU W3565 @ 3.20GHz
    Hardware threads: 8
    Total Memory: 12580436 kB
-------------------------------------------------------------------
=== Running /cygdrive/c/jenkins/workspace/CNTK-Test-Windows-W1/x64/debug/cntk.exe configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/globals.cntk+rnnlu.ndl.cntk currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu DeviceId=0 timestamping=true
-------------------------------------------------------------------
Build info: 

		Built time: Jul 14 2016 05:11:35
		Last modified date: Thu Jul 14 03:20:47 2016
		Build type: Debug
		Build target: GPU
		With 1bit-SGD: no
		Math lib: mkl
		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
		CUB_PATH: C:\src\cub-1.4.1
		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
		Build Branch: HEAD
		Build SHA1: 72bee394bf461e8f6f0feb593a8416c05f481957
		Built by svcphil on liana-08-w
		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
-------------------------------------------------------------------
Changed current directory to C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
07/14/2016 06:30:26: -------------------------------------------------------------------
07/14/2016 06:30:26: Build info: 

07/14/2016 06:30:26: 		Built time: Jul 14 2016 05:11:35
07/14/2016 06:30:26: 		Last modified date: Thu Jul 14 03:20:47 2016
07/14/2016 06:30:26: 		Build type: Debug
07/14/2016 06:30:26: 		Build target: GPU
07/14/2016 06:30:26: 		With 1bit-SGD: no
07/14/2016 06:30:26: 		Math lib: mkl
07/14/2016 06:30:26: 		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
07/14/2016 06:30:26: 		CUB_PATH: C:\src\cub-1.4.1
07/14/2016 06:30:26: 		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
07/14/2016 06:30:26: 		Build Branch: HEAD
07/14/2016 06:30:26: 		Build SHA1: 72bee394bf461e8f6f0feb593a8416c05f481957
07/14/2016 06:30:26: 		Built by svcphil on liana-08-w
07/14/2016 06:30:26: 		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
07/14/2016 06:30:26: -------------------------------------------------------------------
07/14/2016 06:30:27: -------------------------------------------------------------------
07/14/2016 06:30:27: GPU info:

07/14/2016 06:30:27: 		Device[0]: cores = 2496; computeCapability = 5.2; type = "Quadro M4000"; memory = 8192 MB
07/14/2016 06:30:27: -------------------------------------------------------------------

07/14/2016 06:30:27: Running on cntk-muc01 at 2016/07/14 06:30:27
07/14/2016 06:30:27: Command line: 
C:\jenkins\workspace\CNTK-Test-Windows-W1\x64\debug\cntk.exe  configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/globals.cntk+rnnlu.ndl.cntk  currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU  RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu  DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU  ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU  OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu  DeviceId=0  timestamping=true



07/14/2016 06:30:27: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
07/14/2016 06:30:27: NdlDir=$ConfigDir$
ExpDir=$RunDir$
OutDir=$OutputDir$
precision="double"
deviceId = $DeviceId$
command=LSTM:LSTMTest
traceLevel=1
LSTM=[
  action=train
  makeMode=true
  minibatchSize=10
  epochSize=4430000
  modelPath=$ExpDir$/cntkdebug.dnn
  NDLNetworkBuilder=[
      networkDescription=$NdlDir$/lstm.ndl
  ]
  SGD=[
    learningRatesPerSample=0.1
    momentumPerMB=0.90
    gradientClippingWithTruncation=true
    clippingThresholdPerSample=15.0
    maxEpochs=3
    gradientcheck=false
    numMBsToShowResult=1000
    loadBestModel=true
    AutoAdjust=[
      autoAdjustLR=adjustafterepoch
      reduceLearnRateIfImproveLessThan=0
      increaseLearnRateIfImproveMoreThan=1000000000
      learnRateDecreaseFactor=0.5
      learnRateIncreaseFactor=1.382
      numMiniBatch4LRSearch=100
      numPrevLearnRates=5
      numBestSearchEpoch=1
    ]
    dropoutRate=0
  ]
  reader=[
    readerType=LUSequenceReader
    wordContext=0:1:2
    randomize=None
    nbruttsineachrecurrentiter=10
    wfile=$ExpDir$/sequenceSentence.bin
    wsize=256
    wrecords=1000
    windowSize=10000
    unk="<unk>"
    wordmap=$DataDir$/inputmap.txt
    file=$DataDir$/atis.train.apos.pred.pos.head.IOB.simple
    features=[
      dim=0
      sectionType=data
    ]
    sequence=[
      dim=1
      wrecords=2
      sectionType=data
    ]
    labelIn=[
      dim=1
      usewordmap=true
      labelDim=10000
      labelMappingFile=$ExpDir$/sentenceLabels.txt
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      usewordmap=true
      token=$DataDir$/input.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=11
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=11
        sectionType=categoryLabels
      ]
    ]
    labels=[
      dim=1
      labelType=Category
      beginSequence="O"
      endSequence="O"
      token=$DataDir$/output.txt
    labelMappingFile=$ExpDir$/sentenceLabels.out.txt
      sectionType=labels
      mapping=[
        sectionType=labelMapping
      ]
      category=[
        sectionType=categoryLabels
      ]
    ]
  ]
  cvReader=[
    readerType=LUSequenceReader
    randomize=None
    wordContext=0:1:2
    wfile=$ExpDir$/sequenceSentence.valid.bin
    wsize=256
    wrecords=1000
    windowSize=10000
    unk="<unk>"
    wordmap=$DataDir$/inputmap.txt
    file=$DataDir$/atis.dev.IOB.simple
    features=[
      dim=0
      sectionType=data
    ]
    sequence=[
      dim=1
      wrecords=2
      sectionType=data
    ]
    labelIn=[
      dim=1
      labelDim=10000
      labelMappingFile=$ExpDir$/sentenceLabels.in.txt
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      usewordmap=true
      token=$DataDir$/input.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=11
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=11
        sectionType=categoryLabels
      ]
    ]
    labels=[
      dim=1
      labelType=Category
      beginSequence="O"
      endSequence="O"
      token=$DataDir$/output.txt
      labelDim=10000
      labelMappingFile=$ExpDir$/sentenceLabels.out.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=3
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=3
        sectionType=categoryLabels
      ]
    ]
  ]
]
LSTMTest=[
  action=write
  minibatchSize=100
  epochSize=4430000
  defaultHiddenActivity=0.1
  modelPath=$ExpDir$/cntkdebug.dnn
  outputNodeNames=outputs
  reader=[
    readerType=LUSequenceReader
    randomize=None
    wordContext=0:1:2
    unk="<unk>"
    wordmap=$DataDir$/inputmap.txt
    file=$DataDir$/atis.test.apos.pred.pos.head.IOB.simple
    wfile=$ExpDir$/sequenceSentence.bin
    wsize=256
    wrecords=1000
    windowSize=10000
    features=[
      dim=0 
      sectionType=data
    ]
    sequence=[
      dim=1
      wrecords=2
      sectionType=data
    ]
    labelIn=[
      dim=1
      labelDim=10000
      labelMappingFile=$ExpDir$/sentenceLabels.txt
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      usewordmap=true
      token=$DataDir$/input.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=11
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=11
        sectionType=categoryLabels
      ]
    ]
    labels=[
      dim=1
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      token=$DataDir$/output.txt
      labelDim=127
      labelMappingFile=$ExpDir$/sentenceLabels.out.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=3
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=3
        sectionType=categoryLabels
      ]
    ]
  ]
  writer=[
    writerType=LUSequenceWriter
    outputs=[
      file=$OutDir$/output.rec.txt
      token=$DataDir$/output.txt
    ]
  ]
]
currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu
DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu
DeviceId=0
timestamping=true

07/14/2016 06:30:27: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<

07/14/2016 06:30:27: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
07/14/2016 06:30:27: NdlDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
ExpDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu
OutDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu
precision="double"
deviceId = 0
command=LSTM:LSTMTest
traceLevel=1
LSTM=[
  action=train
  makeMode=true
  minibatchSize=10
  epochSize=4430000
  modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu/cntkdebug.dnn
  NDLNetworkBuilder=[
      networkDescription=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/lstm.ndl
  ]
  SGD=[
    learningRatesPerSample=0.1
    momentumPerMB=0.90
    gradientClippingWithTruncation=true
    clippingThresholdPerSample=15.0
    maxEpochs=3
    gradientcheck=false
    numMBsToShowResult=1000
    loadBestModel=true
    AutoAdjust=[
      autoAdjustLR=adjustafterepoch
      reduceLearnRateIfImproveLessThan=0
      increaseLearnRateIfImproveMoreThan=1000000000
      learnRateDecreaseFactor=0.5
      learnRateIncreaseFactor=1.382
      numMiniBatch4LRSearch=100
      numPrevLearnRates=5
      numBestSearchEpoch=1
    ]
    dropoutRate=0
  ]
  reader=[
    readerType=LUSequenceReader
    wordContext=0:1:2
    randomize=None
    nbruttsineachrecurrentiter=10
    wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu/sequenceSentence.bin
    wsize=256
    wrecords=1000
    windowSize=10000
    unk="<unk>"
    wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
    file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.train.apos.pred.pos.head.IOB.simple
    features=[
      dim=0
      sectionType=data
    ]
    sequence=[
      dim=1
      wrecords=2
      sectionType=data
    ]
    labelIn=[
      dim=1
      usewordmap=true
      labelDim=10000
      labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu/sentenceLabels.txt
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      usewordmap=true
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=11
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=11
        sectionType=categoryLabels
      ]
    ]
    labels=[
      dim=1
      labelType=Category
      beginSequence="O"
      endSequence="O"
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
    labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu/sentenceLabels.out.txt
      sectionType=labels
      mapping=[
        sectionType=labelMapping
      ]
      category=[
        sectionType=categoryLabels
      ]
    ]
  ]
  cvReader=[
    readerType=LUSequenceReader
    randomize=None
    wordContext=0:1:2
    wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu/sequenceSentence.valid.bin
    wsize=256
    wrecords=1000
    windowSize=10000
    unk="<unk>"
    wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
    file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.dev.IOB.simple
    features=[
      dim=0
      sectionType=data
    ]
    sequence=[
      dim=1
      wrecords=2
      sectionType=data
    ]
    labelIn=[
      dim=1
      labelDim=10000
      labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu/sentenceLabels.in.txt
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      usewordmap=true
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=11
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=11
        sectionType=categoryLabels
      ]
    ]
    labels=[
      dim=1
      labelType=Category
      beginSequence="O"
      endSequence="O"
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
      labelDim=10000
      labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu/sentenceLabels.out.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=3
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=3
        sectionType=categoryLabels
      ]
    ]
  ]
]
LSTMTest=[
  action=write
  minibatchSize=100
  epochSize=4430000
  defaultHiddenActivity=0.1
  modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu/cntkdebug.dnn
  outputNodeNames=outputs
  reader=[
    readerType=LUSequenceReader
    randomize=None
    wordContext=0:1:2
    unk="<unk>"
    wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
    file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.test.apos.pred.pos.head.IOB.simple
    wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu/sequenceSentence.bin
    wsize=256
    wrecords=1000
    windowSize=10000
    features=[
      dim=0 
      sectionType=data
    ]
    sequence=[
      dim=1
      wrecords=2
      sectionType=data
    ]
    labelIn=[
      dim=1
      labelDim=10000
      labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu/sentenceLabels.txt
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      usewordmap=true
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=11
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=11
        sectionType=categoryLabels
      ]
    ]
    labels=[
      dim=1
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
      labelDim=127
      labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu/sentenceLabels.out.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=3
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=3
        sectionType=categoryLabels
      ]
    ]
  ]
  writer=[
    writerType=LUSequenceWriter
    outputs=[
      file=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu/output.rec.txt
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
    ]
  ]
]
currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu
DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu
DeviceId=0
timestamping=true

07/14/2016 06:30:27: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<

07/14/2016 06:30:27: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
configparameters: rnnlu.ndl.cntk:command=LSTM:LSTMTest
configparameters: rnnlu.ndl.cntk:ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
configparameters: rnnlu.ndl.cntk:currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
configparameters: rnnlu.ndl.cntk:DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
configparameters: rnnlu.ndl.cntk:deviceId=0
configparameters: rnnlu.ndl.cntk:ExpDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu
configparameters: rnnlu.ndl.cntk:LSTM=[
  action=train
  makeMode=true
  minibatchSize=10
  epochSize=4430000
  modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu/cntkdebug.dnn
  NDLNetworkBuilder=[
      networkDescription=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/lstm.ndl
  ]
  SGD=[
    learningRatesPerSample=0.1
    momentumPerMB=0.90
    gradientClippingWithTruncation=true
    clippingThresholdPerSample=15.0
    maxEpochs=3
    gradientcheck=false
    numMBsToShowResult=1000
    loadBestModel=true
    AutoAdjust=[
      autoAdjustLR=adjustafterepoch
      reduceLearnRateIfImproveLessThan=0
      increaseLearnRateIfImproveMoreThan=1000000000
      learnRateDecreaseFactor=0.5
      learnRateIncreaseFactor=1.382
      numMiniBatch4LRSearch=100
      numPrevLearnRates=5
      numBestSearchEpoch=1
    ]
    dropoutRate=0
  ]
  reader=[
    readerType=LUSequenceReader
    wordContext=0:1:2
    randomize=None
    nbruttsineachrecurrentiter=10
    wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu/sequenceSentence.bin
    wsize=256
    wrecords=1000
    windowSize=10000
    unk="<unk>"
    wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
    file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.train.apos.pred.pos.head.IOB.simple
    features=[
      dim=0
      sectionType=data
    ]
    sequence=[
      dim=1
      wrecords=2
      sectionType=data
    ]
    labelIn=[
      dim=1
      usewordmap=true
      labelDim=10000
      labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu/sentenceLabels.txt
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      usewordmap=true
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=11
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=11
        sectionType=categoryLabels
      ]
    ]
    labels=[
      dim=1
      labelType=Category
      beginSequence="O"
      endSequence="O"
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
    labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu/sentenceLabels.out.txt
      sectionType=labels
      mapping=[
        sectionType=labelMapping
      ]
      category=[
        sectionType=categoryLabels
      ]
    ]
  ]
  cvReader=[
    readerType=LUSequenceReader
    randomize=None
    wordContext=0:1:2
    wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu/sequenceSentence.valid.bin
    wsize=256
    wrecords=1000
    windowSize=10000
    unk="<unk>"
    wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
    file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.dev.IOB.simple
    features=[
      dim=0
      sectionType=data
    ]
    sequence=[
      dim=1
      wrecords=2
      sectionType=data
    ]
    labelIn=[
      dim=1
      labelDim=10000
      labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu/sentenceLabels.in.txt
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      usewordmap=true
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=11
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=11
        sectionType=categoryLabels
      ]
    ]
    labels=[
      dim=1
      labelType=Category
      beginSequence="O"
      endSequence="O"
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
      labelDim=10000
      labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu/sentenceLabels.out.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=3
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=3
        sectionType=categoryLabels
      ]
    ]
  ]
]

configparameters: rnnlu.ndl.cntk:LSTMTest=[
  action=write
  minibatchSize=100
  epochSize=4430000
  defaultHiddenActivity=0.1
  modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu/cntkdebug.dnn
  outputNodeNames=outputs
  reader=[
    readerType=LUSequenceReader
    randomize=None
    wordContext=0:1:2
    unk="<unk>"
    wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
    file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.test.apos.pred.pos.head.IOB.simple
    wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu/sequenceSentence.bin
    wsize=256
    wrecords=1000
    windowSize=10000
    features=[
      dim=0 
      sectionType=data
    ]
    sequence=[
      dim=1
      wrecords=2
      sectionType=data
    ]
    labelIn=[
      dim=1
      labelDim=10000
      labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu/sentenceLabels.txt
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      usewordmap=true
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=11
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=11
        sectionType=categoryLabels
      ]
    ]
    labels=[
      dim=1
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
      labelDim=127
      labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu/sentenceLabels.out.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=3
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=3
        sectionType=categoryLabels
      ]
    ]
  ]
  writer=[
    writerType=LUSequenceWriter
    outputs=[
      file=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu/output.rec.txt
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
    ]
  ]
]

configparameters: rnnlu.ndl.cntk:NdlDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
configparameters: rnnlu.ndl.cntk:OutDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu
configparameters: rnnlu.ndl.cntk:OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu
configparameters: rnnlu.ndl.cntk:precision=double
configparameters: rnnlu.ndl.cntk:RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu
configparameters: rnnlu.ndl.cntk:timestamping=true
configparameters: rnnlu.ndl.cntk:traceLevel=1
07/14/2016 06:30:27: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
07/14/2016 06:30:27: Commands: LSTM LSTMTest
07/14/2016 06:30:27: Precision = "double"
07/14/2016 06:30:27: CNTKModelPath: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu/cntkdebug.dnn
07/14/2016 06:30:27: CNTKCommandTrainInfo: LSTM : 3
07/14/2016 06:30:27: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 3

07/14/2016 06:30:27: ##############################################################################
07/14/2016 06:30:27: #                                                                            #
07/14/2016 06:30:27: # Action "train"                                                             #
07/14/2016 06:30:27: #                                                                            #
07/14/2016 06:30:27: ##############################################################################

07/14/2016 06:30:27: CNTKCommandTrainBegin: LSTM
NDLBuilder Using GPU 0
BatchLUSequenceReader: Input file is C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.train.apos.pred.pos.head.IOB.simple
BatchLUSequenceReader: Input file is C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.dev.IOB.simple

07/14/2016 06:30:27: Creating virgin network.
Microsoft::MSR::CNTK::GPUMatrix<ElemType>::SetUniformRandomValue (GPU): creating curand object with seed 1, sizeof(ElemType)==8

Post-processing network...

4 roots:
	LSTMoutputW1 = Times()
	ce = CrossEntropyWithSoftmax()
	err = CrossEntropyWithSoftmax()
	outputs = Softmax()

Loop[0] --> Loop_LSTMoutput.outputTest -> 31 nodes

	LSTMoutput.delayHO	LSTMoutput.WhodelayHO	LSTMoutput.unnamed134
	LSTMoutput.delayHF	LSTMoutput.WhfdelayHF	LSTMoutput.unnamed131
	LSTMoutput.delayCF	LSTMoutput.WcfdelayCF	LSTMoutput.unnamed130
	LSTMoutput.ft	LSTMoutput.delayCC	LSTMoutput.bft
	LSTMoutput.delayHI	LSTMoutput.WhidelayHI	LSTMoutput.unnamed125
	LSTMoutput.delayCI	LSTMoutput.WcidelayCI	LSTMoutput.unnamed124
	LSTMoutput.it	LSTMoutput.delayHC	LSTMoutput.WhcdelayHC
	LSTMoutput.unnamed129	LSTMoutput.unnamed128	LSTMoutput.unnamed127
	LSTMoutput.bit	LSTMoutput.ct	LSTMoutput.Wcoct
	LSTMoutput.unnamed133	LSTMoutput.ot	LSTMoutput.unnamed136
	LSTMoutput.outputTest

Validating network. 62 nodes to process in pass 1.

Validating --> W1 = LearnableParameter() :  -> [127 x 300]
Validating --> LSTMoutput.Wxo = LearnableParameter() :  -> [300 x 150]
Validating --> Wlookup = LearnableParameter() :  -> [50 x 944]
Validating --> features = InputValue() :  -> [2832 x *]
Validating --> featLookuped = LookupTable (Wlookup, features) : [50 x 944], [2832 x *] -> [150 x *]
Validating --> LSTMoutput.Wxoinput = Times (LSTMoutput.Wxo, featLookuped) : [300 x 150], [150 x *] -> [300 x *]
Validating --> LSTMoutput.bo = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.unnamed135 = Plus (LSTMoutput.Wxoinput, LSTMoutput.bo) : [300 x *], [300 x 1] -> [300 x 1 x *]
Validating --> LSTMoutput.Who = LearnableParameter() :  -> [300 x 300]
Validating --> LSTMoutput.Wco = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.Wxf = LearnableParameter() :  -> [300 x 150]
Validating --> LSTMoutput.Wxfinput = Times (LSTMoutput.Wxf, featLookuped) : [300 x 150], [150 x *] -> [300 x *]
Validating --> LSTMoutput.bf = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.unnamed132 = Plus (LSTMoutput.Wxfinput, LSTMoutput.bf) : [300 x *], [300 x 1] -> [300 x 1 x *]
Validating --> LSTMoutput.Whf = LearnableParameter() :  -> [300 x 300]
Validating --> LSTMoutput.Wcf = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.Wxi = LearnableParameter() :  -> [300 x 150]
Validating --> LSTMoutput.WxiInput = Times (LSTMoutput.Wxi, featLookuped) : [300 x 150], [150 x *] -> [300 x *]
Validating --> LSTMoutput.bi = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.unnamed126 = Plus (LSTMoutput.WxiInput, LSTMoutput.bi) : [300 x *], [300 x 1] -> [300 x 1 x *]
Validating --> LSTMoutput.Whi = LearnableParameter() :  -> [300 x 300]
Validating --> LSTMoutput.Wci = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.Wxc = LearnableParameter() :  -> [300 x 150]
Validating --> LSTMoutput.WxcInput = Times (LSTMoutput.Wxc, featLookuped) : [300 x 150], [150 x *] -> [300 x *]
Validating --> LSTMoutput.Whc = LearnableParameter() :  -> [300 x 300]
Validating --> LSTMoutput.bc = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.WhodelayHO = Times (LSTMoutput.Who, LSTMoutput.delayHO) : [300 x 300], [300] -> [300]
Validating --> LSTMoutput.unnamed134 = Plus (LSTMoutput.unnamed135, LSTMoutput.WhodelayHO) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> LSTMoutput.WhfdelayHF = Times (LSTMoutput.Whf, LSTMoutput.delayHF) : [300 x 300], [300] -> [300]
Validating --> LSTMoutput.unnamed131 = Plus (LSTMoutput.unnamed132, LSTMoutput.WhfdelayHF) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> LSTMoutput.WcfdelayCF = DiagTimes (LSTMoutput.Wcf, LSTMoutput.delayCF) : [300 x 1], [300] -> [300]
Validating --> LSTMoutput.unnamed130 = Plus (LSTMoutput.unnamed131, LSTMoutput.WcfdelayCF) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> LSTMoutput.ft = Sigmoid (LSTMoutput.unnamed130) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.bft = ElementTimes (LSTMoutput.ft, LSTMoutput.delayCC) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> LSTMoutput.WhidelayHI = Times (LSTMoutput.Whi, LSTMoutput.delayHI) : [300 x 300], [300] -> [300]
Validating --> LSTMoutput.unnamed125 = Plus (LSTMoutput.unnamed126, LSTMoutput.WhidelayHI) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> LSTMoutput.WcidelayCI = DiagTimes (LSTMoutput.Wci, LSTMoutput.delayCI) : [300 x 1], [300] -> [300]
Validating --> LSTMoutput.unnamed124 = Plus (LSTMoutput.unnamed125, LSTMoutput.WcidelayCI) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> LSTMoutput.it = Sigmoid (LSTMoutput.unnamed124) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.WhcdelayHC = Times (LSTMoutput.Whc, LSTMoutput.delayHC) : [300 x 300], [300] -> [300]
Validating --> LSTMoutput.unnamed129 = Plus (LSTMoutput.WhcdelayHC, LSTMoutput.bc) : [300], [300 x 1] -> [300 x 1]
Validating --> LSTMoutput.unnamed128 = Plus (LSTMoutput.WxcInput, LSTMoutput.unnamed129) : [300 x *], [300 x 1] -> [300 x 1 x *]
Validating --> LSTMoutput.unnamed127 = Tanh (LSTMoutput.unnamed128) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.bit = ElementTimes (LSTMoutput.it, LSTMoutput.unnamed127) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.ct = Plus (LSTMoutput.bft, LSTMoutput.bit) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.Wcoct = DiagTimes (LSTMoutput.Wco, LSTMoutput.ct) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.unnamed133 = Plus (LSTMoutput.unnamed134, LSTMoutput.Wcoct) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.ot = Sigmoid (LSTMoutput.unnamed133) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.unnamed136 = Tanh (LSTMoutput.ct) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.outputTest = ElementTimes (LSTMoutput.ot, LSTMoutput.unnamed136) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutputW1 = Times (W1, LSTMoutput.outputTest) : [127 x 300], [300 x 1 x *] -> [127 x 1 x *]
Validating --> labels = InputValue() :  -> [127 x *]
Validating --> ce = CrossEntropyWithSoftmax (labels, LSTMoutputW1) : [127 x *], [127 x 1 x *] -> [1]
Validating --> err = CrossEntropyWithSoftmax (labels, LSTMoutputW1) : [127 x *], [127 x 1 x *] -> [1]
Validating --> outputs = Softmax (LSTMoutputW1) : [127 x 1 x *] -> [127 x 1 x *]

Validating network. 43 nodes to process in pass 2.

Validating --> LSTMoutput.delayHO = PastValue (LSTMoutput.outputTest) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.WhodelayHO = Times (LSTMoutput.Who, LSTMoutput.delayHO) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.delayHF = PastValue (LSTMoutput.outputTest) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.WhfdelayHF = Times (LSTMoutput.Whf, LSTMoutput.delayHF) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.delayCF = PastValue (LSTMoutput.ct) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.WcfdelayCF = DiagTimes (LSTMoutput.Wcf, LSTMoutput.delayCF) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.delayCC = PastValue (LSTMoutput.ct) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.delayHI = PastValue (LSTMoutput.outputTest) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.WhidelayHI = Times (LSTMoutput.Whi, LSTMoutput.delayHI) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.delayCI = PastValue (LSTMoutput.ct) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.WcidelayCI = DiagTimes (LSTMoutput.Wci, LSTMoutput.delayCI) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.delayHC = PastValue (LSTMoutput.outputTest) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.WhcdelayHC = Times (LSTMoutput.Whc, LSTMoutput.delayHC) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.unnamed129 = Plus (LSTMoutput.WhcdelayHC, LSTMoutput.bc) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]

Validating network. 14 nodes to process in pass 3.


Validating network, final pass.



19 out of 62 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

07/14/2016 06:30:28: Created model with 62 nodes on GPU 0.

07/14/2016 06:30:28: Training criterion node(s):
07/14/2016 06:30:28: 	ce = CrossEntropyWithSoftmax

07/14/2016 06:30:28: Evaluation criterion node(s):

07/14/2016 06:30:28: 	err = CrossEntropyWithSoftmax


Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

0000000000000000: {[err Gradient[1]] [features Gradient[2832 x *]] [labels Gradient[127 x *]] [outputs Gradient[127 x 1 x *]] }
00000026D2799340: {[labels Value[127 x *]] }
00000026D27999C0: {[Wlookup Value[50 x 944]] }
00000026D2799B60: {[LSTMoutput.Wxo Value[300 x 150]] }
00000026D294AAA0: {[LSTMoutput.Wxoinput Value[300 x *]] [Wlookup Gradient[50 x 944]] }
00000026D294AB70: {[LSTMoutput.Wxfinput Value[300 x *]] [LSTMoutput.Wxoinput Gradient[300 x *]] }
00000026D294AC40: {[LSTMoutput.Wxf Gradient[300 x 150]] [LSTMoutput.unnamed132 Value[300 x 1 x *]] }
00000026D294AD10: {[LSTMoutput.Wco Value[300 x 1]] }
00000026D294ADE0: {[LSTMoutput.Wxfinput Gradient[300 x *]] [LSTMoutput.WxiInput Value[300 x *]] [LSTMoutput.bo Gradient[300 x 1]] }
00000026D294AEB0: {[LSTMoutput.Wxi Gradient[300 x 150]] [LSTMoutput.unnamed126 Value[300 x 1 x *]] }
00000026D294AF80: {[LSTMoutput.bi Value[300 x 1]] }
00000026D294B050: {[LSTMoutput.WhodelayHO Value[300 x 1 x *]] }
00000026D294B120: {[LSTMoutput.unnamed134 Value[300 x 1 x *]] }
00000026D294B1F0: {[LSTMoutput.Whf Value[300 x 300]] }
00000026D294B2C0: {[LSTMoutput.Wcf Value[300 x 1]] }
00000026D294B390: {[LSTMoutput.delayCC Value[300 x 1 x *]] }
00000026D294B460: {[LSTMoutputW1 Value[127 x 1 x *]] }
00000026D294B530: {[featLookuped Value[150 x *]] }
00000026D294B600: {[LSTMoutput.Wxo Gradient[300 x 150]] [LSTMoutput.unnamed135 Value[300 x 1 x *]] }
00000026D294B6D0: {[LSTMoutput.WhfdelayHF Value[300 x 1 x *]] }
00000026D294B7A0: {[LSTMoutput.WxcInput Value[300 x *]] [LSTMoutput.WxiInput Gradient[300 x *]] [LSTMoutput.bf Gradient[300 x 1]] }
00000026D294B870: {[LSTMoutput.unnamed131 Value[300 x 1 x *]] }
00000026D294B940: {[LSTMoutput.WcfdelayCF Value[300 x 1 x *]] }
00000026D294BA10: {[LSTMoutput.bo Value[300 x 1]] }
00000026D294BAE0: {[LSTMoutput.Wxi Value[300 x 150]] }
00000026D294BBB0: {[LSTMoutput.Wci Value[300 x 1]] }
00000026D294BC80: {[LSTMoutput.bf Value[300 x 1]] }
00000026D294BD50: {[LSTMoutput.Wxf Value[300 x 150]] }
00000026D294BE20: {[LSTMoutput.bc Value[300 x 1]] }
00000026D294BEF0: {[LSTMoutput.Whc Value[300 x 300]] }
00000026D294BFC0: {[LSTMoutput.Wxc Gradient[300 x 150]] [LSTMoutput.delayHO Value[300 x 1 x *]] }
00000026D294C090: {[LSTMoutput.delayHC Value[300 x 1 x *]] }
00000026D294C160: {[LSTMoutput.delayCF Value[300 x 1 x *]] }
00000026D294C230: {[W1 Value[127 x 300]] }
00000026D294C300: {[LSTMoutput.Whi Value[300 x 300]] }
00000026D294C3D0: {[LSTMoutput.Who Value[300 x 300]] }
00000026D294C4A0: {[err Value[1]] }
00000026D294C570: {[ce Value[1]] }
00000026D294C640: {[LSTMoutput.delayHI Value[300 x 1 x *]] }
00000026D294C710: {[LSTMoutput.Wxc Value[300 x 150]] }
00000026D294C7E0: {[LSTMoutput.delayHF Value[300 x 1 x *]] }
00000026D294C8B0: {[LSTMoutput.delayCI Value[300 x 1 x *]] }
00000026D294C980: {[outputs Value[127 x 1 x *]] }
00000026D2DB0120: {[LSTMoutput.unnamed133 Gradient[300 x 1 x *]] }
00000026D2DB01F0: {[LSTMoutput.Wcoct Gradient[300 x 1 x *]] }
00000026D2DB0460: {[LSTMoutput.Wco Gradient[300 x 1]] }
00000026D2DB0530: {[LSTMoutput.bit Gradient[300 x 1 x *]] }
00000026D2DB06D0: {[LSTMoutput.WcidelayCI Value[300 x 1 x *]] }
00000026D2DB07A0: {[LSTMoutput.it Value[300 x 1 x *]] }
00000026D2DB0870: {[LSTMoutput.bft Value[300 x 1 x *]] }
00000026D2DB0940: {[LSTMoutput.WhcdelayHC Value[300 x 1 x *]] }
00000026D2DB0A10: {[LSTMoutput.ot Value[300 x 1 x *]] }
00000026D2DB0AE0: {[LSTMoutput.outputTest Value[300 x 1 x *]] }
00000026D2DB0C80: {[LSTMoutput.outputTest Gradient[300 x 1 x *]] }
00000026D2DB0D50: {[LSTMoutput.unnamed134 Gradient[300 x 1 x *]] }
00000026D2DB0E20: {[LSTMoutput.unnamed136 Value[300 x 1 x *]] }
00000026D2DB0EF0: {[LSTMoutput.unnamed127 Value[300 x 1 x *]] }
00000026D2DB0FC0: {[LSTMoutput.it Gradient[300 x 1 x *]] }
00000026D2DB1090: {[LSTMoutput.unnamed127 Gradient[300 x 1 x *]] }
00000026D2DB1160: {[LSTMoutput.ct Gradient[300 x 1 x *]] }
00000026D2DB1230: {[LSTMoutput.bft Gradient[300 x 1 x *]] }
00000026D2DB1300: {[ce Gradient[1]] }
00000026D2DB13D0: {[LSTMoutput.WhidelayHI Value[300 x 1 x *]] }
00000026D2DB14A0: {[LSTMoutput.ot Gradient[300 x 1 x *]] [LSTMoutputW1 Gradient[127 x 1 x *]] }
00000026D2DB1570: {[LSTMoutput.unnamed125 Value[300 x 1 x *]] }
00000026D2DB1640: {[W1 Gradient[127 x 300]] }
00000026D2DB1710: {[LSTMoutput.bit Value[300 x 1 x *]] }
00000026D2DB17E0: {[LSTMoutput.unnamed128 Value[300 x 1 x *]] }
00000026D2DB18B0: {[LSTMoutput.Wcoct Value[300 x 1 x *]] }
00000026D2DB1A50: {[LSTMoutput.unnamed136 Gradient[300 x 1 x *]] }
00000026D2DB1B20: {[LSTMoutput.unnamed129 Value[300 x 1 x *]] }
00000026D2DB1BF0: {[LSTMoutput.unnamed124 Value[300 x 1 x *]] }
00000026D2DB1CC0: {[LSTMoutput.ft Value[300 x 1 x *]] }
00000026D2DB1D90: {[LSTMoutput.ct Value[300 x 1 x *]] }
00000026D2DB1E60: {[LSTMoutput.unnamed133 Value[300 x 1 x *]] }
00000026D2DB1F30: {[LSTMoutput.unnamed130 Value[300 x 1 x *]] }
00000026D2DB4140: {[LSTMoutput.WhcdelayHC Gradient[300 x 1 x *]] }
00000026D2DB4210: {[LSTMoutput.Whc Gradient[300 x 300]] }
00000026D2DB42E0: {[LSTMoutput.unnamed125 Gradient[300 x 1 x *]] }
00000026D2DB43B0: {[LSTMoutput.WhfdelayHF Gradient[300 x 1 x *]] }
00000026D2DB4480: {[LSTMoutput.WcidelayCI Gradient[300 x 1 x *]] }
00000026D2DB4550: {[LSTMoutput.unnamed128 Gradient[300 x 1 x *]] }
00000026D2DB4620: {[LSTMoutput.WcfdelayCF Gradient[300 x 1 x *]] }
00000026D2DB47C0: {[LSTMoutput.WxcInput Gradient[300 x *]] [LSTMoutput.bi Gradient[300 x 1]] }
00000026D2DB4890: {[LSTMoutput.Who Gradient[300 x 300]] }
00000026D2DB4A30: {[LSTMoutput.unnamed135 Gradient[300 x 1 x *]] }
00000026D2DB4B00: {[LSTMoutput.unnamed126 Gradient[300 x 1 x *]] }
00000026D2DB4BD0: {[LSTMoutput.ft Gradient[300 x 1 x *]] }
00000026D2DB4D70: {[LSTMoutput.delayHC Gradient[300 x 1 x *]] }
00000026D2DB4E40: {[LSTMoutput.Whi Gradient[300 x 300]] }
00000026D2DB4F10: {[LSTMoutput.Wci Gradient[300 x 1]] }
00000026D2DB4FE0: {[LSTMoutput.delayCC Gradient[300 x 1 x *]] }
00000026D2DB50B0: {[LSTMoutput.unnamed124 Gradient[300 x 1 x *]] }
00000026D2DB5180: {[LSTMoutput.unnamed130 Gradient[300 x 1 x *]] }
00000026D2DB5250: {[LSTMoutput.delayHI Gradient[300 x 1 x *]] }
00000026D2DB5320: {[LSTMoutput.unnamed131 Gradient[300 x 1 x *]] }
00000026D2DB53F0: {[LSTMoutput.WhidelayHI Gradient[300 x 1 x *]] }
00000026D2DB54C0: {[LSTMoutput.delayCI Gradient[300 x 1 x *]] }
00000026D2DB5660: {[LSTMoutput.Wcf Gradient[300 x 1]] }
00000026D2DB5800: {[LSTMoutput.delayCF Gradient[300 x 1 x *]] }
00000026D2DB58D0: {[LSTMoutput.Whf Gradient[300 x 300]] }
00000026D2DB59A0: {[LSTMoutput.delayHF Gradient[300 x 1 x *]] }
00000026D2DB5A70: {[LSTMoutput.WhodelayHO Gradient[300 x 1 x *]] }
00000026D2DB5B40: {[LSTMoutput.delayHO Gradient[300 x 1 x *]] [featLookuped Gradient[150 x *]] }
00000026D2DB5CE0: {[LSTMoutput.unnamed129 Gradient[300 x 1 x *]] }
00000026D2DB5E80: {[LSTMoutput.bc Gradient[300 x 1]] }
00000026D2DB6020: {[LSTMoutput.unnamed132 Gradient[300 x 1 x *]] }
00000026E3345410: {[features Value[2832 x *]] }

07/14/2016 06:30:28: No PreCompute nodes found, skipping PreCompute step.

07/14/2016 06:30:28: Starting Epoch 1: learning rate per sample = 0.100000  effective momentum = 0.900000  momentum as time constant = 94.9 samples

07/14/2016 06:30:28: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 51 lines with a total of 36+51 tokens.
WARNING: The same matrix with dim [127, 3] has been transferred between different devices for 20 times.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
07/14/2016 06:30:29: Finished Epoch[ 1 of 3]: [Training] ce = 4.77060648 * 81; err = 4.77060648 * 81; totalSamplesSeen = 81; learningRatePerSample = 0.1; epochTime=0.665797s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 51 lines with a total of 36+51 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
07/14/2016 06:30:29: Final Results: Minibatch[1-51]: ce = 4.45895737 * 81; perplexity = 86.39738119; err = 4.45895737 * 81; perplexity = 86.39738119
07/14/2016 06:30:29: Finished Epoch[ 1 of 3]: [Validate] ce = 4.45895737 * 81; err = 4.45895737 * 81
07/14/2016 06:30:29: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu/cntkdebug.dnn.1'

07/14/2016 06:30:29: Starting Epoch 2: learning rate per sample = 0.100000  effective momentum = 0.900000  momentum as time constant = 94.9 samples

07/14/2016 06:30:29: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 51 lines with a total of 36+51 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
07/14/2016 06:30:29: Finished Epoch[ 2 of 3]: [Training] ce = 4.12548252 * 81; err = 4.12548252 * 81; totalSamplesSeen = 162; learningRatePerSample = 0.1; epochTime=0.437302s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 51 lines with a total of 36+51 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
07/14/2016 06:30:30: Final Results: Minibatch[1-51]: ce = 3.44040758 * 81; perplexity = 31.19967203; err = 3.44040758 * 81; perplexity = 31.19967203
07/14/2016 06:30:30: Finished Epoch[ 2 of 3]: [Validate] ce = 3.44040758 * 81; err = 3.44040758 * 81
07/14/2016 06:30:30: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu/cntkdebug.dnn.2'

07/14/2016 06:30:31: Starting Epoch 3: learning rate per sample = 0.100000  effective momentum = 0.900000  momentum as time constant = 94.9 samples

07/14/2016 06:30:31: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 51 lines with a total of 36+51 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
07/14/2016 06:30:31: Finished Epoch[ 3 of 3]: [Training] ce = 2.82809840 * 81; err = 2.82809840 * 81; totalSamplesSeen = 243; learningRatePerSample = 0.1; epochTime=0.435516s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 51 lines with a total of 36+51 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
07/14/2016 06:30:32: Final Results: Minibatch[1-51]: ce = 2.20553143 * 81; perplexity = 9.07507308; err = 2.20553143 * 81; perplexity = 9.07507308
07/14/2016 06:30:32: Finished Epoch[ 3 of 3]: [Validate] ce = 2.20553143 * 81; err = 2.20553143 * 81
07/14/2016 06:30:32: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_gpu/cntkdebug.dnn'
07/14/2016 06:30:32: CNTKCommandTrainEnd: LSTM

07/14/2016 06:30:32: Action "train" complete.


07/14/2016 06:30:32: ##############################################################################
07/14/2016 06:30:32: #                                                                            #
07/14/2016 06:30:32: # Action "write"                                                             #
07/14/2016 06:30:32: #                                                                            #
07/14/2016 06:30:32: ##############################################################################

BatchLUSequenceReader: Input file is C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.test.apos.pred.pos.head.IOB.simple

Post-processing network...

3 roots:
	ce = CrossEntropyWithSoftmax()
	err = CrossEntropyWithSoftmax()
	outputs = Softmax()

Loop[0] --> Loop_LSTMoutput.outputTest -> 31 nodes

	LSTMoutput.delayHO	LSTMoutput.WhodelayHO	LSTMoutput.unnamed134
	LSTMoutput.delayHF	LSTMoutput.WhfdelayHF	LSTMoutput.unnamed131
	LSTMoutput.delayCF	LSTMoutput.WcfdelayCF	LSTMoutput.unnamed130
	LSTMoutput.ft	LSTMoutput.delayCC	LSTMoutput.bft
	LSTMoutput.delayHI	LSTMoutput.WhidelayHI	LSTMoutput.unnamed125
	LSTMoutput.delayCI	LSTMoutput.WcidelayCI	LSTMoutput.unnamed124
	LSTMoutput.it	LSTMoutput.delayHC	LSTMoutput.WhcdelayHC
	LSTMoutput.unnamed129	LSTMoutput.unnamed128	LSTMoutput.unnamed127
	LSTMoutput.bit	LSTMoutput.ct	LSTMoutput.Wcoct
	LSTMoutput.unnamed133	LSTMoutput.ot	LSTMoutput.unnamed136
	LSTMoutput.outputTest

Validating network. 62 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [127 x *1]
Validating --> W1 = LearnableParameter() :  -> [127 x 300]
Validating --> LSTMoutput.Wxo = LearnableParameter() :  -> [300 x 150]
Validating --> Wlookup = LearnableParameter() :  -> [50 x 944]
Validating --> features = InputValue() :  -> [2832 x *1]
Validating --> featLookuped = LookupTable (Wlookup, features) : [50 x 944], [2832 x *1] -> [150 x *1]
Validating --> LSTMoutput.Wxoinput = Times (LSTMoutput.Wxo, featLookuped) : [300 x 150], [150 x *1] -> [300 x *1]
Validating --> LSTMoutput.bo = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.unnamed135 = Plus (LSTMoutput.Wxoinput, LSTMoutput.bo) : [300 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> LSTMoutput.Who = LearnableParameter() :  -> [300 x 300]
Validating --> LSTMoutput.Wco = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.Wxf = LearnableParameter() :  -> [300 x 150]
Validating --> LSTMoutput.Wxfinput = Times (LSTMoutput.Wxf, featLookuped) : [300 x 150], [150 x *1] -> [300 x *1]
Validating --> LSTMoutput.bf = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.unnamed132 = Plus (LSTMoutput.Wxfinput, LSTMoutput.bf) : [300 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> LSTMoutput.Whf = LearnableParameter() :  -> [300 x 300]
Validating --> LSTMoutput.Wcf = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.Wxi = LearnableParameter() :  -> [300 x 150]
Validating --> LSTMoutput.WxiInput = Times (LSTMoutput.Wxi, featLookuped) : [300 x 150], [150 x *1] -> [300 x *1]
Validating --> LSTMoutput.bi = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.unnamed126 = Plus (LSTMoutput.WxiInput, LSTMoutput.bi) : [300 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> LSTMoutput.Whi = LearnableParameter() :  -> [300 x 300]
Validating --> LSTMoutput.Wci = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.Wxc = LearnableParameter() :  -> [300 x 150]
Validating --> LSTMoutput.WxcInput = Times (LSTMoutput.Wxc, featLookuped) : [300 x 150], [150 x *1] -> [300 x *1]
Validating --> LSTMoutput.Whc = LearnableParameter() :  -> [300 x 300]
Validating --> LSTMoutput.bc = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.WhodelayHO = Times (LSTMoutput.Who, LSTMoutput.delayHO) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> LSTMoutput.unnamed134 = Plus (LSTMoutput.unnamed135, LSTMoutput.WhodelayHO) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WhfdelayHF = Times (LSTMoutput.Whf, LSTMoutput.delayHF) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> LSTMoutput.unnamed131 = Plus (LSTMoutput.unnamed132, LSTMoutput.WhfdelayHF) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WcfdelayCF = DiagTimes (LSTMoutput.Wcf, LSTMoutput.delayCF) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> LSTMoutput.unnamed130 = Plus (LSTMoutput.unnamed131, LSTMoutput.WcfdelayCF) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> LSTMoutput.ft = Sigmoid (LSTMoutput.unnamed130) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.bft = ElementTimes (LSTMoutput.ft, LSTMoutput.delayCC) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WhidelayHI = Times (LSTMoutput.Whi, LSTMoutput.delayHI) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> LSTMoutput.unnamed125 = Plus (LSTMoutput.unnamed126, LSTMoutput.WhidelayHI) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WcidelayCI = DiagTimes (LSTMoutput.Wci, LSTMoutput.delayCI) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> LSTMoutput.unnamed124 = Plus (LSTMoutput.unnamed125, LSTMoutput.WcidelayCI) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> LSTMoutput.it = Sigmoid (LSTMoutput.unnamed124) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WhcdelayHC = Times (LSTMoutput.Whc, LSTMoutput.delayHC) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> LSTMoutput.unnamed129 = Plus (LSTMoutput.WhcdelayHC, LSTMoutput.bc) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> LSTMoutput.unnamed128 = Plus (LSTMoutput.WxcInput, LSTMoutput.unnamed129) : [300 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> LSTMoutput.unnamed127 = Tanh (LSTMoutput.unnamed128) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.bit = ElementTimes (LSTMoutput.it, LSTMoutput.unnamed127) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.ct = Plus (LSTMoutput.bft, LSTMoutput.bit) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.Wcoct = DiagTimes (LSTMoutput.Wco, LSTMoutput.ct) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.unnamed133 = Plus (LSTMoutput.unnamed134, LSTMoutput.Wcoct) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.ot = Sigmoid (LSTMoutput.unnamed133) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.unnamed136 = Tanh (LSTMoutput.ct) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.outputTest = ElementTimes (LSTMoutput.ot, LSTMoutput.unnamed136) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutputW1 = Times (W1, LSTMoutput.outputTest) : [127 x 300], [300 x 1 x *1] -> [127 x 1 x *1]
Validating --> ce = CrossEntropyWithSoftmax (labels, LSTMoutputW1) : [127 x *1], [127 x 1 x *1] -> [1]
Validating --> err = CrossEntropyWithSoftmax (labels, LSTMoutputW1) : [127 x *1], [127 x 1 x *1] -> [1]
Validating --> outputs = Softmax (LSTMoutputW1) : [127 x 1 x *1] -> [127 x 1 x *1]

Validating network. 43 nodes to process in pass 2.

Validating --> LSTMoutput.delayHO = PastValue (LSTMoutput.outputTest) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WhodelayHO = Times (LSTMoutput.Who, LSTMoutput.delayHO) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.delayHF = PastValue (LSTMoutput.outputTest) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WhfdelayHF = Times (LSTMoutput.Whf, LSTMoutput.delayHF) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.delayCF = PastValue (LSTMoutput.ct) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WcfdelayCF = DiagTimes (LSTMoutput.Wcf, LSTMoutput.delayCF) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.delayCC = PastValue (LSTMoutput.ct) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.delayHI = PastValue (LSTMoutput.outputTest) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WhidelayHI = Times (LSTMoutput.Whi, LSTMoutput.delayHI) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.delayCI = PastValue (LSTMoutput.ct) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WcidelayCI = DiagTimes (LSTMoutput.Wci, LSTMoutput.delayCI) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.delayHC = PastValue (LSTMoutput.outputTest) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WhcdelayHC = Times (LSTMoutput.Whc, LSTMoutput.delayHC) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.unnamed129 = Plus (LSTMoutput.WhcdelayHC, LSTMoutput.bc) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]

Validating network. 14 nodes to process in pass 3.


Validating network, final pass.



19 out of 62 nodes do not share the minibatch layout with the input data.

Post-processing network complete.



Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

0000000000000000: {[LSTMoutput.Wcf Gradient[300 x 1]] [LSTMoutput.WcfdelayCF Gradient[300 x 1 x *1]] [LSTMoutput.Wci Gradient[300 x 1]] [LSTMoutput.WcidelayCI Gradient[300 x 1 x *1]] [LSTMoutput.Wco Gradient[300 x 1]] [LSTMoutput.Wcoct Gradient[300 x 1 x *1]] [LSTMoutput.Whc Gradient[300 x 300]] [LSTMoutput.WhcdelayHC Gradient[300 x 1 x *1]] [LSTMoutput.Whf Gradient[300 x 300]] [LSTMoutput.WhfdelayHF Gradient[300 x 1 x *1]] [LSTMoutput.Whi Gradient[300 x 300]] [LSTMoutput.WhidelayHI Gradient[300 x 1 x *1]] [LSTMoutput.Who Gradient[300 x 300]] [LSTMoutput.WhodelayHO Gradient[300 x 1 x *1]] [LSTMoutput.Wxc Gradient[300 x 150]] [LSTMoutput.WxcInput Gradient[300 x *1]] [LSTMoutput.Wxf Gradient[300 x 150]] [LSTMoutput.Wxfinput Gradient[300 x *1]] [LSTMoutput.Wxi Gradient[300 x 150]] [LSTMoutput.WxiInput Gradient[300 x *1]] [LSTMoutput.Wxo Gradient[300 x 150]] [LSTMoutput.Wxoinput Gradient[300 x *1]] [LSTMoutput.bc Gradient[300 x 1]] [LSTMoutput.bf Gradient[300 x 1]] [LSTMoutput.bft Gradient[300 x 1 x *1]] [LSTMoutput.bi Gradient[300 x 1]] [LSTMoutput.bit Gradient[300 x 1 x *1]] [LSTMoutput.bo Gradient[300 x 1]] [LSTMoutput.ct Gradient[300 x 1 x *1]] [LSTMoutput.delayCC Gradient[300 x 1 x *1]] [LSTMoutput.delayCF Gradient[300 x 1 x *1]] [LSTMoutput.delayCI Gradient[300 x 1 x *1]] [LSTMoutput.delayHC Gradient[300 x 1 x *1]] [LSTMoutput.delayHF Gradient[300 x 1 x *1]] [LSTMoutput.delayHI Gradient[300 x 1 x *1]] [LSTMoutput.delayHO Gradient[300 x 1 x *1]] [LSTMoutput.ft Gradient[300 x 1 x *1]] [LSTMoutput.it Gradient[300 x 1 x *1]] [LSTMoutput.ot Gradient[300 x 1 x *1]] [LSTMoutput.outputTest Gradient[300 x 1 x *1]] [LSTMoutput.unnamed124 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed125 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed126 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed127 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed128 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed129 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed130 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed131 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed132 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed133 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed134 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed135 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed136 Gradient[300 x 1 x *1]] [LSTMoutputW1 Gradient[127 x 1 x *1]] [W1 Gradient[127 x 300]] [Wlookup Gradient[50 x 944]] [ce Gradient[1]] [ce Value[1]] [err Gradient[1]] [err Value[1]] [featLookuped Gradient[150 x *1]] [features Gradient[2832 x *1]] [labels Gradient[127 x *1]] [outputs Gradient[127 x 1 x *1]] }
00000026D2799340: {[labels Value[127 x *1]] }
00000026D27999C0: {[LSTMoutput.bc Value[300 x 1]] }
00000026D2799B60: {[features Value[2832 x *1]] }
00000026D294AAA0: {[featLookuped Value[150 x *1]] }
00000026D294AB70: {[LSTMoutput.Who Value[300 x 300]] }
00000026D294AC40: {[LSTMoutput.unnamed132 Value[300 x 1 x *1]] }
00000026D294AD10: {[LSTMoutput.delayHO Value[300 x 1 x *1]] }
00000026D294ADE0: {[LSTMoutput.bft Value[300 x 1 x *1]] }
00000026D294AEB0: {[LSTMoutput.delayHF Value[300 x 1 x *1]] }
00000026D294AF80: {[LSTMoutput.Wxo Value[300 x 150]] }
00000026D294B050: {[LSTMoutput.Wco Value[300 x 1]] }
00000026D294B120: {[LSTMoutput.Whf Value[300 x 300]] }
00000026D294B1F0: {[LSTMoutput.Wxc Value[300 x 150]] }
00000026D294B2C0: {[LSTMoutput.bi Value[300 x 1]] }
00000026D294B390: {[LSTMoutput.delayHI Value[300 x 1 x *1]] }
00000026D294B460: {[Wlookup Value[50 x 944]] }
00000026D294B530: {[outputs Value[127 x 1 x *1]] }
00000026D294B600: {[LSTMoutput.delayCI Value[300 x 1 x *1]] }
00000026D294B6D0: {[LSTMoutput.Wxoinput Value[300 x *1]] }
00000026D294B7A0: {[LSTMoutput.Wxfinput Value[300 x *1]] }
00000026D294B870: {[LSTMoutput.unnamed126 Value[300 x 1 x *1]] }
00000026D294B940: {[LSTMoutput.delayHC Value[300 x 1 x *1]] }
00000026D294BA10: {[LSTMoutput.delayCC Value[300 x 1 x *1]] }
00000026D294BAE0: {[LSTMoutput.Wxi Value[300 x 150]] }
00000026D294BBB0: {[LSTMoutput.WcfdelayCF Value[300 x 1 x *1]] }
00000026D294BC80: {[LSTMoutput.bo Value[300 x 1]] }
00000026D294BD50: {[LSTMoutput.Whc Value[300 x 300]] }
00000026D294BE20: {[LSTMoutput.WxcInput Value[300 x *1]] }
00000026D294BEF0: {[LSTMoutput.WhodelayHO Value[300 x 1 x *1]] }
00000026D294BFC0: {[LSTMoutput.delayCF Value[300 x 1 x *1]] }
00000026D294C090: {[LSTMoutput.Wci Value[300 x 1]] }
00000026D294C160: {[LSTMoutput.Whi Value[300 x 300]] }
00000026D294C230: {[LSTMoutput.unnamed134 Value[300 x 1 x *1]] }
00000026D294C300: {[LSTMoutput.WhfdelayHF Value[300 x 1 x *1]] }
00000026D294C3D0: {[LSTMoutput.unnamed130 Value[300 x 1 x *1]] }
00000026D294C4A0: {[LSTMoutput.Wxf Value[300 x 150]] }
00000026D294C570: {[W1 Value[127 x 300]] }
00000026D294C640: {[LSTMoutput.unnamed135 Value[300 x 1 x *1]] }
00000026D294C710: {[LSTMoutput.unnamed131 Value[300 x 1 x *1]] }
00000026D294C7E0: {[LSTMoutput.ft Value[300 x 1 x *1]] }
00000026D294C8B0: {[LSTMoutput.WxiInput Value[300 x *1]] }
00000026D294C980: {[LSTMoutput.Wcf Value[300 x 1]] }
00000026D2960E10: {[LSTMoutput.unnamed127 Value[300 x 1 x *1]] }
00000026D2960FB0: {[LSTMoutput.Wcoct Value[300 x 1 x *1]] }
00000026D2961080: {[LSTMoutput.unnamed124 Value[300 x 1 x *1]] }
00000026D2961150: {[LSTMoutput.unnamed136 Value[300 x 1 x *1]] }
00000026D2961220: {[LSTMoutputW1 Value[127 x 1 x *1]] }
00000026D29612F0: {[LSTMoutput.unnamed125 Value[300 x 1 x *1]] }
00000026D29613C0: {[LSTMoutput.WcidelayCI Value[300 x 1 x *1]] }
00000026D2961490: {[LSTMoutput.it Value[300 x 1 x *1]] }
00000026D2961560: {[LSTMoutput.bit Value[300 x 1 x *1]] }
00000026D2961630: {[LSTMoutput.unnamed133 Value[300 x 1 x *1]] }
00000026D2961B10: {[LSTMoutput.outputTest Value[300 x 1 x *1]] }
00000026D2961BE0: {[LSTMoutput.unnamed128 Value[300 x 1 x *1]] }
00000026D2961CB0: {[LSTMoutput.ot Value[300 x 1 x *1]] }
00000026D2962330: {[LSTMoutput.WhcdelayHC Value[300 x 1 x *1]] }
00000026D29625A0: {[LSTMoutput.unnamed129 Value[300 x 1 x *1]] }
00000026D2962740: {[LSTMoutput.ct Value[300 x 1 x *1]] }
00000026D29628E0: {[LSTMoutput.WhidelayHI Value[300 x 1 x *1]] }
00000026E3345410: {[LSTMoutput.bf Value[300 x 1]] }

BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 5 lines with a total of 92+5 tokens.
O O O O O O O O O O O O O O O O O O O O O 
O O O O O O O O O O O O O O O O O O 
O O O O O O O O O O O O O O O 
O O O O O O O O O O O O O O O O O O 
O O O O O O O O O O O O O O O O O O O 
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
Total Samples Evaluated = 91

07/14/2016 06:30:32: Action "write" complete.

07/14/2016 06:30:32: __COMPLETED__