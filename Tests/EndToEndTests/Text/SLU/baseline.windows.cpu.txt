CPU info:
    CPU Model Name: Intel(R) Xeon(R) CPU W3565 @ 3.20GHz
    Hardware threads: 8
    Total Memory: 12580436 kB
-------------------------------------------------------------------
=== Running /cygdrive/c/jenkins/workspace/CNTK-Test-Windows-W1/x64/debug/cntk.exe configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/globals.cntk+rnnlu.ndl.cntk currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu DeviceId=-1 timestamping=true
-------------------------------------------------------------------
Build info: 

		Built time: Jul 14 2016 05:11:35
		Last modified date: Thu Jul 14 03:20:47 2016
		Build type: Debug
		Build target: GPU
		With 1bit-SGD: no
		Math lib: mkl
		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
		CUB_PATH: C:\src\cub-1.4.1
		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
		Build Branch: HEAD
		Build SHA1: 72bee394bf461e8f6f0feb593a8416c05f481957
		Built by svcphil on liana-08-w
		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
-------------------------------------------------------------------
Changed current directory to C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
07/14/2016 06:30:08: -------------------------------------------------------------------
07/14/2016 06:30:08: Build info: 

07/14/2016 06:30:08: 		Built time: Jul 14 2016 05:11:35
07/14/2016 06:30:08: 		Last modified date: Thu Jul 14 03:20:47 2016
07/14/2016 06:30:08: 		Build type: Debug
07/14/2016 06:30:08: 		Build target: GPU
07/14/2016 06:30:08: 		With 1bit-SGD: no
07/14/2016 06:30:08: 		Math lib: mkl
07/14/2016 06:30:08: 		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
07/14/2016 06:30:08: 		CUB_PATH: C:\src\cub-1.4.1
07/14/2016 06:30:08: 		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
07/14/2016 06:30:08: 		Build Branch: HEAD
07/14/2016 06:30:08: 		Build SHA1: 72bee394bf461e8f6f0feb593a8416c05f481957
07/14/2016 06:30:08: 		Built by svcphil on liana-08-w
07/14/2016 06:30:08: 		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
07/14/2016 06:30:08: -------------------------------------------------------------------
07/14/2016 06:30:08: -------------------------------------------------------------------
07/14/2016 06:30:08: GPU info:

07/14/2016 06:30:08: 		Device[0]: cores = 2496; computeCapability = 5.2; type = "Quadro M4000"; memory = 8192 MB
07/14/2016 06:30:08: -------------------------------------------------------------------

07/14/2016 06:30:08: Running on cntk-muc01 at 2016/07/14 06:30:08
07/14/2016 06:30:08: Command line: 
C:\jenkins\workspace\CNTK-Test-Windows-W1\x64\debug\cntk.exe  configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/globals.cntk+rnnlu.ndl.cntk  currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU  RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu  DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU  ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU  OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu  DeviceId=-1  timestamping=true



07/14/2016 06:30:08: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
07/14/2016 06:30:08: NdlDir=$ConfigDir$
ExpDir=$RunDir$
OutDir=$OutputDir$
precision="double"
deviceId = $DeviceId$
command=LSTM:LSTMTest
traceLevel=1
LSTM=[
  action=train
  makeMode=true
  minibatchSize=10
  epochSize=4430000
  modelPath=$ExpDir$/cntkdebug.dnn
  NDLNetworkBuilder=[
      networkDescription=$NdlDir$/lstm.ndl
  ]
  SGD=[
    learningRatesPerSample=0.1
    momentumPerMB=0.90
    gradientClippingWithTruncation=true
    clippingThresholdPerSample=15.0
    maxEpochs=3
    gradientcheck=false
    numMBsToShowResult=1000
    loadBestModel=true
    AutoAdjust=[
      autoAdjustLR=adjustafterepoch
      reduceLearnRateIfImproveLessThan=0
      increaseLearnRateIfImproveMoreThan=1000000000
      learnRateDecreaseFactor=0.5
      learnRateIncreaseFactor=1.382
      numMiniBatch4LRSearch=100
      numPrevLearnRates=5
      numBestSearchEpoch=1
    ]
    dropoutRate=0
  ]
  reader=[
    readerType=LUSequenceReader
    wordContext=0:1:2
    randomize=None
    nbruttsineachrecurrentiter=10
    wfile=$ExpDir$/sequenceSentence.bin
    wsize=256
    wrecords=1000
    windowSize=10000
    unk="<unk>"
    wordmap=$DataDir$/inputmap.txt
    file=$DataDir$/atis.train.apos.pred.pos.head.IOB.simple
    features=[
      dim=0
      sectionType=data
    ]
    sequence=[
      dim=1
      wrecords=2
      sectionType=data
    ]
    labelIn=[
      dim=1
      usewordmap=true
      labelDim=10000
      labelMappingFile=$ExpDir$/sentenceLabels.txt
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      usewordmap=true
      token=$DataDir$/input.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=11
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=11
        sectionType=categoryLabels
      ]
    ]
    labels=[
      dim=1
      labelType=Category
      beginSequence="O"
      endSequence="O"
      token=$DataDir$/output.txt
    labelMappingFile=$ExpDir$/sentenceLabels.out.txt
      sectionType=labels
      mapping=[
        sectionType=labelMapping
      ]
      category=[
        sectionType=categoryLabels
      ]
    ]
  ]
  cvReader=[
    readerType=LUSequenceReader
    randomize=None
    wordContext=0:1:2
    wfile=$ExpDir$/sequenceSentence.valid.bin
    wsize=256
    wrecords=1000
    windowSize=10000
    unk="<unk>"
    wordmap=$DataDir$/inputmap.txt
    file=$DataDir$/atis.dev.IOB.simple
    features=[
      dim=0
      sectionType=data
    ]
    sequence=[
      dim=1
      wrecords=2
      sectionType=data
    ]
    labelIn=[
      dim=1
      labelDim=10000
      labelMappingFile=$ExpDir$/sentenceLabels.in.txt
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      usewordmap=true
      token=$DataDir$/input.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=11
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=11
        sectionType=categoryLabels
      ]
    ]
    labels=[
      dim=1
      labelType=Category
      beginSequence="O"
      endSequence="O"
      token=$DataDir$/output.txt
      labelDim=10000
      labelMappingFile=$ExpDir$/sentenceLabels.out.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=3
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=3
        sectionType=categoryLabels
      ]
    ]
  ]
]
LSTMTest=[
  action=write
  minibatchSize=100
  epochSize=4430000
  defaultHiddenActivity=0.1
  modelPath=$ExpDir$/cntkdebug.dnn
  outputNodeNames=outputs
  reader=[
    readerType=LUSequenceReader
    randomize=None
    wordContext=0:1:2
    unk="<unk>"
    wordmap=$DataDir$/inputmap.txt
    file=$DataDir$/atis.test.apos.pred.pos.head.IOB.simple
    wfile=$ExpDir$/sequenceSentence.bin
    wsize=256
    wrecords=1000
    windowSize=10000
    features=[
      dim=0 
      sectionType=data
    ]
    sequence=[
      dim=1
      wrecords=2
      sectionType=data
    ]
    labelIn=[
      dim=1
      labelDim=10000
      labelMappingFile=$ExpDir$/sentenceLabels.txt
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      usewordmap=true
      token=$DataDir$/input.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=11
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=11
        sectionType=categoryLabels
      ]
    ]
    labels=[
      dim=1
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      token=$DataDir$/output.txt
      labelDim=127
      labelMappingFile=$ExpDir$/sentenceLabels.out.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=3
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=3
        sectionType=categoryLabels
      ]
    ]
  ]
  writer=[
    writerType=LUSequenceWriter
    outputs=[
      file=$OutDir$/output.rec.txt
      token=$DataDir$/output.txt
    ]
  ]
]
currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu
DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu
DeviceId=-1
timestamping=true

07/14/2016 06:30:08: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<

07/14/2016 06:30:08: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
07/14/2016 06:30:08: NdlDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
ExpDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu
OutDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu
precision="double"
deviceId = -1
command=LSTM:LSTMTest
traceLevel=1
LSTM=[
  action=train
  makeMode=true
  minibatchSize=10
  epochSize=4430000
  modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu/cntkdebug.dnn
  NDLNetworkBuilder=[
      networkDescription=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/lstm.ndl
  ]
  SGD=[
    learningRatesPerSample=0.1
    momentumPerMB=0.90
    gradientClippingWithTruncation=true
    clippingThresholdPerSample=15.0
    maxEpochs=3
    gradientcheck=false
    numMBsToShowResult=1000
    loadBestModel=true
    AutoAdjust=[
      autoAdjustLR=adjustafterepoch
      reduceLearnRateIfImproveLessThan=0
      increaseLearnRateIfImproveMoreThan=1000000000
      learnRateDecreaseFactor=0.5
      learnRateIncreaseFactor=1.382
      numMiniBatch4LRSearch=100
      numPrevLearnRates=5
      numBestSearchEpoch=1
    ]
    dropoutRate=0
  ]
  reader=[
    readerType=LUSequenceReader
    wordContext=0:1:2
    randomize=None
    nbruttsineachrecurrentiter=10
    wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu/sequenceSentence.bin
    wsize=256
    wrecords=1000
    windowSize=10000
    unk="<unk>"
    wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
    file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.train.apos.pred.pos.head.IOB.simple
    features=[
      dim=0
      sectionType=data
    ]
    sequence=[
      dim=1
      wrecords=2
      sectionType=data
    ]
    labelIn=[
      dim=1
      usewordmap=true
      labelDim=10000
      labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu/sentenceLabels.txt
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      usewordmap=true
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=11
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=11
        sectionType=categoryLabels
      ]
    ]
    labels=[
      dim=1
      labelType=Category
      beginSequence="O"
      endSequence="O"
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
    labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu/sentenceLabels.out.txt
      sectionType=labels
      mapping=[
        sectionType=labelMapping
      ]
      category=[
        sectionType=categoryLabels
      ]
    ]
  ]
  cvReader=[
    readerType=LUSequenceReader
    randomize=None
    wordContext=0:1:2
    wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu/sequenceSentence.valid.bin
    wsize=256
    wrecords=1000
    windowSize=10000
    unk="<unk>"
    wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
    file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.dev.IOB.simple
    features=[
      dim=0
      sectionType=data
    ]
    sequence=[
      dim=1
      wrecords=2
      sectionType=data
    ]
    labelIn=[
      dim=1
      labelDim=10000
      labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu/sentenceLabels.in.txt
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      usewordmap=true
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=11
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=11
        sectionType=categoryLabels
      ]
    ]
    labels=[
      dim=1
      labelType=Category
      beginSequence="O"
      endSequence="O"
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
      labelDim=10000
      labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu/sentenceLabels.out.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=3
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=3
        sectionType=categoryLabels
      ]
    ]
  ]
]
LSTMTest=[
  action=write
  minibatchSize=100
  epochSize=4430000
  defaultHiddenActivity=0.1
  modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu/cntkdebug.dnn
  outputNodeNames=outputs
  reader=[
    readerType=LUSequenceReader
    randomize=None
    wordContext=0:1:2
    unk="<unk>"
    wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
    file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.test.apos.pred.pos.head.IOB.simple
    wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu/sequenceSentence.bin
    wsize=256
    wrecords=1000
    windowSize=10000
    features=[
      dim=0 
      sectionType=data
    ]
    sequence=[
      dim=1
      wrecords=2
      sectionType=data
    ]
    labelIn=[
      dim=1
      labelDim=10000
      labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu/sentenceLabels.txt
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      usewordmap=true
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=11
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=11
        sectionType=categoryLabels
      ]
    ]
    labels=[
      dim=1
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
      labelDim=127
      labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu/sentenceLabels.out.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=3
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=3
        sectionType=categoryLabels
      ]
    ]
  ]
  writer=[
    writerType=LUSequenceWriter
    outputs=[
      file=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu/output.rec.txt
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
    ]
  ]
]
currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu
DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu
DeviceId=-1
timestamping=true

07/14/2016 06:30:08: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<

07/14/2016 06:30:08: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
configparameters: rnnlu.ndl.cntk:command=LSTM:LSTMTest
configparameters: rnnlu.ndl.cntk:ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
configparameters: rnnlu.ndl.cntk:currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
configparameters: rnnlu.ndl.cntk:DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
configparameters: rnnlu.ndl.cntk:deviceId=-1
configparameters: rnnlu.ndl.cntk:ExpDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu
configparameters: rnnlu.ndl.cntk:LSTM=[
  action=train
  makeMode=true
  minibatchSize=10
  epochSize=4430000
  modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu/cntkdebug.dnn
  NDLNetworkBuilder=[
      networkDescription=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/lstm.ndl
  ]
  SGD=[
    learningRatesPerSample=0.1
    momentumPerMB=0.90
    gradientClippingWithTruncation=true
    clippingThresholdPerSample=15.0
    maxEpochs=3
    gradientcheck=false
    numMBsToShowResult=1000
    loadBestModel=true
    AutoAdjust=[
      autoAdjustLR=adjustafterepoch
      reduceLearnRateIfImproveLessThan=0
      increaseLearnRateIfImproveMoreThan=1000000000
      learnRateDecreaseFactor=0.5
      learnRateIncreaseFactor=1.382
      numMiniBatch4LRSearch=100
      numPrevLearnRates=5
      numBestSearchEpoch=1
    ]
    dropoutRate=0
  ]
  reader=[
    readerType=LUSequenceReader
    wordContext=0:1:2
    randomize=None
    nbruttsineachrecurrentiter=10
    wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu/sequenceSentence.bin
    wsize=256
    wrecords=1000
    windowSize=10000
    unk="<unk>"
    wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
    file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.train.apos.pred.pos.head.IOB.simple
    features=[
      dim=0
      sectionType=data
    ]
    sequence=[
      dim=1
      wrecords=2
      sectionType=data
    ]
    labelIn=[
      dim=1
      usewordmap=true
      labelDim=10000
      labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu/sentenceLabels.txt
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      usewordmap=true
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=11
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=11
        sectionType=categoryLabels
      ]
    ]
    labels=[
      dim=1
      labelType=Category
      beginSequence="O"
      endSequence="O"
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
    labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu/sentenceLabels.out.txt
      sectionType=labels
      mapping=[
        sectionType=labelMapping
      ]
      category=[
        sectionType=categoryLabels
      ]
    ]
  ]
  cvReader=[
    readerType=LUSequenceReader
    randomize=None
    wordContext=0:1:2
    wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu/sequenceSentence.valid.bin
    wsize=256
    wrecords=1000
    windowSize=10000
    unk="<unk>"
    wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
    file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.dev.IOB.simple
    features=[
      dim=0
      sectionType=data
    ]
    sequence=[
      dim=1
      wrecords=2
      sectionType=data
    ]
    labelIn=[
      dim=1
      labelDim=10000
      labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu/sentenceLabels.in.txt
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      usewordmap=true
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=11
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=11
        sectionType=categoryLabels
      ]
    ]
    labels=[
      dim=1
      labelType=Category
      beginSequence="O"
      endSequence="O"
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
      labelDim=10000
      labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu/sentenceLabels.out.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=3
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=3
        sectionType=categoryLabels
      ]
    ]
  ]
]

configparameters: rnnlu.ndl.cntk:LSTMTest=[
  action=write
  minibatchSize=100
  epochSize=4430000
  defaultHiddenActivity=0.1
  modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu/cntkdebug.dnn
  outputNodeNames=outputs
  reader=[
    readerType=LUSequenceReader
    randomize=None
    wordContext=0:1:2
    unk="<unk>"
    wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
    file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.test.apos.pred.pos.head.IOB.simple
    wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu/sequenceSentence.bin
    wsize=256
    wrecords=1000
    windowSize=10000
    features=[
      dim=0 
      sectionType=data
    ]
    sequence=[
      dim=1
      wrecords=2
      sectionType=data
    ]
    labelIn=[
      dim=1
      labelDim=10000
      labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu/sentenceLabels.txt
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      usewordmap=true
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=11
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=11
        sectionType=categoryLabels
      ]
    ]
    labels=[
      dim=1
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
      labelDim=127
      labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu/sentenceLabels.out.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=3
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=3
        sectionType=categoryLabels
      ]
    ]
  ]
  writer=[
    writerType=LUSequenceWriter
    outputs=[
      file=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu/output.rec.txt
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
    ]
  ]
]

configparameters: rnnlu.ndl.cntk:NdlDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
configparameters: rnnlu.ndl.cntk:OutDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu
configparameters: rnnlu.ndl.cntk:OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu
configparameters: rnnlu.ndl.cntk:precision=double
configparameters: rnnlu.ndl.cntk:RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu
configparameters: rnnlu.ndl.cntk:timestamping=true
configparameters: rnnlu.ndl.cntk:traceLevel=1
07/14/2016 06:30:08: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
07/14/2016 06:30:08: Commands: LSTM LSTMTest
07/14/2016 06:30:08: Precision = "double"
07/14/2016 06:30:08: CNTKModelPath: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu/cntkdebug.dnn
07/14/2016 06:30:08: CNTKCommandTrainInfo: LSTM : 3
07/14/2016 06:30:08: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 3

07/14/2016 06:30:08: ##############################################################################
07/14/2016 06:30:08: #                                                                            #
07/14/2016 06:30:08: # Action "train"                                                             #
07/14/2016 06:30:08: #                                                                            #
07/14/2016 06:30:08: ##############################################################################

07/14/2016 06:30:08: CNTKCommandTrainBegin: LSTM
NDLBuilder Using CPU
BatchLUSequenceReader: Input file is C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.train.apos.pred.pos.head.IOB.simple
BatchLUSequenceReader: Input file is C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.dev.IOB.simple

07/14/2016 06:30:09: Creating virgin network.

Post-processing network...

4 roots:
	LSTMoutputW1 = Times()
	ce = CrossEntropyWithSoftmax()
	err = CrossEntropyWithSoftmax()
	outputs = Softmax()

Loop[0] --> Loop_LSTMoutput.outputTest -> 31 nodes

	LSTMoutput.delayHO	LSTMoutput.WhodelayHO	LSTMoutput.unnamed134
	LSTMoutput.delayHF	LSTMoutput.WhfdelayHF	LSTMoutput.unnamed131
	LSTMoutput.delayCF	LSTMoutput.WcfdelayCF	LSTMoutput.unnamed130
	LSTMoutput.ft	LSTMoutput.delayCC	LSTMoutput.bft
	LSTMoutput.delayHI	LSTMoutput.WhidelayHI	LSTMoutput.unnamed125
	LSTMoutput.delayCI	LSTMoutput.WcidelayCI	LSTMoutput.unnamed124
	LSTMoutput.it	LSTMoutput.delayHC	LSTMoutput.WhcdelayHC
	LSTMoutput.unnamed129	LSTMoutput.unnamed128	LSTMoutput.unnamed127
	LSTMoutput.bit	LSTMoutput.ct	LSTMoutput.Wcoct
	LSTMoutput.unnamed133	LSTMoutput.ot	LSTMoutput.unnamed136
	LSTMoutput.outputTest

Validating network. 62 nodes to process in pass 1.

Validating --> W1 = LearnableParameter() :  -> [127 x 300]
Validating --> LSTMoutput.Wxo = LearnableParameter() :  -> [300 x 150]
Validating --> Wlookup = LearnableParameter() :  -> [50 x 944]
Validating --> features = InputValue() :  -> [2832 x *]
Validating --> featLookuped = LookupTable (Wlookup, features) : [50 x 944], [2832 x *] -> [150 x *]
Validating --> LSTMoutput.Wxoinput = Times (LSTMoutput.Wxo, featLookuped) : [300 x 150], [150 x *] -> [300 x *]
Validating --> LSTMoutput.bo = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.unnamed135 = Plus (LSTMoutput.Wxoinput, LSTMoutput.bo) : [300 x *], [300 x 1] -> [300 x 1 x *]
Validating --> LSTMoutput.Who = LearnableParameter() :  -> [300 x 300]
Validating --> LSTMoutput.Wco = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.Wxf = LearnableParameter() :  -> [300 x 150]
Validating --> LSTMoutput.Wxfinput = Times (LSTMoutput.Wxf, featLookuped) : [300 x 150], [150 x *] -> [300 x *]
Validating --> LSTMoutput.bf = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.unnamed132 = Plus (LSTMoutput.Wxfinput, LSTMoutput.bf) : [300 x *], [300 x 1] -> [300 x 1 x *]
Validating --> LSTMoutput.Whf = LearnableParameter() :  -> [300 x 300]
Validating --> LSTMoutput.Wcf = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.Wxi = LearnableParameter() :  -> [300 x 150]
Validating --> LSTMoutput.WxiInput = Times (LSTMoutput.Wxi, featLookuped) : [300 x 150], [150 x *] -> [300 x *]
Validating --> LSTMoutput.bi = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.unnamed126 = Plus (LSTMoutput.WxiInput, LSTMoutput.bi) : [300 x *], [300 x 1] -> [300 x 1 x *]
Validating --> LSTMoutput.Whi = LearnableParameter() :  -> [300 x 300]
Validating --> LSTMoutput.Wci = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.Wxc = LearnableParameter() :  -> [300 x 150]
Validating --> LSTMoutput.WxcInput = Times (LSTMoutput.Wxc, featLookuped) : [300 x 150], [150 x *] -> [300 x *]
Validating --> LSTMoutput.Whc = LearnableParameter() :  -> [300 x 300]
Validating --> LSTMoutput.bc = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.WhodelayHO = Times (LSTMoutput.Who, LSTMoutput.delayHO) : [300 x 300], [300] -> [300]
Validating --> LSTMoutput.unnamed134 = Plus (LSTMoutput.unnamed135, LSTMoutput.WhodelayHO) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> LSTMoutput.WhfdelayHF = Times (LSTMoutput.Whf, LSTMoutput.delayHF) : [300 x 300], [300] -> [300]
Validating --> LSTMoutput.unnamed131 = Plus (LSTMoutput.unnamed132, LSTMoutput.WhfdelayHF) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> LSTMoutput.WcfdelayCF = DiagTimes (LSTMoutput.Wcf, LSTMoutput.delayCF) : [300 x 1], [300] -> [300]
Validating --> LSTMoutput.unnamed130 = Plus (LSTMoutput.unnamed131, LSTMoutput.WcfdelayCF) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> LSTMoutput.ft = Sigmoid (LSTMoutput.unnamed130) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.bft = ElementTimes (LSTMoutput.ft, LSTMoutput.delayCC) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> LSTMoutput.WhidelayHI = Times (LSTMoutput.Whi, LSTMoutput.delayHI) : [300 x 300], [300] -> [300]
Validating --> LSTMoutput.unnamed125 = Plus (LSTMoutput.unnamed126, LSTMoutput.WhidelayHI) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> LSTMoutput.WcidelayCI = DiagTimes (LSTMoutput.Wci, LSTMoutput.delayCI) : [300 x 1], [300] -> [300]
Validating --> LSTMoutput.unnamed124 = Plus (LSTMoutput.unnamed125, LSTMoutput.WcidelayCI) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> LSTMoutput.it = Sigmoid (LSTMoutput.unnamed124) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.WhcdelayHC = Times (LSTMoutput.Whc, LSTMoutput.delayHC) : [300 x 300], [300] -> [300]
Validating --> LSTMoutput.unnamed129 = Plus (LSTMoutput.WhcdelayHC, LSTMoutput.bc) : [300], [300 x 1] -> [300 x 1]
Validating --> LSTMoutput.unnamed128 = Plus (LSTMoutput.WxcInput, LSTMoutput.unnamed129) : [300 x *], [300 x 1] -> [300 x 1 x *]
Validating --> LSTMoutput.unnamed127 = Tanh (LSTMoutput.unnamed128) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.bit = ElementTimes (LSTMoutput.it, LSTMoutput.unnamed127) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.ct = Plus (LSTMoutput.bft, LSTMoutput.bit) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.Wcoct = DiagTimes (LSTMoutput.Wco, LSTMoutput.ct) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.unnamed133 = Plus (LSTMoutput.unnamed134, LSTMoutput.Wcoct) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.ot = Sigmoid (LSTMoutput.unnamed133) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.unnamed136 = Tanh (LSTMoutput.ct) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.outputTest = ElementTimes (LSTMoutput.ot, LSTMoutput.unnamed136) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutputW1 = Times (W1, LSTMoutput.outputTest) : [127 x 300], [300 x 1 x *] -> [127 x 1 x *]
Validating --> labels = InputValue() :  -> [127 x *]
Validating --> ce = CrossEntropyWithSoftmax (labels, LSTMoutputW1) : [127 x *], [127 x 1 x *] -> [1]
Validating --> err = CrossEntropyWithSoftmax (labels, LSTMoutputW1) : [127 x *], [127 x 1 x *] -> [1]
Validating --> outputs = Softmax (LSTMoutputW1) : [127 x 1 x *] -> [127 x 1 x *]

Validating network. 43 nodes to process in pass 2.

Validating --> LSTMoutput.delayHO = PastValue (LSTMoutput.outputTest) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.WhodelayHO = Times (LSTMoutput.Who, LSTMoutput.delayHO) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.delayHF = PastValue (LSTMoutput.outputTest) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.WhfdelayHF = Times (LSTMoutput.Whf, LSTMoutput.delayHF) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.delayCF = PastValue (LSTMoutput.ct) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.WcfdelayCF = DiagTimes (LSTMoutput.Wcf, LSTMoutput.delayCF) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.delayCC = PastValue (LSTMoutput.ct) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.delayHI = PastValue (LSTMoutput.outputTest) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.WhidelayHI = Times (LSTMoutput.Whi, LSTMoutput.delayHI) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.delayCI = PastValue (LSTMoutput.ct) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.WcidelayCI = DiagTimes (LSTMoutput.Wci, LSTMoutput.delayCI) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.delayHC = PastValue (LSTMoutput.outputTest) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.WhcdelayHC = Times (LSTMoutput.Whc, LSTMoutput.delayHC) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.unnamed129 = Plus (LSTMoutput.WhcdelayHC, LSTMoutput.bc) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]

Validating network. 14 nodes to process in pass 3.


Validating network, final pass.



19 out of 62 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

07/14/2016 06:30:09: Created model with 62 nodes on CPU.

07/14/2016 06:30:09: Training criterion node(s):
07/14/2016 06:30:09: 	ce = CrossEntropyWithSoftmax

07/14/2016 06:30:09: Evaluation criterion node(s):

07/14/2016 06:30:09: 	err = CrossEntropyWithSoftmax


Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

0000000000000000: {[err Gradient[1]] [features Gradient[2832 x *]] [labels Gradient[127 x *]] [outputs Gradient[127 x 1 x *]] }
000000F13D23BF10: {[LSTMoutput.ot Value[300 x 1 x *]] }
000000F13D23BFE0: {[LSTMoutput.Wcoct Gradient[300 x 1 x *]] }
000000F13D23C180: {[LSTMoutput.WhcdelayHC Gradient[300 x 1 x *]] }
000000F13D23C250: {[LSTMoutput.bc Gradient[300 x 1]] }
000000F13D23C320: {[LSTMoutput.delayHC Gradient[300 x 1 x *]] }
000000F13D23C3F0: {[LSTMoutput.unnamed133 Value[300 x 1 x *]] }
000000F13D23C660: {[LSTMoutput.Wco Gradient[300 x 1]] }
000000F13D23C730: {[LSTMoutput.unnamed136 Value[300 x 1 x *]] }
000000F13D23C800: {[LSTMoutput.unnamed128 Gradient[300 x 1 x *]] }
000000F13D23C8D0: {[LSTMoutput.Whc Gradient[300 x 300]] }
000000F13D23C9A0: {[LSTMoutput.unnamed134 Gradient[300 x 1 x *]] }
000000F13D23CA70: {[LSTMoutput.unnamed124 Gradient[300 x 1 x *]] }
000000F13D23CB40: {[ce Gradient[1]] }
000000F13D23CC10: {[LSTMoutput.WcidelayCI Gradient[300 x 1 x *]] }
000000F13D23CCE0: {[LSTMoutput.unnamed136 Gradient[300 x 1 x *]] }
000000F13D23CE80: {[LSTMoutput.bit Gradient[300 x 1 x *]] }
000000F13D23CF50: {[LSTMoutput.ot Gradient[300 x 1 x *]] [LSTMoutputW1 Gradient[127 x 1 x *]] }
000000F13D23D020: {[W1 Gradient[127 x 300]] }
000000F13D23D0F0: {[LSTMoutput.ct Gradient[300 x 1 x *]] }
000000F13D23D1C0: {[LSTMoutput.it Gradient[300 x 1 x *]] }
000000F13D23D290: {[LSTMoutput.unnamed127 Gradient[300 x 1 x *]] }
000000F13D23D360: {[LSTMoutput.unnamed129 Gradient[300 x 1 x *]] }
000000F13D23D430: {[LSTMoutput.bft Gradient[300 x 1 x *]] }
000000F13D23D500: {[LSTMoutput.outputTest Value[300 x 1 x *]] }
000000F13D23D5D0: {[LSTMoutput.outputTest Gradient[300 x 1 x *]] }
000000F13D23D6A0: {[LSTMoutput.WxcInput Gradient[300 x *]] [LSTMoutput.bi Gradient[300 x 1]] }
000000F13D23D770: {[LSTMoutput.unnamed125 Gradient[300 x 1 x *]] }
000000F13D23DB80: {[LSTMoutput.Wci Gradient[300 x 1]] }
000000F13D23DC50: {[LSTMoutput.delayCI Gradient[300 x 1 x *]] }
000000F13D23DD20: {[LSTMoutput.unnamed126 Gradient[300 x 1 x *]] }
000000F13D23DDF0: {[LSTMoutput.unnamed133 Gradient[300 x 1 x *]] }
000000F13D5CC5A0: {[LSTMoutput.delayHF Value[300 x 1 x *]] }
000000F13D5CC670: {[LSTMoutput.Wxc Gradient[300 x 150]] [LSTMoutput.delayHO Value[300 x 1 x *]] }
000000F13D5CC740: {[LSTMoutput.delayHC Value[300 x 1 x *]] }
000000F13D5CC810: {[LSTMoutput.unnamed131 Value[300 x 1 x *]] }
000000F13D5CC8E0: {[LSTMoutput.Wxf Gradient[300 x 150]] [LSTMoutput.unnamed132 Value[300 x 1 x *]] }
000000F13D5CC9B0: {[LSTMoutput.delayCC Value[300 x 1 x *]] }
000000F13D5CCA80: {[LSTMoutputW1 Value[127 x 1 x *]] }
000000F13D5CCB50: {[LSTMoutput.Wxoinput Value[300 x *]] [Wlookup Gradient[50 x 944]] }
000000F13D5CCC20: {[LSTMoutput.Wxo Gradient[300 x 150]] [LSTMoutput.unnamed135 Value[300 x 1 x *]] }
000000F13D5CCCF0: {[LSTMoutput.Wxfinput Value[300 x *]] [LSTMoutput.Wxoinput Gradient[300 x *]] }
000000F13D5CCDC0: {[LSTMoutput.WhfdelayHF Value[300 x 1 x *]] }
000000F13D5CCE90: {[LSTMoutput.delayCI Value[300 x 1 x *]] }
000000F13D5CCF60: {[LSTMoutput.WcfdelayCF Value[300 x 1 x *]] }
000000F13D5CD030: {[LSTMoutput.unnamed130 Value[300 x 1 x *]] }
000000F13D5CD100: {[W1 Value[127 x 300]] }
000000F13D5CD1D0: {[LSTMoutput.ft Value[300 x 1 x *]] }
000000F13D5CD2A0: {[LSTMoutput.WhidelayHI Value[300 x 1 x *]] }
000000F13D5CD370: {[LSTMoutput.unnamed124 Value[300 x 1 x *]] }
000000F13D5CD440: {[LSTMoutput.it Value[300 x 1 x *]] }
000000F13D5CD510: {[LSTMoutput.bit Value[300 x 1 x *]] }
000000F13D5CD5E0: {[LSTMoutput.unnamed127 Value[300 x 1 x *]] }
000000F13D5CD6B0: {[LSTMoutput.delayCF Value[300 x 1 x *]] }
000000F13D5CD780: {[LSTMoutput.bft Value[300 x 1 x *]] }
000000F13D5CD850: {[LSTMoutput.WhcdelayHC Value[300 x 1 x *]] }
000000F13D5CD920: {[err Value[1]] }
000000F13D5CD9F0: {[ce Value[1]] }
000000F13D5CDAC0: {[LSTMoutput.Wxi Gradient[300 x 150]] [LSTMoutput.unnamed126 Value[300 x 1 x *]] }
000000F13D5CDB90: {[LSTMoutput.WxcInput Value[300 x *]] [LSTMoutput.WxiInput Gradient[300 x *]] [LSTMoutput.bf Gradient[300 x 1]] }
000000F13D5CDC60: {[LSTMoutput.WhodelayHO Value[300 x 1 x *]] }
000000F13D5CDD30: {[LSTMoutput.unnamed129 Value[300 x 1 x *]] }
000000F13D5CDE00: {[LSTMoutput.Wcoct Value[300 x 1 x *]] }
000000F13D5CDED0: {[LSTMoutput.Wxfinput Gradient[300 x *]] [LSTMoutput.WxiInput Value[300 x *]] [LSTMoutput.bo Gradient[300 x 1]] }
000000F13D5CDFA0: {[LSTMoutput.unnamed125 Value[300 x 1 x *]] }
000000F13D5CE070: {[LSTMoutput.ct Value[300 x 1 x *]] }
000000F13D5CE140: {[outputs Value[127 x 1 x *]] }
000000F13D5CE210: {[featLookuped Value[150 x *]] }
000000F13D5CE2E0: {[LSTMoutput.unnamed134 Value[300 x 1 x *]] }
000000F13D5CE3B0: {[LSTMoutput.WcidelayCI Value[300 x 1 x *]] }
000000F13D5CE480: {[LSTMoutput.unnamed128 Value[300 x 1 x *]] }
000000F13E85EBD0: {[LSTMoutput.Who Gradient[300 x 300]] }
000000F13E85ECA0: {[LSTMoutput.delayHI Gradient[300 x 1 x *]] }
000000F13E85ED70: {[LSTMoutput.unnamed135 Gradient[300 x 1 x *]] }
000000F13E85EE40: {[LSTMoutput.WhfdelayHF Gradient[300 x 1 x *]] }
000000F13E85EF10: {[LSTMoutput.Whf Gradient[300 x 300]] }
000000F13E85EFE0: {[LSTMoutput.WcfdelayCF Gradient[300 x 1 x *]] }
000000F13E85F4C0: {[LSTMoutput.WhidelayHI Gradient[300 x 1 x *]] }
000000F13E85F590: {[LSTMoutput.Whi Gradient[300 x 300]] }
000000F13E85F8D0: {[LSTMoutput.delayHF Gradient[300 x 1 x *]] }
000000F13E85F9A0: {[LSTMoutput.Wcf Gradient[300 x 1]] }
000000F13E85FA70: {[LSTMoutput.WhodelayHO Gradient[300 x 1 x *]] }
000000F13E85FF50: {[LSTMoutput.unnamed131 Gradient[300 x 1 x *]] }
000000F13E860020: {[LSTMoutput.unnamed132 Gradient[300 x 1 x *]] }
000000F13E860290: {[LSTMoutput.unnamed130 Gradient[300 x 1 x *]] }
000000F13E8606A0: {[LSTMoutput.delayCF Gradient[300 x 1 x *]] }
000000F13E860840: {[LSTMoutput.delayCC Gradient[300 x 1 x *]] }
000000F13E860910: {[LSTMoutput.ft Gradient[300 x 1 x *]] }
000000F13E8609E0: {[LSTMoutput.delayHO Gradient[300 x 1 x *]] [featLookuped Gradient[150 x *]] }
000000F13EED5280: {[features Value[2832 x *]] }
000000F13EED5350: {[LSTMoutput.Wci Value[300 x 1]] }
000000F13EED5420: {[LSTMoutput.Wxf Value[300 x 150]] }
000000F13EED54F0: {[LSTMoutput.Who Value[300 x 300]] }
000000F13EED55C0: {[LSTMoutput.Wcf Value[300 x 1]] }
000000F13EED5690: {[LSTMoutput.delayHI Value[300 x 1 x *]] }
000000F13EED5760: {[LSTMoutput.Wxc Value[300 x 150]] }
000000F13EED5830: {[LSTMoutput.bc Value[300 x 1]] }
000000F13EED5900: {[LSTMoutput.Wxi Value[300 x 150]] }
000000F13EED59D0: {[labels Value[127 x *]] }
000000F13EED5AA0: {[LSTMoutput.bf Value[300 x 1]] }
000000F13EED5B70: {[Wlookup Value[50 x 944]] }
000000F13EED5C40: {[LSTMoutput.bo Value[300 x 1]] }
000000F13EED5D10: {[LSTMoutput.Wxo Value[300 x 150]] }
000000F13EED5DE0: {[LSTMoutput.Whi Value[300 x 300]] }
000000F13EED5EB0: {[LSTMoutput.Whf Value[300 x 300]] }
000000F13EED5F80: {[LSTMoutput.Whc Value[300 x 300]] }
000000F13EED6050: {[LSTMoutput.Wco Value[300 x 1]] }
000000F13EED6120: {[LSTMoutput.bi Value[300 x 1]] }

07/14/2016 06:30:09: No PreCompute nodes found, skipping PreCompute step.

07/14/2016 06:30:09: Starting Epoch 1: learning rate per sample = 0.100000  effective momentum = 0.900000  momentum as time constant = 94.9 samples

07/14/2016 06:30:09: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 51 lines with a total of 36+51 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
07/14/2016 06:30:13: Finished Epoch[ 1 of 3]: [Training] ce = 4.73985552 * 81; err = 4.73985552 * 81; totalSamplesSeen = 81; learningRatePerSample = 0.1; epochTime=3.56598s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 51 lines with a total of 36+51 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
07/14/2016 06:30:14: Final Results: Minibatch[1-51]: ce = 4.47236315 * 81; perplexity = 87.56340456; err = 4.47236315 * 81; perplexity = 87.56340456
07/14/2016 06:30:14: Finished Epoch[ 1 of 3]: [Validate] ce = 4.47236315 * 81; err = 4.47236315 * 81
07/14/2016 06:30:14: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu/cntkdebug.dnn.1'

07/14/2016 06:30:14: Starting Epoch 2: learning rate per sample = 0.100000  effective momentum = 0.900000  momentum as time constant = 94.9 samples

07/14/2016 06:30:14: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 51 lines with a total of 36+51 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
07/14/2016 06:30:17: Finished Epoch[ 2 of 3]: [Training] ce = 4.18123967 * 81; err = 4.18123967 * 81; totalSamplesSeen = 162; learningRatePerSample = 0.1; epochTime=3.5436s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 51 lines with a total of 36+51 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
07/14/2016 06:30:18: Final Results: Minibatch[1-51]: ce = 3.57867566 * 81; perplexity = 35.82606362; err = 3.57867566 * 81; perplexity = 35.82606362
07/14/2016 06:30:18: Finished Epoch[ 2 of 3]: [Validate] ce = 3.57867566 * 81; err = 3.57867566 * 81
07/14/2016 06:30:18: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu/cntkdebug.dnn.2'

07/14/2016 06:30:18: Starting Epoch 3: learning rate per sample = 0.100000  effective momentum = 0.900000  momentum as time constant = 94.9 samples

07/14/2016 06:30:18: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 51 lines with a total of 36+51 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
07/14/2016 06:30:22: Finished Epoch[ 3 of 3]: [Training] ce = 2.99693329 * 81; err = 2.99693329 * 81; totalSamplesSeen = 243; learningRatePerSample = 0.1; epochTime=3.53891s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 51 lines with a total of 36+51 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
07/14/2016 06:30:22: Final Results: Minibatch[1-51]: ce = 2.27111876 * 81; perplexity = 9.69023576; err = 2.27111876 * 81; perplexity = 9.69023576
07/14/2016 06:30:22: Finished Epoch[ 3 of 3]: [Validate] ce = 2.27111876 * 81; err = 2.27111876 * 81
07/14/2016 06:30:22: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160714055016.501646\Text_SLU@debug_cpu/cntkdebug.dnn'
07/14/2016 06:30:22: CNTKCommandTrainEnd: LSTM

07/14/2016 06:30:22: Action "train" complete.


07/14/2016 06:30:22: ##############################################################################
07/14/2016 06:30:22: #                                                                            #
07/14/2016 06:30:22: # Action "write"                                                             #
07/14/2016 06:30:22: #                                                                            #
07/14/2016 06:30:22: ##############################################################################

BatchLUSequenceReader: Input file is C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.test.apos.pred.pos.head.IOB.simple

Post-processing network...

3 roots:
	ce = CrossEntropyWithSoftmax()
	err = CrossEntropyWithSoftmax()
	outputs = Softmax()

Loop[0] --> Loop_LSTMoutput.outputTest -> 31 nodes

	LSTMoutput.delayHO	LSTMoutput.WhodelayHO	LSTMoutput.unnamed134
	LSTMoutput.delayHF	LSTMoutput.WhfdelayHF	LSTMoutput.unnamed131
	LSTMoutput.delayCF	LSTMoutput.WcfdelayCF	LSTMoutput.unnamed130
	LSTMoutput.ft	LSTMoutput.delayCC	LSTMoutput.bft
	LSTMoutput.delayHI	LSTMoutput.WhidelayHI	LSTMoutput.unnamed125
	LSTMoutput.delayCI	LSTMoutput.WcidelayCI	LSTMoutput.unnamed124
	LSTMoutput.it	LSTMoutput.delayHC	LSTMoutput.WhcdelayHC
	LSTMoutput.unnamed129	LSTMoutput.unnamed128	LSTMoutput.unnamed127
	LSTMoutput.bit	LSTMoutput.ct	LSTMoutput.Wcoct
	LSTMoutput.unnamed133	LSTMoutput.ot	LSTMoutput.unnamed136
	LSTMoutput.outputTest

Validating network. 62 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [127 x *1]
Validating --> W1 = LearnableParameter() :  -> [127 x 300]
Validating --> LSTMoutput.Wxo = LearnableParameter() :  -> [300 x 150]
Validating --> Wlookup = LearnableParameter() :  -> [50 x 944]
Validating --> features = InputValue() :  -> [2832 x *1]
Validating --> featLookuped = LookupTable (Wlookup, features) : [50 x 944], [2832 x *1] -> [150 x *1]
Validating --> LSTMoutput.Wxoinput = Times (LSTMoutput.Wxo, featLookuped) : [300 x 150], [150 x *1] -> [300 x *1]
Validating --> LSTMoutput.bo = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.unnamed135 = Plus (LSTMoutput.Wxoinput, LSTMoutput.bo) : [300 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> LSTMoutput.Who = LearnableParameter() :  -> [300 x 300]
Validating --> LSTMoutput.Wco = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.Wxf = LearnableParameter() :  -> [300 x 150]
Validating --> LSTMoutput.Wxfinput = Times (LSTMoutput.Wxf, featLookuped) : [300 x 150], [150 x *1] -> [300 x *1]
Validating --> LSTMoutput.bf = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.unnamed132 = Plus (LSTMoutput.Wxfinput, LSTMoutput.bf) : [300 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> LSTMoutput.Whf = LearnableParameter() :  -> [300 x 300]
Validating --> LSTMoutput.Wcf = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.Wxi = LearnableParameter() :  -> [300 x 150]
Validating --> LSTMoutput.WxiInput = Times (LSTMoutput.Wxi, featLookuped) : [300 x 150], [150 x *1] -> [300 x *1]
Validating --> LSTMoutput.bi = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.unnamed126 = Plus (LSTMoutput.WxiInput, LSTMoutput.bi) : [300 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> LSTMoutput.Whi = LearnableParameter() :  -> [300 x 300]
Validating --> LSTMoutput.Wci = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.Wxc = LearnableParameter() :  -> [300 x 150]
Validating --> LSTMoutput.WxcInput = Times (LSTMoutput.Wxc, featLookuped) : [300 x 150], [150 x *1] -> [300 x *1]
Validating --> LSTMoutput.Whc = LearnableParameter() :  -> [300 x 300]
Validating --> LSTMoutput.bc = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.WhodelayHO = Times (LSTMoutput.Who, LSTMoutput.delayHO) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> LSTMoutput.unnamed134 = Plus (LSTMoutput.unnamed135, LSTMoutput.WhodelayHO) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WhfdelayHF = Times (LSTMoutput.Whf, LSTMoutput.delayHF) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> LSTMoutput.unnamed131 = Plus (LSTMoutput.unnamed132, LSTMoutput.WhfdelayHF) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WcfdelayCF = DiagTimes (LSTMoutput.Wcf, LSTMoutput.delayCF) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> LSTMoutput.unnamed130 = Plus (LSTMoutput.unnamed131, LSTMoutput.WcfdelayCF) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> LSTMoutput.ft = Sigmoid (LSTMoutput.unnamed130) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.bft = ElementTimes (LSTMoutput.ft, LSTMoutput.delayCC) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WhidelayHI = Times (LSTMoutput.Whi, LSTMoutput.delayHI) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> LSTMoutput.unnamed125 = Plus (LSTMoutput.unnamed126, LSTMoutput.WhidelayHI) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WcidelayCI = DiagTimes (LSTMoutput.Wci, LSTMoutput.delayCI) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> LSTMoutput.unnamed124 = Plus (LSTMoutput.unnamed125, LSTMoutput.WcidelayCI) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> LSTMoutput.it = Sigmoid (LSTMoutput.unnamed124) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WhcdelayHC = Times (LSTMoutput.Whc, LSTMoutput.delayHC) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> LSTMoutput.unnamed129 = Plus (LSTMoutput.WhcdelayHC, LSTMoutput.bc) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> LSTMoutput.unnamed128 = Plus (LSTMoutput.WxcInput, LSTMoutput.unnamed129) : [300 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> LSTMoutput.unnamed127 = Tanh (LSTMoutput.unnamed128) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.bit = ElementTimes (LSTMoutput.it, LSTMoutput.unnamed127) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.ct = Plus (LSTMoutput.bft, LSTMoutput.bit) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.Wcoct = DiagTimes (LSTMoutput.Wco, LSTMoutput.ct) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.unnamed133 = Plus (LSTMoutput.unnamed134, LSTMoutput.Wcoct) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.ot = Sigmoid (LSTMoutput.unnamed133) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.unnamed136 = Tanh (LSTMoutput.ct) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.outputTest = ElementTimes (LSTMoutput.ot, LSTMoutput.unnamed136) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutputW1 = Times (W1, LSTMoutput.outputTest) : [127 x 300], [300 x 1 x *1] -> [127 x 1 x *1]
Validating --> ce = CrossEntropyWithSoftmax (labels, LSTMoutputW1) : [127 x *1], [127 x 1 x *1] -> [1]
Validating --> err = CrossEntropyWithSoftmax (labels, LSTMoutputW1) : [127 x *1], [127 x 1 x *1] -> [1]
Validating --> outputs = Softmax (LSTMoutputW1) : [127 x 1 x *1] -> [127 x 1 x *1]

Validating network. 43 nodes to process in pass 2.

Validating --> LSTMoutput.delayHO = PastValue (LSTMoutput.outputTest) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WhodelayHO = Times (LSTMoutput.Who, LSTMoutput.delayHO) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.delayHF = PastValue (LSTMoutput.outputTest) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WhfdelayHF = Times (LSTMoutput.Whf, LSTMoutput.delayHF) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.delayCF = PastValue (LSTMoutput.ct) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WcfdelayCF = DiagTimes (LSTMoutput.Wcf, LSTMoutput.delayCF) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.delayCC = PastValue (LSTMoutput.ct) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.delayHI = PastValue (LSTMoutput.outputTest) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WhidelayHI = Times (LSTMoutput.Whi, LSTMoutput.delayHI) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.delayCI = PastValue (LSTMoutput.ct) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WcidelayCI = DiagTimes (LSTMoutput.Wci, LSTMoutput.delayCI) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.delayHC = PastValue (LSTMoutput.outputTest) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WhcdelayHC = Times (LSTMoutput.Whc, LSTMoutput.delayHC) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.unnamed129 = Plus (LSTMoutput.WhcdelayHC, LSTMoutput.bc) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]

Validating network. 14 nodes to process in pass 3.


Validating network, final pass.



19 out of 62 nodes do not share the minibatch layout with the input data.

Post-processing network complete.



Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

0000000000000000: {[LSTMoutput.Wcf Gradient[300 x 1]] [LSTMoutput.WcfdelayCF Gradient[300 x 1 x *1]] [LSTMoutput.Wci Gradient[300 x 1]] [LSTMoutput.WcidelayCI Gradient[300 x 1 x *1]] [LSTMoutput.Wco Gradient[300 x 1]] [LSTMoutput.Wcoct Gradient[300 x 1 x *1]] [LSTMoutput.Whc Gradient[300 x 300]] [LSTMoutput.WhcdelayHC Gradient[300 x 1 x *1]] [LSTMoutput.Whf Gradient[300 x 300]] [LSTMoutput.WhfdelayHF Gradient[300 x 1 x *1]] [LSTMoutput.Whi Gradient[300 x 300]] [LSTMoutput.WhidelayHI Gradient[300 x 1 x *1]] [LSTMoutput.Who Gradient[300 x 300]] [LSTMoutput.WhodelayHO Gradient[300 x 1 x *1]] [LSTMoutput.Wxc Gradient[300 x 150]] [LSTMoutput.WxcInput Gradient[300 x *1]] [LSTMoutput.Wxf Gradient[300 x 150]] [LSTMoutput.Wxfinput Gradient[300 x *1]] [LSTMoutput.Wxi Gradient[300 x 150]] [LSTMoutput.WxiInput Gradient[300 x *1]] [LSTMoutput.Wxo Gradient[300 x 150]] [LSTMoutput.Wxoinput Gradient[300 x *1]] [LSTMoutput.bc Gradient[300 x 1]] [LSTMoutput.bf Gradient[300 x 1]] [LSTMoutput.bft Gradient[300 x 1 x *1]] [LSTMoutput.bi Gradient[300 x 1]] [LSTMoutput.bit Gradient[300 x 1 x *1]] [LSTMoutput.bo Gradient[300 x 1]] [LSTMoutput.ct Gradient[300 x 1 x *1]] [LSTMoutput.delayCC Gradient[300 x 1 x *1]] [LSTMoutput.delayCF Gradient[300 x 1 x *1]] [LSTMoutput.delayCI Gradient[300 x 1 x *1]] [LSTMoutput.delayHC Gradient[300 x 1 x *1]] [LSTMoutput.delayHF Gradient[300 x 1 x *1]] [LSTMoutput.delayHI Gradient[300 x 1 x *1]] [LSTMoutput.delayHO Gradient[300 x 1 x *1]] [LSTMoutput.ft Gradient[300 x 1 x *1]] [LSTMoutput.it Gradient[300 x 1 x *1]] [LSTMoutput.ot Gradient[300 x 1 x *1]] [LSTMoutput.outputTest Gradient[300 x 1 x *1]] [LSTMoutput.unnamed124 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed125 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed126 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed127 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed128 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed129 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed130 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed131 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed132 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed133 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed134 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed135 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed136 Gradient[300 x 1 x *1]] [LSTMoutputW1 Gradient[127 x 1 x *1]] [W1 Gradient[127 x 300]] [Wlookup Gradient[50 x 944]] [ce Gradient[1]] [ce Value[1]] [err Gradient[1]] [err Value[1]] [featLookuped Gradient[150 x *1]] [features Gradient[2832 x *1]] [labels Gradient[127 x *1]] [outputs Gradient[127 x 1 x *1]] }
000000F13E64E110: {[LSTMoutput.delayCI Value[300 x 1 x *1]] }
000000F13E64E1E0: {[LSTMoutput.bc Value[300 x 1]] }
000000F13E64E2B0: {[labels Value[127 x *1]] }
000000F13E64E380: {[LSTMoutput.Whf Value[300 x 300]] }
000000F13E64E450: {[LSTMoutput.bi Value[300 x 1]] }
000000F13E64E520: {[features Value[2832 x *1]] }
000000F13E64E5F0: {[LSTMoutput.bf Value[300 x 1]] }
000000F13E64E6C0: {[LSTMoutput.delayHI Value[300 x 1 x *1]] }
000000F13E64E790: {[LSTMoutput.Wcf Value[300 x 1]] }
000000F13E64E860: {[LSTMoutput.delayHC Value[300 x 1 x *1]] }
000000F13E64E930: {[LSTMoutput.Wci Value[300 x 1]] }
000000F13E64EA00: {[LSTMoutput.Wco Value[300 x 1]] }
000000F13E64EAD0: {[LSTMoutput.delayHF Value[300 x 1 x *1]] }
000000F13E64EBA0: {[LSTMoutput.delayCC Value[300 x 1 x *1]] }
000000F13E64EC70: {[LSTMoutput.delayHO Value[300 x 1 x *1]] }
000000F13E64ED40: {[LSTMoutput.Whc Value[300 x 300]] }
000000F13E64EE10: {[LSTMoutput.Whi Value[300 x 300]] }
000000F13E64EEE0: {[LSTMoutput.bo Value[300 x 1]] }
000000F13E64EFB0: {[LSTMoutput.delayCF Value[300 x 1 x *1]] }
000000F13ED17370: {[outputs Value[127 x 1 x *1]] }
000000F13ED17440: {[LSTMoutput.Wxoinput Value[300 x *1]] }
000000F13ED17510: {[LSTMoutput.Wxc Value[300 x 150]] }
000000F13ED175E0: {[LSTMoutput.WcfdelayCF Value[300 x 1 x *1]] }
000000F13ED176B0: {[LSTMoutput.WxcInput Value[300 x *1]] }
000000F13ED17780: {[LSTMoutput.WxiInput Value[300 x *1]] }
000000F13ED17850: {[LSTMoutput.WhfdelayHF Value[300 x 1 x *1]] }
000000F13ED17920: {[LSTMoutput.Wxf Value[300 x 150]] }
000000F13ED179F0: {[LSTMoutput.WhidelayHI Value[300 x 1 x *1]] }
000000F13ED17AC0: {[LSTMoutput.bit Value[300 x 1 x *1]] }
000000F13ED17B90: {[LSTMoutput.Who Value[300 x 300]] }
000000F13ED17C60: {[LSTMoutput.unnamed135 Value[300 x 1 x *1]] }
000000F13ED17D30: {[LSTMoutput.ct Value[300 x 1 x *1]] }
000000F13ED17E00: {[LSTMoutput.Wcoct Value[300 x 1 x *1]] }
000000F13ED17ED0: {[LSTMoutput.unnamed136 Value[300 x 1 x *1]] }
000000F13ED17FA0: {[LSTMoutput.unnamed134 Value[300 x 1 x *1]] }
000000F13ED18070: {[LSTMoutput.unnamed130 Value[300 x 1 x *1]] }
000000F13ED18140: {[LSTMoutput.unnamed127 Value[300 x 1 x *1]] }
000000F13ED18210: {[LSTMoutput.ot Value[300 x 1 x *1]] }
000000F13ED182E0: {[LSTMoutput.unnamed133 Value[300 x 1 x *1]] }
000000F13ED183B0: {[LSTMoutput.unnamed126 Value[300 x 1 x *1]] }
000000F13ED18480: {[Wlookup Value[50 x 944]] }
000000F13ED18550: {[LSTMoutput.unnamed131 Value[300 x 1 x *1]] }
000000F13ED18620: {[featLookuped Value[150 x *1]] }
000000F13ED186F0: {[LSTMoutput.ft Value[300 x 1 x *1]] }
000000F13ED187C0: {[LSTMoutput.WhcdelayHC Value[300 x 1 x *1]] }
000000F13ED18890: {[LSTMoutput.it Value[300 x 1 x *1]] }
000000F13ED18960: {[LSTMoutput.WcidelayCI Value[300 x 1 x *1]] }
000000F13ED18A30: {[LSTMoutput.unnamed129 Value[300 x 1 x *1]] }
000000F13ED18B00: {[LSTMoutput.Wxfinput Value[300 x *1]] }
000000F13ED18BD0: {[LSTMoutput.unnamed132 Value[300 x 1 x *1]] }
000000F13ED18CA0: {[LSTMoutput.Wxi Value[300 x 150]] }
000000F13ED18D70: {[LSTMoutput.bft Value[300 x 1 x *1]] }
000000F13ED18E40: {[LSTMoutput.WhodelayHO Value[300 x 1 x *1]] }
000000F13ED18F10: {[LSTMoutput.Wxo Value[300 x 150]] }
000000F13ED18FE0: {[LSTMoutput.unnamed125 Value[300 x 1 x *1]] }
000000F13ED190B0: {[W1 Value[127 x 300]] }
000000F13ED19180: {[LSTMoutput.unnamed124 Value[300 x 1 x *1]] }
000000F13ED19250: {[LSTMoutput.unnamed128 Value[300 x 1 x *1]] }
000000F13ED8BC60: {[LSTMoutputW1 Value[127 x 1 x *1]] }
000000F13ED8C890: {[LSTMoutput.outputTest Value[300 x 1 x *1]] }

BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 5 lines with a total of 92+5 tokens.
O O O O O O O O O O O O O O O O O O O O O 
O O O O O O O O O O O O O O O O O O 
O O O O O O O O O O O O O O O 
O O O O O O O O O O O O O O O O O O 
O O O O O O O O O O O O O O O O O O O 
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
Total Samples Evaluated = 91

07/14/2016 06:30:23: Action "write" complete.

07/14/2016 06:30:23: __COMPLETED__