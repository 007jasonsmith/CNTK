CPU info:
    CPU Model Name: Intel(R) Xeon(R) CPU W3550 @ 3.07GHz
    Hardware threads: 4
    Total Memory: 12580388 kB
-------------------------------------------------------------------
=== Running /cygdrive/c/jenkins/workspace/CNTK-Test-Windows-W1/x64/release/cntk.exe configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/globals.cntk+rnnlu.ndl.cntk currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu DeviceId=-1 timestamping=true
-------------------------------------------------------------------
Build info: 

		Built time: Jul 13 2016 03:55:32
		Last modified date: Fri Jul  8 10:29:45 2016
		Build type: Release
		Build target: GPU
		With 1bit-SGD: no
		Math lib: mkl
		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
		CUB_PATH: C:\src\cub-1.4.1
		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
		Build Branch: HEAD
		Build SHA1: 50bb4c8afbc87c14548a5b5f315a064186a5cb5f
		Built by svcphil on LIANA-09-w
		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
-------------------------------------------------------------------
Changed current directory to C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
07/13/2016 04:44:33: -------------------------------------------------------------------
07/13/2016 04:44:33: Build info: 

07/13/2016 04:44:33: 		Built time: Jul 13 2016 03:55:32
07/13/2016 04:44:33: 		Last modified date: Fri Jul  8 10:29:45 2016
07/13/2016 04:44:33: 		Build type: Release
07/13/2016 04:44:33: 		Build target: GPU
07/13/2016 04:44:33: 		With 1bit-SGD: no
07/13/2016 04:44:33: 		Math lib: mkl
07/13/2016 04:44:33: 		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
07/13/2016 04:44:33: 		CUB_PATH: C:\src\cub-1.4.1
07/13/2016 04:44:33: 		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
07/13/2016 04:44:33: 		Build Branch: HEAD
07/13/2016 04:44:33: 		Build SHA1: 50bb4c8afbc87c14548a5b5f315a064186a5cb5f
07/13/2016 04:44:33: 		Built by svcphil on LIANA-09-w
07/13/2016 04:44:33: 		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
07/13/2016 04:44:33: -------------------------------------------------------------------
07/13/2016 04:44:34: -------------------------------------------------------------------
07/13/2016 04:44:34: GPU info:

07/13/2016 04:44:34: 		Device[0]: cores = 2496; computeCapability = 5.2; type = "Quadro M4000"; memory = 8192 MB
07/13/2016 04:44:34: -------------------------------------------------------------------

07/13/2016 04:44:34: Running on cntk-muc02 at 2016/07/13 04:44:34
07/13/2016 04:44:34: Command line: 
C:\jenkins\workspace\CNTK-Test-Windows-W1\x64\release\cntk.exe  configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/globals.cntk+rnnlu.ndl.cntk  currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU  RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu  DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU  ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU  OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu  DeviceId=-1  timestamping=true



07/13/2016 04:44:34: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
07/13/2016 04:44:34: NdlDir=$ConfigDir$
ExpDir=$RunDir$
OutDir=$OutputDir$
precision="double"
deviceId = $DeviceId$
command=LSTM:LSTMTest
traceLevel=1
LSTM=[
  action=train
  makeMode=true
  minibatchSize=10
  epochSize=4430000
  modelPath=$ExpDir$/cntkdebug.dnn
  NDLNetworkBuilder=[
      networkDescription=$NdlDir$/lstm.ndl
  ]
  SGD=[
    learningRatesPerSample=0.1
    momentumPerMB=0.90
    gradientClippingWithTruncation=true
    clippingThresholdPerSample=15.0
    maxEpochs=3
    gradientcheck=false
    numMBsToShowResult=1000
    loadBestModel=true
    AutoAdjust=[
      autoAdjustLR=adjustafterepoch
      reduceLearnRateIfImproveLessThan=0
      increaseLearnRateIfImproveMoreThan=1000000000
      learnRateDecreaseFactor=0.5
      learnRateIncreaseFactor=1.382
      numMiniBatch4LRSearch=100
      numPrevLearnRates=5
      numBestSearchEpoch=1
    ]
    dropoutRate=0
  ]
  reader=[
    readerType=LUSequenceReader
    wordContext=0:1:2
    randomize=None
    nbruttsineachrecurrentiter=10
    wfile=$ExpDir$/sequenceSentence.bin
    wsize=256
    wrecords=1000
    windowSize=10000
    unk="<unk>"
    wordmap=$DataDir$/inputmap.txt
    file=$DataDir$/atis.train.apos.pred.pos.head.IOB.simple
    features=[
      dim=0
      sectionType=data
    ]
    sequence=[
      dim=1
      wrecords=2
      sectionType=data
    ]
    labelIn=[
      dim=1
      usewordmap=true
      labelDim=10000
      labelMappingFile=$ExpDir$/sentenceLabels.txt
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      usewordmap=true
      token=$DataDir$/input.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=11
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=11
        sectionType=categoryLabels
      ]
    ]
    labels=[
      dim=1
      labelType=Category
      beginSequence="O"
      endSequence="O"
      token=$DataDir$/output.txt
    labelMappingFile=$ExpDir$/sentenceLabels.out.txt
      sectionType=labels
      mapping=[
        sectionType=labelMapping
      ]
      category=[
        sectionType=categoryLabels
      ]
    ]
  ]
  cvReader=[
    readerType=LUSequenceReader
    randomize=None
    wordContext=0:1:2
    wfile=$ExpDir$/sequenceSentence.valid.bin
    wsize=256
    wrecords=1000
    windowSize=10000
    unk="<unk>"
    wordmap=$DataDir$/inputmap.txt
    file=$DataDir$/atis.dev.IOB.simple
    features=[
      dim=0
      sectionType=data
    ]
    sequence=[
      dim=1
      wrecords=2
      sectionType=data
    ]
    labelIn=[
      dim=1
      labelDim=10000
      labelMappingFile=$ExpDir$/sentenceLabels.in.txt
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      usewordmap=true
      token=$DataDir$/input.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=11
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=11
        sectionType=categoryLabels
      ]
    ]
    labels=[
      dim=1
      labelType=Category
      beginSequence="O"
      endSequence="O"
      token=$DataDir$/output.txt
      labelDim=10000
      labelMappingFile=$ExpDir$/sentenceLabels.out.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=3
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=3
        sectionType=categoryLabels
      ]
    ]
  ]
]
LSTMTest=[
  action=write
  minibatchSize=100
  epochSize=4430000
  defaultHiddenActivity=0.1
  modelPath=$ExpDir$/cntkdebug.dnn
  outputNodeNames=outputs
  reader=[
    readerType=LUSequenceReader
    randomize=None
    wordContext=0:1:2
    unk="<unk>"
    wordmap=$DataDir$/inputmap.txt
    file=$DataDir$/atis.test.apos.pred.pos.head.IOB.simple
    wfile=$ExpDir$/sequenceSentence.bin
    wsize=256
    wrecords=1000
    windowSize=10000
    features=[
      dim=0 
      sectionType=data
    ]
    sequence=[
      dim=1
      wrecords=2
      sectionType=data
    ]
    labelIn=[
      dim=1
      labelDim=10000
      labelMappingFile=$ExpDir$/sentenceLabels.txt
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      usewordmap=true
      token=$DataDir$/input.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=11
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=11
        sectionType=categoryLabels
      ]
    ]
    labels=[
      dim=1
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      token=$DataDir$/output.txt
      labelDim=127
      labelMappingFile=$ExpDir$/sentenceLabels.out.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=3
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=3
        sectionType=categoryLabels
      ]
    ]
  ]
  writer=[
    writerType=LUSequenceWriter
    outputs=[
      file=$OutDir$/output.rec.txt
      token=$DataDir$/output.txt
    ]
  ]
]
currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu
DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu
DeviceId=-1
timestamping=true

07/13/2016 04:44:34: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<

07/13/2016 04:44:34: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
07/13/2016 04:44:34: NdlDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
ExpDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu
OutDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu
precision="double"
deviceId = -1
command=LSTM:LSTMTest
traceLevel=1
LSTM=[
  action=train
  makeMode=true
  minibatchSize=10
  epochSize=4430000
  modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu/cntkdebug.dnn
  NDLNetworkBuilder=[
      networkDescription=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/lstm.ndl
  ]
  SGD=[
    learningRatesPerSample=0.1
    momentumPerMB=0.90
    gradientClippingWithTruncation=true
    clippingThresholdPerSample=15.0
    maxEpochs=3
    gradientcheck=false
    numMBsToShowResult=1000
    loadBestModel=true
    AutoAdjust=[
      autoAdjustLR=adjustafterepoch
      reduceLearnRateIfImproveLessThan=0
      increaseLearnRateIfImproveMoreThan=1000000000
      learnRateDecreaseFactor=0.5
      learnRateIncreaseFactor=1.382
      numMiniBatch4LRSearch=100
      numPrevLearnRates=5
      numBestSearchEpoch=1
    ]
    dropoutRate=0
  ]
  reader=[
    readerType=LUSequenceReader
    wordContext=0:1:2
    randomize=None
    nbruttsineachrecurrentiter=10
    wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu/sequenceSentence.bin
    wsize=256
    wrecords=1000
    windowSize=10000
    unk="<unk>"
    wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
    file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.train.apos.pred.pos.head.IOB.simple
    features=[
      dim=0
      sectionType=data
    ]
    sequence=[
      dim=1
      wrecords=2
      sectionType=data
    ]
    labelIn=[
      dim=1
      usewordmap=true
      labelDim=10000
      labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu/sentenceLabels.txt
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      usewordmap=true
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=11
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=11
        sectionType=categoryLabels
      ]
    ]
    labels=[
      dim=1
      labelType=Category
      beginSequence="O"
      endSequence="O"
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
    labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu/sentenceLabels.out.txt
      sectionType=labels
      mapping=[
        sectionType=labelMapping
      ]
      category=[
        sectionType=categoryLabels
      ]
    ]
  ]
  cvReader=[
    readerType=LUSequenceReader
    randomize=None
    wordContext=0:1:2
    wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu/sequenceSentence.valid.bin
    wsize=256
    wrecords=1000
    windowSize=10000
    unk="<unk>"
    wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
    file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.dev.IOB.simple
    features=[
      dim=0
      sectionType=data
    ]
    sequence=[
      dim=1
      wrecords=2
      sectionType=data
    ]
    labelIn=[
      dim=1
      labelDim=10000
      labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu/sentenceLabels.in.txt
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      usewordmap=true
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=11
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=11
        sectionType=categoryLabels
      ]
    ]
    labels=[
      dim=1
      labelType=Category
      beginSequence="O"
      endSequence="O"
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
      labelDim=10000
      labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu/sentenceLabels.out.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=3
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=3
        sectionType=categoryLabels
      ]
    ]
  ]
]
LSTMTest=[
  action=write
  minibatchSize=100
  epochSize=4430000
  defaultHiddenActivity=0.1
  modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu/cntkdebug.dnn
  outputNodeNames=outputs
  reader=[
    readerType=LUSequenceReader
    randomize=None
    wordContext=0:1:2
    unk="<unk>"
    wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
    file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.test.apos.pred.pos.head.IOB.simple
    wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu/sequenceSentence.bin
    wsize=256
    wrecords=1000
    windowSize=10000
    features=[
      dim=0 
      sectionType=data
    ]
    sequence=[
      dim=1
      wrecords=2
      sectionType=data
    ]
    labelIn=[
      dim=1
      labelDim=10000
      labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu/sentenceLabels.txt
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      usewordmap=true
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=11
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=11
        sectionType=categoryLabels
      ]
    ]
    labels=[
      dim=1
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
      labelDim=127
      labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu/sentenceLabels.out.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=3
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=3
        sectionType=categoryLabels
      ]
    ]
  ]
  writer=[
    writerType=LUSequenceWriter
    outputs=[
      file=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu/output.rec.txt
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
    ]
  ]
]
currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu
DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu
DeviceId=-1
timestamping=true

07/13/2016 04:44:34: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<

07/13/2016 04:44:34: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
configparameters: rnnlu.ndl.cntk:command=LSTM:LSTMTest
configparameters: rnnlu.ndl.cntk:ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
configparameters: rnnlu.ndl.cntk:currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
configparameters: rnnlu.ndl.cntk:DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
configparameters: rnnlu.ndl.cntk:deviceId=-1
configparameters: rnnlu.ndl.cntk:ExpDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu
configparameters: rnnlu.ndl.cntk:LSTM=[
  action=train
  makeMode=true
  minibatchSize=10
  epochSize=4430000
  modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu/cntkdebug.dnn
  NDLNetworkBuilder=[
      networkDescription=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/lstm.ndl
  ]
  SGD=[
    learningRatesPerSample=0.1
    momentumPerMB=0.90
    gradientClippingWithTruncation=true
    clippingThresholdPerSample=15.0
    maxEpochs=3
    gradientcheck=false
    numMBsToShowResult=1000
    loadBestModel=true
    AutoAdjust=[
      autoAdjustLR=adjustafterepoch
      reduceLearnRateIfImproveLessThan=0
      increaseLearnRateIfImproveMoreThan=1000000000
      learnRateDecreaseFactor=0.5
      learnRateIncreaseFactor=1.382
      numMiniBatch4LRSearch=100
      numPrevLearnRates=5
      numBestSearchEpoch=1
    ]
    dropoutRate=0
  ]
  reader=[
    readerType=LUSequenceReader
    wordContext=0:1:2
    randomize=None
    nbruttsineachrecurrentiter=10
    wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu/sequenceSentence.bin
    wsize=256
    wrecords=1000
    windowSize=10000
    unk="<unk>"
    wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
    file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.train.apos.pred.pos.head.IOB.simple
    features=[
      dim=0
      sectionType=data
    ]
    sequence=[
      dim=1
      wrecords=2
      sectionType=data
    ]
    labelIn=[
      dim=1
      usewordmap=true
      labelDim=10000
      labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu/sentenceLabels.txt
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      usewordmap=true
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=11
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=11
        sectionType=categoryLabels
      ]
    ]
    labels=[
      dim=1
      labelType=Category
      beginSequence="O"
      endSequence="O"
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
    labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu/sentenceLabels.out.txt
      sectionType=labels
      mapping=[
        sectionType=labelMapping
      ]
      category=[
        sectionType=categoryLabels
      ]
    ]
  ]
  cvReader=[
    readerType=LUSequenceReader
    randomize=None
    wordContext=0:1:2
    wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu/sequenceSentence.valid.bin
    wsize=256
    wrecords=1000
    windowSize=10000
    unk="<unk>"
    wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
    file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.dev.IOB.simple
    features=[
      dim=0
      sectionType=data
    ]
    sequence=[
      dim=1
      wrecords=2
      sectionType=data
    ]
    labelIn=[
      dim=1
      labelDim=10000
      labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu/sentenceLabels.in.txt
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      usewordmap=true
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=11
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=11
        sectionType=categoryLabels
      ]
    ]
    labels=[
      dim=1
      labelType=Category
      beginSequence="O"
      endSequence="O"
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
      labelDim=10000
      labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu/sentenceLabels.out.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=3
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=3
        sectionType=categoryLabels
      ]
    ]
  ]
]

configparameters: rnnlu.ndl.cntk:LSTMTest=[
  action=write
  minibatchSize=100
  epochSize=4430000
  defaultHiddenActivity=0.1
  modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu/cntkdebug.dnn
  outputNodeNames=outputs
  reader=[
    readerType=LUSequenceReader
    randomize=None
    wordContext=0:1:2
    unk="<unk>"
    wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
    file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.test.apos.pred.pos.head.IOB.simple
    wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu/sequenceSentence.bin
    wsize=256
    wrecords=1000
    windowSize=10000
    features=[
      dim=0 
      sectionType=data
    ]
    sequence=[
      dim=1
      wrecords=2
      sectionType=data
    ]
    labelIn=[
      dim=1
      labelDim=10000
      labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu/sentenceLabels.txt
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      usewordmap=true
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=11
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=11
        sectionType=categoryLabels
      ]
    ]
    labels=[
      dim=1
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
      labelDim=127
      labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu/sentenceLabels.out.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=3
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=3
        sectionType=categoryLabels
      ]
    ]
  ]
  writer=[
    writerType=LUSequenceWriter
    outputs=[
      file=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu/output.rec.txt
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
    ]
  ]
]

configparameters: rnnlu.ndl.cntk:NdlDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
configparameters: rnnlu.ndl.cntk:OutDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu
configparameters: rnnlu.ndl.cntk:OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu
configparameters: rnnlu.ndl.cntk:precision=double
configparameters: rnnlu.ndl.cntk:RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu
configparameters: rnnlu.ndl.cntk:timestamping=true
configparameters: rnnlu.ndl.cntk:traceLevel=1
07/13/2016 04:44:34: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
07/13/2016 04:44:34: Commands: LSTM LSTMTest
07/13/2016 04:44:34: Precision = "double"
07/13/2016 04:44:34: CNTKModelPath: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu/cntkdebug.dnn
07/13/2016 04:44:34: CNTKCommandTrainInfo: LSTM : 3
07/13/2016 04:44:34: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 3

07/13/2016 04:44:34: ##############################################################################
07/13/2016 04:44:34: #                                                                            #
07/13/2016 04:44:34: # Action "train"                                                             #
07/13/2016 04:44:34: #                                                                            #
07/13/2016 04:44:34: ##############################################################################

07/13/2016 04:44:34: CNTKCommandTrainBegin: LSTM
NDLBuilder Using CPU
BatchLUSequenceReader: Input file is C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.train.apos.pred.pos.head.IOB.simple
BatchLUSequenceReader: Input file is C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.dev.IOB.simple

07/13/2016 04:44:34: Creating virgin network.

Post-processing network...

4 roots:
	LSTMoutputW1 = Times()
	ce = CrossEntropyWithSoftmax()
	err = CrossEntropyWithSoftmax()
	outputs = Softmax()

Loop[0] --> Loop_LSTMoutput.outputTest -> 31 nodes

	LSTMoutput.delayHO	LSTMoutput.WhodelayHO	LSTMoutput.unnamed134
	LSTMoutput.delayHF	LSTMoutput.WhfdelayHF	LSTMoutput.unnamed131
	LSTMoutput.delayCF	LSTMoutput.WcfdelayCF	LSTMoutput.unnamed130
	LSTMoutput.ft	LSTMoutput.delayCC	LSTMoutput.bft
	LSTMoutput.delayHI	LSTMoutput.WhidelayHI	LSTMoutput.unnamed125
	LSTMoutput.delayCI	LSTMoutput.WcidelayCI	LSTMoutput.unnamed124
	LSTMoutput.it	LSTMoutput.delayHC	LSTMoutput.WhcdelayHC
	LSTMoutput.unnamed129	LSTMoutput.unnamed128	LSTMoutput.unnamed127
	LSTMoutput.bit	LSTMoutput.ct	LSTMoutput.Wcoct
	LSTMoutput.unnamed133	LSTMoutput.ot	LSTMoutput.unnamed136
	LSTMoutput.outputTest

Validating network. 62 nodes to process in pass 1.

Validating --> W1 = LearnableParameter() :  -> [127 x 300]
Validating --> LSTMoutput.Wxo = LearnableParameter() :  -> [300 x 150]
Validating --> Wlookup = LearnableParameter() :  -> [50 x 944]
Validating --> features = InputValue() :  -> [2832 x *]
Validating --> featLookuped = LookupTable (Wlookup, features) : [50 x 944], [2832 x *] -> [150 x *]
Validating --> LSTMoutput.Wxoinput = Times (LSTMoutput.Wxo, featLookuped) : [300 x 150], [150 x *] -> [300 x *]
Validating --> LSTMoutput.bo = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.unnamed135 = Plus (LSTMoutput.Wxoinput, LSTMoutput.bo) : [300 x *], [300 x 1] -> [300 x 1 x *]
Validating --> LSTMoutput.Who = LearnableParameter() :  -> [300 x 300]
Validating --> LSTMoutput.Wco = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.Wxf = LearnableParameter() :  -> [300 x 150]
Validating --> LSTMoutput.Wxfinput = Times (LSTMoutput.Wxf, featLookuped) : [300 x 150], [150 x *] -> [300 x *]
Validating --> LSTMoutput.bf = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.unnamed132 = Plus (LSTMoutput.Wxfinput, LSTMoutput.bf) : [300 x *], [300 x 1] -> [300 x 1 x *]
Validating --> LSTMoutput.Whf = LearnableParameter() :  -> [300 x 300]
Validating --> LSTMoutput.Wcf = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.Wxi = LearnableParameter() :  -> [300 x 150]
Validating --> LSTMoutput.WxiInput = Times (LSTMoutput.Wxi, featLookuped) : [300 x 150], [150 x *] -> [300 x *]
Validating --> LSTMoutput.bi = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.unnamed126 = Plus (LSTMoutput.WxiInput, LSTMoutput.bi) : [300 x *], [300 x 1] -> [300 x 1 x *]
Validating --> LSTMoutput.Whi = LearnableParameter() :  -> [300 x 300]
Validating --> LSTMoutput.Wci = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.Wxc = LearnableParameter() :  -> [300 x 150]
Validating --> LSTMoutput.WxcInput = Times (LSTMoutput.Wxc, featLookuped) : [300 x 150], [150 x *] -> [300 x *]
Validating --> LSTMoutput.Whc = LearnableParameter() :  -> [300 x 300]
Validating --> LSTMoutput.bc = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.WhodelayHO = Times (LSTMoutput.Who, LSTMoutput.delayHO) : [300 x 300], [300] -> [300]
Validating --> LSTMoutput.unnamed134 = Plus (LSTMoutput.unnamed135, LSTMoutput.WhodelayHO) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> LSTMoutput.WhfdelayHF = Times (LSTMoutput.Whf, LSTMoutput.delayHF) : [300 x 300], [300] -> [300]
Validating --> LSTMoutput.unnamed131 = Plus (LSTMoutput.unnamed132, LSTMoutput.WhfdelayHF) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> LSTMoutput.WcfdelayCF = DiagTimes (LSTMoutput.Wcf, LSTMoutput.delayCF) : [300 x 1], [300] -> [300]
Validating --> LSTMoutput.unnamed130 = Plus (LSTMoutput.unnamed131, LSTMoutput.WcfdelayCF) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> LSTMoutput.ft = Sigmoid (LSTMoutput.unnamed130) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.bft = ElementTimes (LSTMoutput.ft, LSTMoutput.delayCC) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> LSTMoutput.WhidelayHI = Times (LSTMoutput.Whi, LSTMoutput.delayHI) : [300 x 300], [300] -> [300]
Validating --> LSTMoutput.unnamed125 = Plus (LSTMoutput.unnamed126, LSTMoutput.WhidelayHI) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> LSTMoutput.WcidelayCI = DiagTimes (LSTMoutput.Wci, LSTMoutput.delayCI) : [300 x 1], [300] -> [300]
Validating --> LSTMoutput.unnamed124 = Plus (LSTMoutput.unnamed125, LSTMoutput.WcidelayCI) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> LSTMoutput.it = Sigmoid (LSTMoutput.unnamed124) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.WhcdelayHC = Times (LSTMoutput.Whc, LSTMoutput.delayHC) : [300 x 300], [300] -> [300]
Validating --> LSTMoutput.unnamed129 = Plus (LSTMoutput.WhcdelayHC, LSTMoutput.bc) : [300], [300 x 1] -> [300 x 1]
Validating --> LSTMoutput.unnamed128 = Plus (LSTMoutput.WxcInput, LSTMoutput.unnamed129) : [300 x *], [300 x 1] -> [300 x 1 x *]
Validating --> LSTMoutput.unnamed127 = Tanh (LSTMoutput.unnamed128) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.bit = ElementTimes (LSTMoutput.it, LSTMoutput.unnamed127) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.ct = Plus (LSTMoutput.bft, LSTMoutput.bit) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.Wcoct = DiagTimes (LSTMoutput.Wco, LSTMoutput.ct) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.unnamed133 = Plus (LSTMoutput.unnamed134, LSTMoutput.Wcoct) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.ot = Sigmoid (LSTMoutput.unnamed133) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.unnamed136 = Tanh (LSTMoutput.ct) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.outputTest = ElementTimes (LSTMoutput.ot, LSTMoutput.unnamed136) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutputW1 = Times (W1, LSTMoutput.outputTest) : [127 x 300], [300 x 1 x *] -> [127 x 1 x *]
Validating --> labels = InputValue() :  -> [127 x *]
Validating --> ce = CrossEntropyWithSoftmax (labels, LSTMoutputW1) : [127 x *], [127 x 1 x *] -> [1]
Validating --> err = CrossEntropyWithSoftmax (labels, LSTMoutputW1) : [127 x *], [127 x 1 x *] -> [1]
Validating --> outputs = Softmax (LSTMoutputW1) : [127 x 1 x *] -> [127 x 1 x *]

Validating network. 43 nodes to process in pass 2.

Validating --> LSTMoutput.delayHO = PastValue (LSTMoutput.outputTest) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.WhodelayHO = Times (LSTMoutput.Who, LSTMoutput.delayHO) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.delayHF = PastValue (LSTMoutput.outputTest) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.WhfdelayHF = Times (LSTMoutput.Whf, LSTMoutput.delayHF) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.delayCF = PastValue (LSTMoutput.ct) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.WcfdelayCF = DiagTimes (LSTMoutput.Wcf, LSTMoutput.delayCF) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.delayCC = PastValue (LSTMoutput.ct) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.delayHI = PastValue (LSTMoutput.outputTest) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.WhidelayHI = Times (LSTMoutput.Whi, LSTMoutput.delayHI) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.delayCI = PastValue (LSTMoutput.ct) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.WcidelayCI = DiagTimes (LSTMoutput.Wci, LSTMoutput.delayCI) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.delayHC = PastValue (LSTMoutput.outputTest) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.WhcdelayHC = Times (LSTMoutput.Whc, LSTMoutput.delayHC) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.unnamed129 = Plus (LSTMoutput.WhcdelayHC, LSTMoutput.bc) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]

Validating network. 14 nodes to process in pass 3.


Validating network, final pass.



19 out of 62 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

07/13/2016 04:44:34: Created model with 62 nodes on CPU.

07/13/2016 04:44:34: Training criterion node(s):
07/13/2016 04:44:34: 	ce = CrossEntropyWithSoftmax

07/13/2016 04:44:34: Evaluation criterion node(s):

07/13/2016 04:44:34: 	err = CrossEntropyWithSoftmax


Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

0000000000000000: {[err Gradient[1]] [features Gradient[2832 x *]] [labels Gradient[127 x *]] [outputs Gradient[127 x 1 x *]] }
000000350E6DE7F0: {[labels Value[127 x *]] }
0000003516CBD830: {[features Value[2832 x *]] }
000000352589B5A0: {[LSTMoutput.unnamed135 Gradient[300 x 1 x *]] }
000000352589B640: {[LSTMoutput.delayHO Gradient[300 x 1 x *]] [featLookuped Gradient[150 x *]] }
000000352589C540: {[LSTMoutput.delayHF Gradient[300 x 1 x *]] }
000000352589C5E0: {[LSTMoutput.Who Gradient[300 x 300]] }
000000352589C720: {[LSTMoutput.WhodelayHO Gradient[300 x 1 x *]] }
00000035258FF210: {[LSTMoutput.Wxfinput Value[300 x *]] [LSTMoutput.Wxoinput Gradient[300 x *]] }
00000035258FF2B0: {[LSTMoutput.bft Value[300 x 1 x *]] }
00000035258FF350: {[ce Value[1]] }
00000035258FF3F0: {[LSTMoutput.Wxoinput Value[300 x *]] [Wlookup Gradient[50 x 944]] }
00000035258FF710: {[featLookuped Value[150 x *]] }
00000035258FF7B0: {[LSTMoutput.Wxf Gradient[300 x 150]] [LSTMoutput.unnamed132 Value[300 x 1 x *]] }
00000035258FF850: {[LSTMoutput.WhfdelayHF Value[300 x 1 x *]] }
00000035258FF8F0: {[LSTMoutput.unnamed125 Value[300 x 1 x *]] }
00000035258FF990: {[LSTMoutput.WcidelayCI Value[300 x 1 x *]] }
00000035258FFA30: {[LSTMoutput.it Value[300 x 1 x *]] }
00000035258FFAD0: {[LSTMoutput.unnamed131 Value[300 x 1 x *]] }
00000035258FFB70: {[LSTMoutput.unnamed130 Value[300 x 1 x *]] }
00000035258FFE90: {[err Value[1]] }
00000035258FFF30: {[outputs Value[127 x 1 x *]] }
00000035258FFFD0: {[LSTMoutput.Wxo Gradient[300 x 150]] [LSTMoutput.unnamed135 Value[300 x 1 x *]] }
0000003525900070: {[LSTMoutput.Wxi Gradient[300 x 150]] [LSTMoutput.unnamed126 Value[300 x 1 x *]] }
0000003525900110: {[LSTMoutput.WcfdelayCF Value[300 x 1 x *]] }
00000035259002F0: {[LSTMoutput.ft Value[300 x 1 x *]] }
0000003525900390: {[LSTMoutput.unnamed124 Value[300 x 1 x *]] }
0000003525900430: {[LSTMoutput.WhcdelayHC Value[300 x 1 x *]] }
00000035259004D0: {[LSTMoutput.unnamed128 Value[300 x 1 x *]] }
0000003525900570: {[LSTMoutput.unnamed134 Value[300 x 1 x *]] }
0000003525900610: {[LSTMoutput.unnamed129 Value[300 x 1 x *]] }
00000035259006B0: {[LSTMoutput.ct Value[300 x 1 x *]] }
0000003525900750: {[LSTMoutput.Wcoct Value[300 x 1 x *]] }
00000035259007F0: {[LSTMoutput.bit Value[300 x 1 x *]] }
0000003525900890: {[LSTMoutput.unnamed133 Value[300 x 1 x *]] }
0000003525900930: {[LSTMoutput.ot Value[300 x 1 x *]] }
0000003525900A70: {[LSTMoutput.WxcInput Value[300 x *]] [LSTMoutput.WxiInput Gradient[300 x *]] [LSTMoutput.bf Gradient[300 x 1]] }
0000003525900B10: {[LSTMoutput.unnamed136 Value[300 x 1 x *]] }
0000003525900BB0: {[W1 Value[127 x 300]] }
0000003525900C50: {[LSTMoutput.WhidelayHI Value[300 x 1 x *]] }
0000003525900CF0: {[LSTMoutput.Wxfinput Gradient[300 x *]] [LSTMoutput.WxiInput Value[300 x *]] [LSTMoutput.bo Gradient[300 x 1]] }
0000003525900D90: {[LSTMoutput.WhodelayHO Value[300 x 1 x *]] }
0000003525900E30: {[LSTMoutput.unnamed127 Value[300 x 1 x *]] }
00000035259010B0: {[LSTMoutputW1 Value[127 x 1 x *]] }
0000003525902830: {[LSTMoutput.Who Value[300 x 300]] }
0000003525902AB0: {[LSTMoutput.delayHI Value[300 x 1 x *]] }
0000003525903050: {[LSTMoutput.delayCF Value[300 x 1 x *]] }
0000003525903190: {[LSTMoutput.delayCI Value[300 x 1 x *]] }
0000003525903230: {[LSTMoutput.delayCC Value[300 x 1 x *]] }
0000003525903730: {[LSTMoutput.Whc Value[300 x 300]] }
0000003525903910: {[LSTMoutput.delayHC Value[300 x 1 x *]] }
00000035259039B0: {[LSTMoutput.Wcf Value[300 x 1]] }
0000003525903A50: {[LSTMoutput.Wco Value[300 x 1]] }
0000003525903B90: {[LSTMoutput.Wxc Gradient[300 x 150]] [LSTMoutput.delayHO Value[300 x 1 x *]] }
0000003525904450: {[LSTMoutput.delayHF Value[300 x 1 x *]] }
00000035259044F0: {[LSTMoutput.outputTest Value[300 x 1 x *]] }
000000352613BEE0: {[LSTMoutput.Wxi Value[300 x 150]] }
000000352613C2A0: {[LSTMoutput.Wxo Value[300 x 150]] }
000000352613C3E0: {[LSTMoutput.Wxc Value[300 x 150]] }
000000352613C5C0: {[LSTMoutput.bo Value[300 x 1]] }
000000352613C660: {[LSTMoutput.bi Value[300 x 1]] }
000000352613C700: {[LSTMoutput.Wci Value[300 x 1]] }
000000352613C840: {[LSTMoutput.Whf Value[300 x 300]] }
000000352613C8E0: {[LSTMoutput.bc Value[300 x 1]] }
000000352613C980: {[LSTMoutput.bf Value[300 x 1]] }
000000352613CA20: {[LSTMoutput.Whi Value[300 x 300]] }
000000352613CB60: {[LSTMoutput.Wxf Value[300 x 150]] }
000000352613CC00: {[Wlookup Value[50 x 944]] }
00000035287E1050: {[LSTMoutput.Whf Gradient[300 x 300]] }
00000035287E10F0: {[LSTMoutput.Whc Gradient[300 x 300]] }
00000035287E1190: {[LSTMoutput.delayCC Gradient[300 x 1 x *]] }
00000035287E1230: {[LSTMoutput.ot Gradient[300 x 1 x *]] [LSTMoutputW1 Gradient[127 x 1 x *]] }
00000035287E12D0: {[LSTMoutput.ct Gradient[300 x 1 x *]] }
00000035287E1370: {[LSTMoutput.unnamed127 Gradient[300 x 1 x *]] }
00000035287E1410: {[LSTMoutput.unnamed125 Gradient[300 x 1 x *]] }
00000035287E14B0: {[LSTMoutput.Wci Gradient[300 x 1]] }
00000035287E1550: {[LSTMoutput.delayCI Gradient[300 x 1 x *]] }
00000035287E15F0: {[LSTMoutput.Wcoct Gradient[300 x 1 x *]] }
00000035287E1690: {[W1 Gradient[127 x 300]] }
00000035287E1730: {[LSTMoutput.delayHC Gradient[300 x 1 x *]] }
00000035287E17D0: {[LSTMoutput.unnamed126 Gradient[300 x 1 x *]] }
00000035287E1870: {[LSTMoutput.unnamed130 Gradient[300 x 1 x *]] }
00000035287E19B0: {[LSTMoutput.WcfdelayCF Gradient[300 x 1 x *]] }
00000035287E1AF0: {[LSTMoutput.unnamed134 Gradient[300 x 1 x *]] }
00000035287E1CD0: {[LSTMoutput.Wco Gradient[300 x 1]] }
00000035287E1D70: {[LSTMoutput.unnamed136 Gradient[300 x 1 x *]] }
00000035287E1EB0: {[LSTMoutput.unnamed133 Gradient[300 x 1 x *]] }
00000035287E1F50: {[ce Gradient[1]] }
00000035287E1FF0: {[LSTMoutput.unnamed128 Gradient[300 x 1 x *]] }
00000035287E2090: {[LSTMoutput.outputTest Gradient[300 x 1 x *]] }
00000035287E21D0: {[LSTMoutput.WxcInput Gradient[300 x *]] [LSTMoutput.bi Gradient[300 x 1]] }
00000035287E2270: {[LSTMoutput.unnamed129 Gradient[300 x 1 x *]] }
00000035287E2310: {[LSTMoutput.WhcdelayHC Gradient[300 x 1 x *]] }
00000035287E23B0: {[LSTMoutput.unnamed124 Gradient[300 x 1 x *]] }
00000035287E2450: {[LSTMoutput.WcidelayCI Gradient[300 x 1 x *]] }
00000035287E2630: {[LSTMoutput.WhidelayHI Gradient[300 x 1 x *]] }
00000035287E26D0: {[LSTMoutput.ft Gradient[300 x 1 x *]] }
00000035287E2770: {[LSTMoutput.unnamed131 Gradient[300 x 1 x *]] }
00000035287E2810: {[LSTMoutput.Wcf Gradient[300 x 1]] }
00000035287E28B0: {[LSTMoutput.WhfdelayHF Gradient[300 x 1 x *]] }
00000035287E2950: {[LSTMoutput.bit Gradient[300 x 1 x *]] }
00000035287E29F0: {[LSTMoutput.bft Gradient[300 x 1 x *]] }
00000035287E2B30: {[LSTMoutput.delayHI Gradient[300 x 1 x *]] }
00000035287E2BD0: {[LSTMoutput.it Gradient[300 x 1 x *]] }
00000035287E2C70: {[LSTMoutput.Whi Gradient[300 x 300]] }
00000035287E2D10: {[LSTMoutput.bc Gradient[300 x 1]] }
00000035287E2DB0: {[LSTMoutput.delayCF Gradient[300 x 1 x *]] }
00000035287E2E50: {[LSTMoutput.unnamed132 Gradient[300 x 1 x *]] }

07/13/2016 04:44:34: No PreCompute nodes found, skipping PreCompute step.

07/13/2016 04:44:34: Starting Epoch 1: learning rate per sample = 0.100000  effective momentum = 0.900000  momentum as time constant = 94.9 samples

07/13/2016 04:44:34: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 51 lines with a total of 36+51 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
07/13/2016 04:44:34: Finished Epoch[ 1 of 3]: [Training] ce = 4.73985552 * 81; err = 4.73985552 * 81; totalSamplesSeen = 81; learningRatePerSample = 0.1; epochTime=0.115394s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 51 lines with a total of 36+51 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
07/13/2016 04:44:34: Final Results: Minibatch[1-51]: ce = 4.47236315 * 81; perplexity = 87.56340456; err = 4.47236315 * 81; perplexity = 87.56340456
07/13/2016 04:44:34: Finished Epoch[ 1 of 3]: [Validate] ce = 4.47236315 * 81; err = 4.47236315 * 81
07/13/2016 04:44:34: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu/cntkdebug.dnn.1'

07/13/2016 04:44:34: Starting Epoch 2: learning rate per sample = 0.100000  effective momentum = 0.900000  momentum as time constant = 94.9 samples

07/13/2016 04:44:34: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 51 lines with a total of 36+51 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
07/13/2016 04:44:34: Finished Epoch[ 2 of 3]: [Training] ce = 4.18123967 * 81; err = 4.18123967 * 81; totalSamplesSeen = 162; learningRatePerSample = 0.1; epochTime=0.100492s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 51 lines with a total of 36+51 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
07/13/2016 04:44:35: Final Results: Minibatch[1-51]: ce = 3.57867566 * 81; perplexity = 35.82606362; err = 3.57867566 * 81; perplexity = 35.82606362
07/13/2016 04:44:35: Finished Epoch[ 2 of 3]: [Validate] ce = 3.57867566 * 81; err = 3.57867566 * 81
07/13/2016 04:44:35: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu/cntkdebug.dnn.2'

07/13/2016 04:44:35: Starting Epoch 3: learning rate per sample = 0.100000  effective momentum = 0.900000  momentum as time constant = 94.9 samples

07/13/2016 04:44:35: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 51 lines with a total of 36+51 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
07/13/2016 04:44:35: Finished Epoch[ 3 of 3]: [Training] ce = 2.99693329 * 81; err = 2.99693329 * 81; totalSamplesSeen = 243; learningRatePerSample = 0.1; epochTime=0.099627s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 51 lines with a total of 36+51 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
07/13/2016 04:44:35: Final Results: Minibatch[1-51]: ce = 2.27111876 * 81; perplexity = 9.69023576; err = 2.27111876 * 81; perplexity = 9.69023576
07/13/2016 04:44:35: Finished Epoch[ 3 of 3]: [Validate] ce = 2.27111876 * 81; err = 2.27111876 * 81
07/13/2016 04:44:35: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160713044220.475327\Text_SLU@release_cpu/cntkdebug.dnn'
07/13/2016 04:44:35: CNTKCommandTrainEnd: LSTM

07/13/2016 04:44:35: Action "train" complete.


07/13/2016 04:44:35: ##############################################################################
07/13/2016 04:44:35: #                                                                            #
07/13/2016 04:44:35: # Action "write"                                                             #
07/13/2016 04:44:35: #                                                                            #
07/13/2016 04:44:35: ##############################################################################

BatchLUSequenceReader: Input file is C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.test.apos.pred.pos.head.IOB.simple

Post-processing network...

3 roots:
	ce = CrossEntropyWithSoftmax()
	err = CrossEntropyWithSoftmax()
	outputs = Softmax()

Loop[0] --> Loop_LSTMoutput.outputTest -> 31 nodes

	LSTMoutput.delayHO	LSTMoutput.WhodelayHO	LSTMoutput.unnamed134
	LSTMoutput.delayHF	LSTMoutput.WhfdelayHF	LSTMoutput.unnamed131
	LSTMoutput.delayCF	LSTMoutput.WcfdelayCF	LSTMoutput.unnamed130
	LSTMoutput.ft	LSTMoutput.delayCC	LSTMoutput.bft
	LSTMoutput.delayHI	LSTMoutput.WhidelayHI	LSTMoutput.unnamed125
	LSTMoutput.delayCI	LSTMoutput.WcidelayCI	LSTMoutput.unnamed124
	LSTMoutput.it	LSTMoutput.delayHC	LSTMoutput.WhcdelayHC
	LSTMoutput.unnamed129	LSTMoutput.unnamed128	LSTMoutput.unnamed127
	LSTMoutput.bit	LSTMoutput.ct	LSTMoutput.Wcoct
	LSTMoutput.unnamed133	LSTMoutput.ot	LSTMoutput.unnamed136
	LSTMoutput.outputTest

Validating network. 62 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [127 x *1]
Validating --> W1 = LearnableParameter() :  -> [127 x 300]
Validating --> LSTMoutput.Wxo = LearnableParameter() :  -> [300 x 150]
Validating --> Wlookup = LearnableParameter() :  -> [50 x 944]
Validating --> features = InputValue() :  -> [2832 x *1]
Validating --> featLookuped = LookupTable (Wlookup, features) : [50 x 944], [2832 x *1] -> [150 x *1]
Validating --> LSTMoutput.Wxoinput = Times (LSTMoutput.Wxo, featLookuped) : [300 x 150], [150 x *1] -> [300 x *1]
Validating --> LSTMoutput.bo = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.unnamed135 = Plus (LSTMoutput.Wxoinput, LSTMoutput.bo) : [300 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> LSTMoutput.Who = LearnableParameter() :  -> [300 x 300]
Validating --> LSTMoutput.Wco = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.Wxf = LearnableParameter() :  -> [300 x 150]
Validating --> LSTMoutput.Wxfinput = Times (LSTMoutput.Wxf, featLookuped) : [300 x 150], [150 x *1] -> [300 x *1]
Validating --> LSTMoutput.bf = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.unnamed132 = Plus (LSTMoutput.Wxfinput, LSTMoutput.bf) : [300 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> LSTMoutput.Whf = LearnableParameter() :  -> [300 x 300]
Validating --> LSTMoutput.Wcf = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.Wxi = LearnableParameter() :  -> [300 x 150]
Validating --> LSTMoutput.WxiInput = Times (LSTMoutput.Wxi, featLookuped) : [300 x 150], [150 x *1] -> [300 x *1]
Validating --> LSTMoutput.bi = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.unnamed126 = Plus (LSTMoutput.WxiInput, LSTMoutput.bi) : [300 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> LSTMoutput.Whi = LearnableParameter() :  -> [300 x 300]
Validating --> LSTMoutput.Wci = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.Wxc = LearnableParameter() :  -> [300 x 150]
Validating --> LSTMoutput.WxcInput = Times (LSTMoutput.Wxc, featLookuped) : [300 x 150], [150 x *1] -> [300 x *1]
Validating --> LSTMoutput.Whc = LearnableParameter() :  -> [300 x 300]
Validating --> LSTMoutput.bc = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.WhodelayHO = Times (LSTMoutput.Who, LSTMoutput.delayHO) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> LSTMoutput.unnamed134 = Plus (LSTMoutput.unnamed135, LSTMoutput.WhodelayHO) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WhfdelayHF = Times (LSTMoutput.Whf, LSTMoutput.delayHF) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> LSTMoutput.unnamed131 = Plus (LSTMoutput.unnamed132, LSTMoutput.WhfdelayHF) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WcfdelayCF = DiagTimes (LSTMoutput.Wcf, LSTMoutput.delayCF) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> LSTMoutput.unnamed130 = Plus (LSTMoutput.unnamed131, LSTMoutput.WcfdelayCF) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> LSTMoutput.ft = Sigmoid (LSTMoutput.unnamed130) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.bft = ElementTimes (LSTMoutput.ft, LSTMoutput.delayCC) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WhidelayHI = Times (LSTMoutput.Whi, LSTMoutput.delayHI) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> LSTMoutput.unnamed125 = Plus (LSTMoutput.unnamed126, LSTMoutput.WhidelayHI) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WcidelayCI = DiagTimes (LSTMoutput.Wci, LSTMoutput.delayCI) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> LSTMoutput.unnamed124 = Plus (LSTMoutput.unnamed125, LSTMoutput.WcidelayCI) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> LSTMoutput.it = Sigmoid (LSTMoutput.unnamed124) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WhcdelayHC = Times (LSTMoutput.Whc, LSTMoutput.delayHC) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> LSTMoutput.unnamed129 = Plus (LSTMoutput.WhcdelayHC, LSTMoutput.bc) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> LSTMoutput.unnamed128 = Plus (LSTMoutput.WxcInput, LSTMoutput.unnamed129) : [300 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> LSTMoutput.unnamed127 = Tanh (LSTMoutput.unnamed128) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.bit = ElementTimes (LSTMoutput.it, LSTMoutput.unnamed127) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.ct = Plus (LSTMoutput.bft, LSTMoutput.bit) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.Wcoct = DiagTimes (LSTMoutput.Wco, LSTMoutput.ct) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.unnamed133 = Plus (LSTMoutput.unnamed134, LSTMoutput.Wcoct) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.ot = Sigmoid (LSTMoutput.unnamed133) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.unnamed136 = Tanh (LSTMoutput.ct) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.outputTest = ElementTimes (LSTMoutput.ot, LSTMoutput.unnamed136) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutputW1 = Times (W1, LSTMoutput.outputTest) : [127 x 300], [300 x 1 x *1] -> [127 x 1 x *1]
Validating --> ce = CrossEntropyWithSoftmax (labels, LSTMoutputW1) : [127 x *1], [127 x 1 x *1] -> [1]
Validating --> err = CrossEntropyWithSoftmax (labels, LSTMoutputW1) : [127 x *1], [127 x 1 x *1] -> [1]
Validating --> outputs = Softmax (LSTMoutputW1) : [127 x 1 x *1] -> [127 x 1 x *1]

Validating network. 43 nodes to process in pass 2.

Validating --> LSTMoutput.delayHO = PastValue (LSTMoutput.outputTest) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WhodelayHO = Times (LSTMoutput.Who, LSTMoutput.delayHO) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.delayHF = PastValue (LSTMoutput.outputTest) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WhfdelayHF = Times (LSTMoutput.Whf, LSTMoutput.delayHF) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.delayCF = PastValue (LSTMoutput.ct) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WcfdelayCF = DiagTimes (LSTMoutput.Wcf, LSTMoutput.delayCF) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.delayCC = PastValue (LSTMoutput.ct) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.delayHI = PastValue (LSTMoutput.outputTest) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WhidelayHI = Times (LSTMoutput.Whi, LSTMoutput.delayHI) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.delayCI = PastValue (LSTMoutput.ct) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WcidelayCI = DiagTimes (LSTMoutput.Wci, LSTMoutput.delayCI) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.delayHC = PastValue (LSTMoutput.outputTest) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WhcdelayHC = Times (LSTMoutput.Whc, LSTMoutput.delayHC) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.unnamed129 = Plus (LSTMoutput.WhcdelayHC, LSTMoutput.bc) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]

Validating network. 14 nodes to process in pass 3.


Validating network, final pass.



19 out of 62 nodes do not share the minibatch layout with the input data.

Post-processing network complete.



Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

0000000000000000: {[LSTMoutput.Wcf Gradient[300 x 1]] [LSTMoutput.WcfdelayCF Gradient[300 x 1 x *1]] [LSTMoutput.Wci Gradient[300 x 1]] [LSTMoutput.WcidelayCI Gradient[300 x 1 x *1]] [LSTMoutput.Wco Gradient[300 x 1]] [LSTMoutput.Wcoct Gradient[300 x 1 x *1]] [LSTMoutput.Whc Gradient[300 x 300]] [LSTMoutput.WhcdelayHC Gradient[300 x 1 x *1]] [LSTMoutput.Whf Gradient[300 x 300]] [LSTMoutput.WhfdelayHF Gradient[300 x 1 x *1]] [LSTMoutput.Whi Gradient[300 x 300]] [LSTMoutput.WhidelayHI Gradient[300 x 1 x *1]] [LSTMoutput.Who Gradient[300 x 300]] [LSTMoutput.WhodelayHO Gradient[300 x 1 x *1]] [LSTMoutput.Wxc Gradient[300 x 150]] [LSTMoutput.WxcInput Gradient[300 x *1]] [LSTMoutput.Wxf Gradient[300 x 150]] [LSTMoutput.Wxfinput Gradient[300 x *1]] [LSTMoutput.Wxi Gradient[300 x 150]] [LSTMoutput.WxiInput Gradient[300 x *1]] [LSTMoutput.Wxo Gradient[300 x 150]] [LSTMoutput.Wxoinput Gradient[300 x *1]] [LSTMoutput.bc Gradient[300 x 1]] [LSTMoutput.bf Gradient[300 x 1]] [LSTMoutput.bft Gradient[300 x 1 x *1]] [LSTMoutput.bi Gradient[300 x 1]] [LSTMoutput.bit Gradient[300 x 1 x *1]] [LSTMoutput.bo Gradient[300 x 1]] [LSTMoutput.ct Gradient[300 x 1 x *1]] [LSTMoutput.delayCC Gradient[300 x 1 x *1]] [LSTMoutput.delayCF Gradient[300 x 1 x *1]] [LSTMoutput.delayCI Gradient[300 x 1 x *1]] [LSTMoutput.delayHC Gradient[300 x 1 x *1]] [LSTMoutput.delayHF Gradient[300 x 1 x *1]] [LSTMoutput.delayHI Gradient[300 x 1 x *1]] [LSTMoutput.delayHO Gradient[300 x 1 x *1]] [LSTMoutput.ft Gradient[300 x 1 x *1]] [LSTMoutput.it Gradient[300 x 1 x *1]] [LSTMoutput.ot Gradient[300 x 1 x *1]] [LSTMoutput.outputTest Gradient[300 x 1 x *1]] [LSTMoutput.unnamed124 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed125 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed126 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed127 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed128 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed129 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed130 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed131 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed132 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed133 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed134 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed135 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed136 Gradient[300 x 1 x *1]] [LSTMoutputW1 Gradient[127 x 1 x *1]] [W1 Gradient[127 x 300]] [Wlookup Gradient[50 x 944]] [ce Gradient[1]] [ce Value[1]] [err Gradient[1]] [err Value[1]] [featLookuped Gradient[150 x *1]] [features Gradient[2832 x *1]] [labels Gradient[127 x *1]] [outputs Gradient[127 x 1 x *1]] }
000000350E6DE7F0: {[LSTMoutput.Wci Value[300 x 1]] }
0000003516CBD8D0: {[LSTMoutput.Wcf Value[300 x 1]] }
0000003516CCEF40: {[LSTMoutput.unnamed132 Value[300 x 1 x *1]] }
0000003516CCEFE0: {[LSTMoutput.WxiInput Value[300 x *1]] }
0000003516CCF260: {[LSTMoutput.Wco Value[300 x 1]] }
0000003516CCF300: {[LSTMoutput.Wxf Value[300 x 150]] }
0000003516CCF580: {[LSTMoutput.Wxo Value[300 x 150]] }
0000003516CCF8A0: {[LSTMoutput.Wxi Value[300 x 150]] }
0000003516CCF940: {[W1 Value[127 x 300]] }
0000003516CCFBC0: {[featLookuped Value[150 x *1]] }
0000003516CCFC60: {[LSTMoutput.Wxoinput Value[300 x *1]] }
0000003516CCFDA0: {[LSTMoutput.unnamed135 Value[300 x 1 x *1]] }
0000003516CCFEE0: {[LSTMoutput.WxcInput Value[300 x *1]] }
0000003516CD0020: {[LSTMoutput.WhodelayHO Value[300 x 1 x *1]] }
0000003516CD00C0: {[outputs Value[127 x 1 x *1]] }
0000003516CD0160: {[LSTMoutput.unnamed126 Value[300 x 1 x *1]] }
0000003516CD0200: {[LSTMoutput.Whf Value[300 x 300]] }
0000003516CD02A0: {[LSTMoutput.unnamed134 Value[300 x 1 x *1]] }
0000003516CD0340: {[LSTMoutput.WhfdelayHF Value[300 x 1 x *1]] }
0000003516CD05C0: {[LSTMoutput.Who Value[300 x 300]] }
0000003516CD0660: {[LSTMoutput.Whi Value[300 x 300]] }
0000003516CD07A0: {[Wlookup Value[50 x 944]] }
0000003516CD0840: {[LSTMoutput.Wxc Value[300 x 150]] }
0000003516CD0B60: {[LSTMoutput.Whc Value[300 x 300]] }
0000003516CD0D40: {[LSTMoutput.Wxfinput Value[300 x *1]] }
000000352589AA60: {[LSTMoutput.delayHF Value[300 x 1 x *1]] }
000000352589B460: {[LSTMoutput.delayCF Value[300 x 1 x *1]] }
000000352589B640: {[LSTMoutput.delayCI Value[300 x 1 x *1]] }
000000352589B6E0: {[LSTMoutput.delayHI Value[300 x 1 x *1]] }
000000352589BA00: {[LSTMoutput.bo Value[300 x 1]] }
000000352589BB40: {[LSTMoutput.bf Value[300 x 1]] }
000000352589BFA0: {[features Value[2832 x *1]] }
000000352589C040: {[labels Value[127 x *1]] }
000000352589C220: {[LSTMoutput.delayCC Value[300 x 1 x *1]] }
000000352589C360: {[LSTMoutput.bi Value[300 x 1]] }
000000352589C400: {[LSTMoutput.delayHC Value[300 x 1 x *1]] }
000000352589C720: {[LSTMoutput.delayHO Value[300 x 1 x *1]] }
000000352589C7C0: {[LSTMoutput.bc Value[300 x 1]] }
0000003528867FA0: {[LSTMoutput.ot Value[300 x 1 x *1]] }
0000003528868040: {[LSTMoutput.WcidelayCI Value[300 x 1 x *1]] }
00000035288680E0: {[LSTMoutput.unnamed131 Value[300 x 1 x *1]] }
0000003528868180: {[LSTMoutputW1 Value[127 x 1 x *1]] }
0000003528868220: {[LSTMoutput.WhidelayHI Value[300 x 1 x *1]] }
00000035288682C0: {[LSTMoutput.unnamed127 Value[300 x 1 x *1]] }
0000003528868360: {[LSTMoutput.unnamed133 Value[300 x 1 x *1]] }
0000003528868860: {[LSTMoutput.bft Value[300 x 1 x *1]] }
00000035288689A0: {[LSTMoutput.outputTest Value[300 x 1 x *1]] }
0000003528868A40: {[LSTMoutput.WcfdelayCF Value[300 x 1 x *1]] }
0000003528868AE0: {[LSTMoutput.WhcdelayHC Value[300 x 1 x *1]] }
0000003528868B80: {[LSTMoutput.ct Value[300 x 1 x *1]] }
0000003528868FE0: {[LSTMoutput.it Value[300 x 1 x *1]] }
0000003528869080: {[LSTMoutput.unnamed124 Value[300 x 1 x *1]] }
0000003528869300: {[LSTMoutput.unnamed129 Value[300 x 1 x *1]] }
00000035288694E0: {[LSTMoutput.unnamed128 Value[300 x 1 x *1]] }
0000003528869800: {[LSTMoutput.unnamed130 Value[300 x 1 x *1]] }
00000035288698A0: {[LSTMoutput.Wcoct Value[300 x 1 x *1]] }
00000035288699E0: {[LSTMoutput.unnamed125 Value[300 x 1 x *1]] }
0000003528869A80: {[LSTMoutput.bit Value[300 x 1 x *1]] }
0000003528869BC0: {[LSTMoutput.unnamed136 Value[300 x 1 x *1]] }
0000003528869C60: {[LSTMoutput.ft Value[300 x 1 x *1]] }

BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 5 lines with a total of 92+5 tokens.
O O O O O O O O O O O O O O O O O O O O O 
O O O O O O O O O O O O O O O O O O 
O O O O O O O O O O O O O O O 
O O O O O O O O O O O O O O O O O O 
O O O O O O O O O O O O O O O O O O O 
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
Total Samples Evaluated = 91

07/13/2016 04:44:35: Action "write" complete.

07/13/2016 04:44:35: __COMPLETED__