run=ndlCreateNetwork

ndlCreateNetwork=[
    # vocabulary size
	featDim=10000
	# vocabulary size plus class size
	labelDim=10050
	# hidden layer size
	hiddenDim=200
	features=SparseInput(featDim, tag=feature)
	labels=SparseInput(labelDim, tag=label)

	# define network
    U0=SparseParameter(hiddenDim, featDim, init=uniform, initValueScale=6)
	W0=Parameter(hiddenDim, hiddenDim, init=uniform, initValueScale=6)
    W1=SparseParameter(labelDim, hiddenDim, init=uniform, initValueScale=6)	
	DelayNode = Delay(hiddenDim, Sig, delayTime=1, needGradient=true)	
	Times1 = Times(U0, features)
	Times2 = Times(W0, DelayNode)
	Plus1 = Plus(Times1, Times2)
	Sig = Sigmoid(Plus1)
	Out = Times(W1, Sig,tag=Output)
	cr = ClassBasedCrossEntropyWithSoftmax(labels, Sig, W1, tag=Criteria)
	Err = ClassBasedCrossEntropyWithSoftmax(labels, Sig, W1, tag=Eval)
]