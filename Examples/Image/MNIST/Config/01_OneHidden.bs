# number of pixels
featDim = 28 * 28

# number of distinct labels
labelDim = 10

# Setup input dimension
features = Input (featDim)

# Compute per pixel mean
featMean = Mean(features)

# Scale input
featScaled = (features - featMean) .* Constant(1/256)

# Setup classification labels
labels = Input (labelDim)

# Number of unit in the hidden layer
hiddenDim = 200

# DNNSigmoidLayer and DNNLayer
z  = DNNLayer        (hiddenDim, labelDim, h1, 1)

ce   = CrossEntropyWithSoftmax (labels, z)
errs = ErrorPrediction         (labels, z)

# set top5Errs as an evaluation node to compute the top-5 error rate
# This is not marked tag="evaluation" since expensive during training.
# We explicitly select it as an output node in the "test" command.
top5Errs = ErrorPrediction (labels, z, topN=5)

# declare special nodes
featureNodes    = (features)
labelNodes      = (labels)
criterionNodes  = (ce)
evaluationNodes = (errs)
outputNodes     = (z)
