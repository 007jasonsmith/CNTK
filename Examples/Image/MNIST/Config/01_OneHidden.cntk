# Parameters can be overwritten on the command line
# for example: cntk configFile=myConfigFile RootDir=../..
# For running from Visual Studio add
# currentDirectory=$(SolutionDir)/<path to corresponding data folder>
rootDir = ".."

configDir = "$rootDir$/Config"
dataDir   = "$rootDir$/Data"
outputDir = "$rootDir$/Output"
modelDir  = "$outputDir$/Models"

deviceId = auto
# override the above as follows when running on CPU:
# deviceId = -1

command = train:test

precision = "float"
modelPath = "$modelDir$/01_OneHidden"

# uncomment the following line to write logs to a file
# stderr = "$outputDir$/01_OneHidden_out"
traceLevel = 1
numMBsToShowResult = 500

#######################################
#  TRAINING CONFIG                    #
#######################################

train = [
    action = "train"

    # BrainScript version as described in Tutorial II.
    BrainScriptNetworkBuilder = [
        # macros to include
        include "Shared.bs"

        # include the definition file
        include "01_OneHidden.bs"
    ]

    SGD = [
        epochSize = 60000
        minibatchSize = 32
        learningRatesPerSample = 0.015625:0.003125 # (0.5/32:0.1/32)
        momentumAsTimeConstant = 0
        maxEpochs = 30
    ]

    reader = [
        readerType = "CNTKTextFormatReader"
        # See ../REAMDE.md for details on getting the data (Train-28x28_cntk_text.txt).
        file = "$DataDir$/Train-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]
]

#######################################
#  TEST CONFIG                        #
#######################################

test = [
    action = "test"
    minibatchSize = 1024    # reduce this if you run out of memory

    evalNodeNames = ce:errs:top5Errs

    reader = [
        readerType = "CNTKTextFormatReader"
        file = "$DataDir$/Test-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]
]
